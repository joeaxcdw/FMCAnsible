{
    "models": {
        "ILinks": {
            "type": "object",
            "properties": {
                "parent": {
                    "type": "string",
                    "description": "Full resource URL path to reference the parent (if any) for this resource."
                },
                "self": {
                    "type": "string",
                    "description": "Full resource URL path to reference this particular resource."
                }
            },
            "description": "This defines the self referencing links for the given resource."
        },
        "SSOServerOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SSOServerOverride"
                    }
                }
            }
        },
        "PrefilterPolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the prefilter policy.",
                    "$ref": "#/definitions/Metadata"
                },
                "defaultAction": {
                    "description": "Object representing the default action (PrefilterPolicyDefaultAction). The default action determines how the system handles and logs traffic not handled by any other prefilter rules. For more information, see the defaultactions service.",
                    "$ref": "#/definitions/IPrefilterPolicyDefaultAction"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the prefilter policy."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "rules": {
                    "type": "object",
                    "description": "Object containing a list of rules in the prefilter policy."
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the prefilter policy."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the prefilter policy; this value is always PrefilterPolicy."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Description of Prefilter Policy."
        },
        "StandardCommunityList": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStandardCommunityListEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IAdvertisement": {
            "type": "object",
            "properties": {
                "autoConfig": {
                    "type": "boolean"
                },
                "offlink": {
                    "type": "boolean"
                },
                "preferLifeTime": {
                    "$ref": "#/definitions/PreferLifeTime"
                }
            }
        },
        "VlanTagGroupOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VlanTagGroupOverride"
                    }
                }
            }
        },
        "IOspfv3Area": {
            "type": "object",
            "properties": {
                "defaultCost": {
                    "type": "integer",
                    "format": "int32"
                },
                "routeSummary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfv3RouteSummary"
                    }
                },
                "areaId": {
                    "type": "string"
                },
                "neighbors": {
                    "$ref": "#/definitions/IOspfv3Neighbor"
                },
                "areaType": {
                    "$ref": "#/definitions/IOspfAreaType"
                },
                "virtualLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfv3VirtualLinks"
                    }
                }
            }
        },
        "NetworkOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkOverride"
                    }
                }
            }
        },
        "IVirtualSwitch": {
            "type": "object",
            "properties": {
                "dropBPDU": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "sensorPolicy": {
                    "$ref": "#/definitions/IAccessPolicyModel"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "strictTCPEnforcement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "domainId": {
                    "type": "integer",
                    "format": "int32"
                },
                "staticMacEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStaticMacEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "switchedInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterface"
                    }
                },
                "enableSpanningTreeProtocol": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "hybridInterface": {
                    "$ref": "#/definitions/IInterface"
                }
            }
        },
        "SSOServerListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SSOServer"
                    }
                }
            }
        },
        "AccessPolicyCategory": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the access policy category.",
                    "$ref": "#/definitions/AccessPolicyCategoryMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the access policy category."
                },
                "description": {
                    "type": "string",
                    "description": "Description of access policy category."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the access policy category."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the access control policy category; this value is always AccessPolicyCategory."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Description of Access Policy Category."
        },
        "Snort3IntrusionRuleGroupsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Snort3IntrusionRuleGroups"
                    }
                }
            }
        },
        "FTDS2SVpnModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDS2SVpnModel"
                    }
                }
            }
        },
        "SecurexConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "clientId": {
                    "type": "string",
                    "description": "Field represents Client ID of the FMC generated from the Securex. If clientId is present in the PUT request, clientPassword has to be present."
                },
                "name": {
                    "type": "string",
                    "description": "Field represents Securex Configuration name. This is a predefined constant in the configuration."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "This is a predefined pseudo id of the Securex Configuration object"
                },
                "type": {
                    "type": "string",
                    "description": "Field represents Securex Configuration object type. This is a constant defined in the model."
                },
                "version": {
                    "type": "string"
                },
                "clientPassword": {
                    "type": "string",
                    "description": "Field represents Client Password for the Client ID generated for the FMC from Securex. If clientPassword is present in the PUT request, clientId has to be present."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Field represents whether Securex Configuration is enabled or not. This is a required field in the PUT configuration."
                }
            },
            "description": "Defines Securex Configuration Object. This is a singleton configuration object to update configuration on System->Users->Securex page, that supports GET and PUT APIs."
        },
        "GlobalObjectSearch": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/IMetadata"
                },
                "searchCriteria": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type of resource."
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISearchResult"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "A model representing global object search response."
        },
        "InterfaceObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceDeviceModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IIPv4Container": {
            "type": "object",
            "properties": {
                "static": {
                    "$ref": "#/definitions/IStaticIPContainer"
                },
                "pppoe": {
                    "$ref": "#/definitions/IPPPoEContianer"
                },
                "dhcp": {
                    "$ref": "#/definitions/IDHCPContainer"
                }
            }
        },
        "ISourceZoneObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "PolicyListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyList"
                    }
                }
            }
        },
        "IUrlBase": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "AuthRoles": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "INeighborAdvertiseMaps": {
            "type": "object",
            "properties": {
                "routeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "existRouteMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "id": {
                    "type": "string"
                },
                "existMap": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "FilePolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilePolicy"
                    }
                }
            }
        },
        "SyslogConfigListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SyslogConfig"
                    }
                }
            }
        },
        "RESTDiscoveryInfo": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "caCert": {
                    "type": "string"
                },
                "feedContent": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "invalidObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "feedStatus": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "downloadOn": {
                    "type": "boolean"
                },
                "nextRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "property": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "checksum": {
                    "type": "string"
                },
                "llfeedConfig": {
                    "$ref": "#/definitions/LLFeedConfig"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "clientPrivateKey": {
                    "type": "string"
                },
                "subscribedCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "clientCert": {
                    "type": "string"
                },
                "delivery": {
                    "type": "string"
                },
                "finishTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "availableCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "lastRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "runNow": {
                    "type": "boolean"
                },
                "totalDiscardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "refresh": {
                    "type": "integer",
                    "format": "int32"
                },
                "params": {
                    "$ref": "#/definitions/LLParams"
                },
                "uri": {
                    "type": "string"
                },
                "feedConfig": {
                    "$ref": "#/definitions/LLFeedConfig"
                },
                "version": {
                    "type": "string"
                },
                "discoveryInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "totalInvalidObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMsg": {
                    "$ref": "#/definitions/LLStatusMsg"
                },
                "passwd": {
                    "type": "string"
                },
                "startHour": {
                    "type": "integer",
                    "format": "int32"
                },
                "discardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "feedType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "VrfOspfPolicyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VrfOspfPolicyModel"
                    }
                }
            }
        },
        "SecurityZoneObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/IMetadata"
                },
                "interfaces": {
                    "type": "array",
                    "description": "Objects representing interfaces belonging to security zone.",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "interfaceMode": {
                    "type": "string",
                    "enum": [
                        "PASSIVE",
                        "INLINE",
                        "SWITCHED",
                        "ROUTED",
                        "ASA"
                    ]
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceDeviceModel"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: SecurityZone."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing zone object definition."
        },
        "AccessRule": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the access rule.",
                    "$ref": "#/definitions/AccessRuleMetadata"
                },
                "snmpConfig": {
                    "description": "Object representing the SNMP alert associated with the access rule.",
                    "$ref": "#/definitions/ISNMPConfig"
                },
                "timeRangeObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ITimeRangeModel"
                    }
                },
                "sourceNetworks": {
                    "description": "Object representing source networks selected for the access rule.",
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "syslogSeverity": {
                    "type": "string",
                    "description": "Specifies the Override Severity if alerts are being sent to default syslog configuration. One of: ALERT | CRIT | DEBUG | EMERG | ERR | INFO | NOTICE | WARNING.",
                    "enum": [
                        "ALERT",
                        "CRIT",
                        "DEBUG",
                        "EMERG",
                        "ERR",
                        "INFO",
                        "NOTICE",
                        "WARNING"
                    ]
                },
                "sourceZones": {
                    "description": "Object representing source zones selected for the access rule.",
                    "$ref": "#/definitions/ISourceZoneContainer"
                },
                "destinationZones": {
                    "description": "Object representing destination zones selected for the access rule.",
                    "$ref": "#/definitions/ISecurityZoneContainer"
                },
                "destinationDynamicObjects": {
                    "description": "Object representing destination dynamic objects selected for the access rule.",
                    "$ref": "#/definitions/IDynamicObjectsContainer"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "originalSourceNetworks": {
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always AccessRule."
                },
                "enableSyslog": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the alerts associated with the access rule are sent to default syslog configuration in Access Control Logging."
                },
                "safeSearch": {
                    "description": "Object representing the SafeSearch attribute (specified on the Applications tab of the Editing Rule dialog).",
                    "$ref": "#/definitions/ISafeSearch"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the access rule is in effect (true) or not (false). Default is true."
                },
                "destSGTTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "syslogConfig": {
                    "description": "Object representing the syslog alert associated with the access rule.",
                    "$ref": "#/definitions/ISyslogConfig"
                },
                "urls": {
                    "description": "Object representing the URLs and categories selected for the rule.",
                    "$ref": "#/definitions/IUrlObjectsContainer"
                },
                "endPointDeviceTypes": {
                    "type": "array",
                    "description": "Object representing the Endpoint Device Types (specified on the SGT/ISE Attributes tab of the Editing Rule dialog).",
                    "items": {
                        "$ref": "#/definitions/IEndPointDeviceType"
                    }
                },
                "youTube": {
                    "description": "Object representing the YouTubeEDU attribute (specified on the Applications tab of the Editing Rule dialog).",
                    "$ref": "#/definitions/IYouTube"
                },
                "destinationNetworks": {
                    "description": "Object representing destination networks selected for the access rule.",
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "action": {
                    "type": "string",
                    "description": "Specifies the action to take when the conditions defined by the rule are met. One of: ALLOW | TRUST | BLOCK | MONITOR | BLOCK_RESET | BLOCK_INTERACTIVE | BLOCK_RESET_INTERACTIVE.",
                    "enum": [
                        "ALLOW",
                        "TRUST",
                        "BLOCK",
                        "MONITOR",
                        "BLOCK_RESET",
                        "BLOCK_INTERACTIVE",
                        "BLOCK_RESET_INTERACTIVE"
                    ]
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "networkAccessDeviceIPs": {
                    "description": "Object representing the Network Access Device IPs (specified on the SGT/ISE Attributes tab of the Editing Rule dialog).",
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the access rule."
                },
                "sourceSecurityGroupTags": {
                    "description": "Object representing the Security Group Tag (specified on the Dynamic Attributes tab of the Editing Rule dialog).",
                    "$ref": "#/definitions/ISecurityGroupTagContainer"
                },
                "destinationSecurityGroupTags": {
                    "$ref": "#/definitions/ISecurityGroupTagContainer"
                },
                "logEnd": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will log events at the end of the connection. Default is false. If 'MONITOR' action is selected for access rule, logEnd will always be true."
                },
                "logBegin": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will log events at the beginning of the connection. Default is false. If 'MONITOR' action is selected for access rule, logBegin will always be false."
                },
                "sendEventsToFMC": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will send events to the Firepower Management Center event viewer. Default is false. If 'MONITOR' action is selected for access rule, sendEventsToFMC will always be true."
                },
                "destinationPorts": {
                    "description": "Object representing destination ports selected for the rule.",
                    "$ref": "#/definitions/IPortObjectsContainer"
                },
                "sourcePorts": {
                    "description": "Object representing source ports selected for the rule.",
                    "$ref": "#/definitions/IPortObjectsContainer"
                },
                "ipsPolicy": {
                    "description": "Object representing the intrusion policy settings for the rule action (specified on the Inspection tab). For more information on intrusion policies, see \"Access Control Using Intrusion and File Policies\" in the Firepower Management Center Configuration Guide.",
                    "$ref": "#/definitions/IIntrusionPolicyModel"
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "variableSet": {
                    "description": "Object representing the variable set associated with the access rule.",
                    "$ref": "#/definitions/IVariableSet"
                },
                "users": {
                    "description": "Object representing users selected for the rule. ",
                    "$ref": "#/definitions/IUsersContainer"
                },
                "logFiles": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will log file events. Default is false."
                },
                "filePolicy": {
                    "description": "Object representing the file policy settings for the rule action.",
                    "$ref": "#/definitions/IFilePolicy"
                },
                "commentHistoryList": {
                    "type": "array",
                    "description": "List of comments in the access rule's comment history.",
                    "items": {
                        "$ref": "#/definitions/ICommentHistory"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the access rule."
                },
                "sourceDynamicObjects": {
                    "description": "Object representing source dynamic objects selected for the access rule.",
                    "$ref": "#/definitions/IDynamicObjectsContainer"
                },
                "vlanTags": {
                    "description": "Object representing the VLAN tag set associated with the access rule.",
                    "$ref": "#/definitions/IVLanTagsContainer"
                },
                "applications": {
                    "description": "Object representing applications selected in the content restriction settings (on the Applications tab of the Editing Rule dialog). This includes the Safe Search and YouTube EDU services.",
                    "$ref": "#/definitions/IApplicationsContainer"
                }
            },
            "description": "Represents Access Rule contained within an Access Policy."
        },
        "IPv6AddressPoolListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv6AddressPool"
                    }
                }
            }
        },
        "VpnPKIEnrollmentModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IOspfNsfGracefulRestart": {
            "type": "object",
            "properties": {
                "nsfEnable": {
                    "type": "boolean"
                },
                "nsfMechanism": {
                    "type": "string",
                    "enum": [
                        "CISCO",
                        "IETF",
                        "NONE"
                    ]
                },
                "nsfHelper": {
                    "type": "boolean"
                },
                "nsfRestartIntraval": {
                    "type": "integer",
                    "format": "int32"
                },
                "nsfCapability": {
                    "type": "boolean"
                },
                "nsfEnforceGlobal": {
                    "type": "boolean"
                }
            }
        },
        "HealthMonitorModel": {
            "type": "object",
            "properties": {
                "dateTime": {
                    "type": "string"
                },
                "healthMonitorMetric": {
                    "$ref": "#/definitions/IHealthMonitorMetric"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "metric": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IPatOptionsContainer": {
            "type": "object",
            "properties": {
                "blockAllocation": {
                    "type": "boolean"
                },
                "patPoolAddress": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "includeReserve": {
                    "type": "boolean"
                },
                "flatPortRange": {
                    "type": "boolean"
                },
                "interfacePat": {
                    "type": "boolean"
                },
                "extendedPat": {
                    "type": "boolean"
                },
                "roundRobin": {
                    "type": "boolean"
                }
            }
        },
        "IOspfv3Timers": {
            "type": "object",
            "properties": {
                "spfThrottleTimer": {
                    "$ref": "#/definitions/ISpfThrottleTimer"
                },
                "lsaThrottleTimer": {
                    "$ref": "#/definitions/ILsaThrottleTimer"
                },
                "lsaGroup": {
                    "type": "integer",
                    "format": "int32"
                },
                "retransmission": {
                    "type": "integer",
                    "format": "int32"
                },
                "lsaArrival": {
                    "type": "integer",
                    "format": "int32"
                },
                "floodPacing": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "HostScanPackageObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "fileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Snort3IPSRulesFileUpload": {
            "type": "object",
            "properties": {
                "summary": {
                    "description": "Object representing details of Deleted,Added,Unassociated,Updated,Skipped rules.",
                    "$ref": "#/definitions/RuleImportSummary"
                },
                "ruleGroups": {
                    "type": "object",
                    "description": "Indicates the comma separated List of rule groups to which rules should be associated."
                },
                "validateOnly": {
                    "type": "boolean",
                    "description": "Specifies if rules should be validated or validated and imported. Default value is true."
                },
                "ruleImportMode": {
                    "type": "string",
                    "description": "Indicates the rule Import mode. Can be either MERGE or REPLACE.",
                    "enum": [
                        "MERGE",
                        "REPLACE"
                    ]
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFileWrapper"
                    }
                }
            },
            "description": "An object that represents the details for Snort3 custom rule import."
        },
        "IPolicyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ApplicationProductivityListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationProductivity"
                    }
                }
            }
        },
        "Snort3IPSRules": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "description": "User provided rule description."
                },
                "metadata": {
                    "description": "Object representing metadata attributes for the intrusion rule.",
                    "$ref": "#/definitions/Metadata"
                },
                "ruleGroups": {
                    "type": "array",
                    "description": "Object containing a list of rules groups associated with the rule.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "gid": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Generator Identifier used to identify the part of Snort which generates an event."
                },
                "overrideState": {
                    "type": "string",
                    "description": "User override state of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
                    "enum": [
                        "DROP",
                        "BLOCK",
                        "ALERT",
                        "DISABLE",
                        "DEFAULT"
                    ]
                },
                "defaultState": {
                    "type": "string",
                    "description": "Default State of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
                    "enum": [
                        "DROP",
                        "BLOCK",
                        "ALERT",
                        "DISABLE",
                        "DEFAULT"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "threshold": {
                    "description": "This field is disabled.",
                    "$ref": "#/definitions/IIntrusionRuleThreshold"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always IntrusionRule."
                },
                "version": {
                    "type": "string"
                },
                "sid": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Snort Identifier used to uniquely identify Snort rules."
                },
                "revision": {
                    "type": "integer",
                    "format": "int32"
                },
                "ruleAction": {
                    "type": "array",
                    "description": "This field is disabled.",
                    "items": {
                        "$ref": "#/definitions/IRuleAction"
                    }
                },
                "newComments": {
                    "type": "array",
                    "description": "Object representing the new comments provided in this resource.",
                    "items": {
                        "type": "string"
                    }
                },
                "isSystemDefined": {
                    "type": "boolean",
                    "description": "Read-only field indicating if the rule is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
                },
                "commentHistoryList": {
                    "type": "array",
                    "description": "This is a read-only list of all comments added to this resource.",
                    "items": {
                        "$ref": "#/definitions/ICommentHistory"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the intrusion rule."
                },
                "suppression": {
                    "description": "List of rule suppressions. Object containing configuration which allows users to suppress events for a rule for specific trusted IP addresses.  Will be returned when rules are fetched globally and without any specific policy.",
                    "$ref": "#/definitions/IIntrusionRuleSuppression"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the intrusion rule."
                },
                "ruleData": {
                    "type": "string",
                    "description": "Details of the rule based on which rule created or updated."
                }
            },
            "description": "Object representing the per-policy behaviour of a specified intrusion rule for a target intrusion policy."
        },
        "CommunityList": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "expandedEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IExpandedCommunityListEntry"
                    }
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "standardEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStandardCommunityListEntry"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "LocalRealmUserListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocalRealmUser"
                    }
                }
            }
        },
        "FTDHADeviceContainerListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDHADeviceContainer"
                    }
                }
            }
        },
        "FPPhysicalInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "enabled": {
                    "type": "integer",
                    "format": "int32"
                },
                "mtu": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string"
                },
                "interfaceType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "MANAGEMENT",
                        "PASSIVE",
                        "INLINE",
                        "SWITCHED",
                        "ROUTED",
                        "HA_LINK",
                        "ASA"
                    ]
                },
                "mdi": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "staticArpEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStaticArpEntry"
                    }
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "IRadiusServers": {
            "type": "object",
            "required": [
                "authenticationPort",
                "host",
                "secretKey"
            ],
            "properties": {
                "accountingPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "useRoutingToSelectInterface": {
                    "type": "boolean",
                    "description": "Specify the routing table or the interface to be used to connect the radius server"
                },
                "secretKey": {
                    "type": "string"
                },
                "host": {
                    "type": "string",
                    "description": "IP Address or the FQDN Name of the Radius Server"
                },
                "interface": {
                    "description": "Interface to connect the Radius Server.",
                    "$ref": "#/definitions/IReference"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time in seconds that FTD waits for Radius Server's response."
                },
                "authenticationPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "redirectACL": {
                    "description": "Acl that needed to be applied for dynamic authorization.",
                    "$ref": "#/definitions/IReference"
                }
            },
            "description": "Radius servers are used to authenticate users logging in through Remote Access VPN connections."
        },
        "NetworkGroupOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false of overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing Network group override definition."
        },
        "INeighborMaximumPrefix": {
            "type": "object",
            "properties": {
                "maxPrefixLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "warningOnly": {
                    "type": "boolean"
                },
                "thresholdValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "restartInterval": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IPv6StaticRouteModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv6StaticRouteModel"
                    }
                }
            }
        },
        "DNSServerGroupObject": {
            "type": "object",
            "properties": {
                "defaultdomain": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "dnsservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INameServer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "overrideTargetId": {
                    "type": "string"
                },
                "retries": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "FTDNatPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDNatPolicy"
                    }
                }
            }
        },
        "INeighborHaMode": {
            "type": "object",
            "properties": {
                "disable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IFMCServerInfo": {
            "type": "object",
            "properties": {
                "modelName": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "swVersion": {
                    "type": "string"
                },
                "modelId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipAddress": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "hwRole": {
                    "type": "string"
                }
            }
        },
        "IUrlCategoryAndReputation": {
            "type": "object",
            "properties": {
                "reputation": {
                    "type": "string",
                    "enum": [
                        "ANY_EXCEPT_UNKNOWN",
                        "TRUSTED",
                        "FAVORABLE",
                        "NEUTRAL",
                        "QUESTIONABLE",
                        "UNTRUSTED",
                        "ANY_AND_UNKNOWN",
                        "TRUSTED_AND_UNKNOWN",
                        "FAVORABLE_AND_UNKNOWN",
                        "NEUTRAL_AND_UNKNOWN",
                        "QUESTIONABLE_AND_UNKNOWN",
                        "UNTRUSTED_AND_UNKNOWN"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/IURLCategory"
                }
            }
        },
        "ICMPV6ObjectOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ICMPV6ObjectOverride"
                    }
                }
            }
        },
        "ApplicationFilter": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application filter.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the application filter."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the application filter."
                },
                "appConditions": {
                    "type": "array",
                    "description": "List of objects representing application conditions.",
                    "items": {
                        "$ref": "#/definitions/IAppCondition"
                    }
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationFilter."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "applications": {
                    "type": "array",
                    "description": "List of objects representing applications.",
                    "items": {
                        "$ref": "#/definitions/IApplicationModel"
                    }
                }
            },
            "description": "Represents an ApplicationFilter containing various Conditions and Applications."
        },
        "LLHashMap": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "HealthMetricListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HealthMetric"
                    }
                }
            }
        },
        "DynamicAccessPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicAccessPolicy"
                    }
                }
            }
        },
        "VlanTag": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "data": {
                    "description": "Object containing starting and ending VLAN identifier (VID) specifying the VLAN to which the frame belongs.",
                    "$ref": "#/definitions/IVlanTagLiteral"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing tag object definition."
        },
        "RESTSettings": {
            "type": "object",
            "properties": {
                "settings": {
                    "$ref": "#/definitions/LLSettings"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IReference": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Response object associated with resource."
                }
            },
            "description": "Contains reference information."
        },
        "ISpfThrottleTimer": {
            "type": "object",
            "properties": {
                "minimumHoldTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "maximumWaitTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "initialDelay": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FTDHADeviceContainer": {
            "type": "object",
            "required": [
                "ftdHABootstrap",
                "primary",
                "secondary"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties",
                    "$ref": "#/definitions/IMetadata"
                },
                "modelId": {
                    "type": "string",
                    "description": "Model ID of the FTD Devices used in FTD HA pair."
                },
                "advanced": {
                    "description": "Object representing Device Advanced Configuration.",
                    "$ref": "#/definitions/IAdvanced"
                },
                "description": {
                    "type": "string",
                    "description": "Retrieves or modifies the FTD HA record associated with the specified ID. Creates or breaks or deletes a FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA pairs."
                },
                "ftdHAFailoverTriggerCriteria": {
                    "description": "Conditions on which HA failover would be triggered.",
                    "$ref": "#/definitions/IFTDHAFailoverInterfacePolicyTrigger"
                },
                "modelType": {
                    "type": "string",
                    "description": "Model type of the FTD Devices used in FTD HA pair."
                },
                "type": {
                    "type": "string",
                    "description": "DeviceHAPair."
                },
                "version": {
                    "type": "string",
                    "description": "FTD HA model version."
                },
                "ftdHABootstrap": {
                    "description": "FTD HA Bootstrap object used during POST operation.",
                    "$ref": "#/definitions/IFTDDeviceHABootStrap"
                },
                "sw_version": {
                    "type": "string",
                    "description": "FTD HA device version."
                },
                "secondary": {
                    "description": "Represents the secondary device.",
                    "$ref": "#/definitions/IBaseDevice"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Health status of the FTD Devices used in FTD HA pair."
                },
                "healthPolicy": {
                    "description": "Health Policy of the FTD Devices used in FTD HA pair.",
                    "$ref": "#/definitions/IHealthPolicy"
                },
                "name": {
                    "type": "string",
                    "description": "User-chosen name."
                },
                "action": {
                    "type": "string",
                    "description": "FTD HA PUT operation action. Specifically used for breaking FTD HA or manual switch.",
                    "enum": [
                        "SWITCH",
                        "HABREAK"
                    ]
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "model": {
                    "type": "string",
                    "description": "FTDHADeviceContainer"
                },
                "modelNumber": {
                    "type": "string",
                    "description": "Model Number of the FTD Devices used in FTD HA pair."
                },
                "forceBreak": {
                    "type": "boolean",
                    "description": "FTD HA Force Break option."
                },
                "id": {
                    "type": "string",
                    "description": "FTD HA container UUID."
                },
                "accessPolicy": {
                    "description": "Object representing the access control policy associated with device",
                    "$ref": "#/definitions/IPolicyModel"
                },
                "primary": {
                    "description": "Primary Device object for FTD HA.",
                    "$ref": "#/definitions/IBaseDevice"
                }
            },
            "description": "Input representation of FTD HA pair."
        },
        "DynamicObjectMappingsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicObjectMappings"
                    }
                }
            }
        },
        "SSOConfigListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SSOConfig"
                    }
                }
            }
        },
        "CountryObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CountryObject"
                    }
                }
            }
        },
        "ExternalLookupListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalLookup"
                    }
                }
            }
        },
        "PendingChanges": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "entityUUID": {
                    "type": "string",
                    "description": " An identifier of entity which does not change with time."
                },
                "entityType": {
                    "type": "string",
                    "description": "An Entity type type that has been modified."
                },
                "valueUpdated": {
                    "type": "array",
                    "description": "Values that were specified compared to its other state. ",
                    "items": {
                        "$ref": "#/definitions/IValueUpdate"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "In case for an entity there is no diff, due to no modification or some error during generation proper message will be given for that entity."
                },
                "version": {
                    "type": "string"
                },
                "valueDeleted": {
                    "type": "array",
                    "description": "Values that were deleted compared to its other state.",
                    "items": {
                        "$ref": "#/definitions/IValueDelete"
                    }
                },
                "parentUUID": {
                    "type": "string",
                    "description": "UUID of the entity to which this entity is grouped to. If it's empty, it means the entity is the parent entity."
                },
                "referencesDeleted": {
                    "type": "array",
                    "description": "References that were deleted compared to its other state.",
                    "items": {
                        "$ref": "#/definitions/IReferenceUpdate"
                    }
                },
                "valueAdded": {
                    "type": "array",
                    "description": "Values that were added compared to its other state. ",
                    "items": {
                        "$ref": "#/definitions/IValueAdd"
                    }
                },
                "entityName": {
                    "type": "string",
                    "description": "A name field value of modified Entity. "
                },
                "lastUpdatedByUsers": {
                    "type": "array",
                    "description": "List of users who have modified the entity after last successful deployment.",
                    "items": {
                        "type": "string"
                    }
                },
                "action": {
                    "type": "string",
                    "description": "Action done on the entity",
                    "enum": [
                        "ADD",
                        "DELETE",
                        "UPDATE"
                    ]
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "referencesAdded": {
                    "type": "array",
                    "description": "References that were added compared to its other state.",
                    "items": {
                        "$ref": "#/definitions/IReferenceUpdate"
                    }
                }
            },
            "description": "Retrieves list changes between the last successful deployment and current saved configuration for the device,."
        },
        "IUrlLiteral": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ISISettings": {
            "type": "object",
            "properties": {
                "blocklist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISIObject"
                    }
                },
                "allowlist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISIObject"
                    }
                },
                "blocklistLogging": {
                    "$ref": "#/definitions/ISILogging"
                }
            }
        },
        "FTDRAVpnModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDRAVpnModel"
                    }
                }
            }
        },
        "FTDHAInterfaceMACAddressesListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDHAInterfaceMACAddresses"
                    }
                }
            }
        },
        "FTDAutoNatRuleListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDAutoNatRule"
                    }
                }
            }
        },
        "IInterfaceGroupObjectModel": {
            "type": "object",
            "properties": {
                "interfaceMode": {
                    "type": "string",
                    "enum": [
                        "PASSIVE",
                        "INLINE",
                        "SWITCHED",
                        "ROUTED"
                    ]
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceDeviceModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "AccessPolicyInheritanceSettingListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessPolicyInheritanceSetting"
                    }
                }
            }
        },
        "DynamicObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicObject"
                    }
                }
            }
        },
        "GroupPolicyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupPolicyModel"
                    }
                }
            }
        },
        "ISubTask": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/ITarget"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "UrlGroupOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UrlGroupOverride"
                    }
                }
            }
        },
        "TunnelTagsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TunnelTags"
                    }
                }
            }
        },
        "NetworkAddress": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "type": {
                    "type": "string",
                    "description": "Subtype of NetworkAddress (Host | Network | Range | NetworkGroup)."
                },
                "value": {
                    "type": "string",
                    "description": "Actual value of child object."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing Network Address definition representing parent of Network sub types."
        },
        "GroupPolicyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the Group Policy",
                    "$ref": "#/definitions/Metadata"
                },
                "enableSSLProtocol": {
                    "type": "boolean",
                    "description": "Enable SSL type of Remote Access VPN tunnel that can be used when applying this group policy"
                },
                "advancedSettings": {
                    "$ref": "#/definitions/IGroupPolicyAdvancedSettingsModel"
                },
                "name": {
                    "type": "string",
                    "description": " Identifies the Group Policy Object so that can be referred to other configurations"
                },
                "generalSettings": {
                    "$ref": "#/definitions/IGroupPolicyGeneralSettingsModel"
                },
                "description": {
                    "type": "string",
                    "description": "Represents the Group Policy configuration for RA VPN. It is a collation of Attribute and value pairs that determines parameters for the functionality of RA VPN"
                },
                "enableIPsecIKEv2Protocol": {
                    "type": "boolean",
                    "description": "Enable IPSec IKEv2 type of Remote Access VPN tunnel that can be used when applying this group policy"
                },
                "links": {
                    "description": "Specifies links to this object.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Specifies Unique identifier (UUID) representing the Group Policy object"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies unique type of the Group Policy."
                },
                "version": {
                    "type": "string"
                },
                "anyConnectSettings": {
                    "$ref": "#/definitions/IGroupPolicyAnyConnectSettingsModel"
                }
            },
            "description": "Model representing the Group Policy configuration for RA VPN."
        },
        "IOspfv3NeighborPriority": {
            "type": "object",
            "properties": {
                "pollInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FTDHAInterfaceMACAddresses": {
            "type": "object",
            "required": [
                "failoverActiveMac",
                "failoverStandbyMac",
                "physicalInterface"
            ],
            "properties": {
                "failoverActiveMac": {
                    "type": "string",
                    "description": "Interface MAC address in H.H.H format, where H is a 16-bit hexadecimal digit. For example, the MAC address 00-0C-F1-42-4C-DE would be entered as 000C.F142.4CDE"
                },
                "metadata": {
                    "description": "Object representing metadata properties",
                    "$ref": "#/definitions/IMetadata"
                },
                "failoverStandbyMac": {
                    "type": "string",
                    "description": "Standby MAC Address"
                },
                "physicalInterface": {
                    "description": "User chosen physical interface",
                    "$ref": "#/definitions/FTDBaseInterface"
                },
                "name": {
                    "type": "string",
                    "description": "System chosen name"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description"
                },
                "links": {
                    "description": "Object containing related links",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Identifier of a Firepower Threat Defense high availability failover interface MAC address"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Firepower Threat Defense high availability failover interface MAC address"
                },
                "version": {
                    "type": "string",
                    "description": "version"
                }
            },
            "description": "Input Representation of Firepower Threat Defense high availability failover interface MAC addresses record associated with the specified FTD HA pair"
        },
        "HealthAlertModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "moduleUUID": {
                    "type": "string",
                    "description": "UUID of the module on which the alert is raised"
                },
                "description": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the alert. This will always be Alert"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "moduleID": {
                    "type": "string",
                    "description": "ID of the module, it is one of APPLICATION_BYPASS, CARD_RESET, CPU, CPU_LINA, CPU_SNORT, CPU_SYSTEM, DISK_USAGE, EVENT_STREAM, HEALTH_MONITOR, HEARTBEAT, INTERFACE, HARDWARE_ALARM, POWER_SUPPLY, LIC, LIC_MONITOR, LINKSTATE_PROPAGATION, MEMORY_USAGE, MEMORY_USAGE_LINA, MEMORY_USAGE_SNORT, PEP, PROCESS, DISCOVERY_HEALTH, HOST_LIMIT, RRD_SERVER, SENSOR_HUB, INTRUSION_FILE_STATS, TEST, TIME_SYNC, TIME_SERIES_DATA_MONITOR, URLFILTER, SECURITY_INTELLIGENCE, AMP_FOR_ENDPOINTS, USER_AGENT, SMART_LICENSE, VPN, HIGH_AVAILABILITY, DATABASE, PLATFORM_FAULTS, THREAT_DATA_UPDATES, REALM, ISE, SNORT_IDENTITY_MEMORY_USAGE, MALWARE, DISK_STATUS, BACKLOG, STATIC_ANALYSIS, CLUSTER, INLINELINK_ALARM, RECONFIG_DETECTION, CONNECTIONS, CRITICAL_PROCESS, DEPLOYED_CONFIGURATION, SNORT_STATS and FTD_HA",
                    "enum": [
                        "APPLICATION_BYPASS",
                        "CARD_RESET",
                        "CPU",
                        "CPU_LINA",
                        "CPU_SNORT",
                        "CPU_SYSTEM",
                        "DISK_USAGE",
                        "EVENT_STREAM",
                        "HEALTH_MONITOR",
                        "HEARTBEAT",
                        "INTERFACE",
                        "HARDWARE_ALARM",
                        "POWER_SUPPLY",
                        "LICENSE",
                        "LICENSE_MONITOR",
                        "LINKSTATE_PROPAGATION",
                        "MEMORY_USAGE",
                        "MEMORY_USAGE_LINA",
                        "MEMORY_USAGE_SNORT",
                        "PEP",
                        "PROCESS",
                        "DISCOVERY_HEALTH",
                        "HOST_LIMIT",
                        "RRD_SERVER",
                        "APPLIANCE_HEARTBEAT",
                        "INTRUSION_FILE_STATS",
                        "TEST",
                        "TIME_SYNC",
                        "TIME_SERIES_DATA_MONITOR",
                        "URLFILTER",
                        "SECURITY_INTELLIGENCE",
                        "AMP_FOR_ENDPOINTS",
                        "USER_AGENT",
                        "SMART_LICENSE",
                        "VPN",
                        "HIGH_AVAILABILITY",
                        "DATABASE",
                        "PLATFORM_FAULTS",
                        "THREAT_DATA_UPDATES",
                        "REALM",
                        "ISE",
                        "SNORT_IDENTITY_MEMORY_USAGE",
                        "AMP_FOR_FIREPOWER_STATUS",
                        "DISK_STATUS",
                        "BACKLOG",
                        "LOCAL_MALWARE_ANALYSIS",
                        "CLUSTER",
                        "INLINELINK_ALARM",
                        "RECONFIG_DETECTION",
                        "CONNECTIONS",
                        "CRITICAL_PROCESS",
                        "DEPLOYED_CONFIGURATION",
                        "SNORT_STATS",
                        "FTD_HA",
                        "FILE_SYSTEM_INTEGRITY_CHECK",
                        "ASP_DROP",
                        "HIT_COUNT",
                        "NTP_SERVER",
                        "ROUTING_STATS",
                        "UNRESOLVED_GROUPS_MONITOR",
                        "CONN_STATUS_SSE",
                        "CONN_STATUS_AMP",
                        "FLOW_OFFLOAD",
                        "CHASSIS_STATUS_FTD",
                        "ADVANCED_SNORT_STATS",
                        "OUT_OF_BAND_CHANGES",
                        "FTD_CONFIG_RESOURCE_UTILISATION",
                        "SYBASE_STATUS",
                        "MYSQL",
                        "VPN_STATS",
                        "RABBITMQ",
                        "EVENT"
                    ]
                },
                "deviceUUID": {
                    "type": "string",
                    "description": "UUID of the device on which the alert is raised"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time in seconds at which the alert is raised, timestamp is in unix format"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the alert, it is one of GREEN, RED, YELLOW, DISABLED and RECOVERED",
                    "enum": [
                        "GREEN",
                        "DISABLED",
                        "RECOVERED",
                        "RED",
                        "ERROR",
                        "YELLOW"
                    ]
                }
            },
            "description": "An object representing the health alert."
        },
        "IInlinePair": {
            "type": "object",
            "properties": {
                "first": {
                    "$ref": "#/definitions/IInterface"
                },
                "second": {
                    "$ref": "#/definitions/IInterface"
                }
            }
        },
        "VrfStaticRouteModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VrfStaticRouteModel"
                    }
                }
            }
        },
        "IOspfTimers": {
            "type": "object",
            "properties": {
                "spfThrottleTimer": {
                    "$ref": "#/definitions/ISpfThrottleTimer"
                },
                "lsaThrottleTimer": {
                    "$ref": "#/definitions/ILsaThrottleTimer"
                },
                "lsaGroup": {
                    "type": "integer",
                    "format": "int32"
                },
                "retransmission": {
                    "type": "integer",
                    "format": "int32"
                },
                "lsaArrival": {
                    "type": "integer",
                    "format": "int32"
                },
                "floodPacing": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ISafeSearch": {
            "type": "object",
            "properties": {
                "actionForNonSupportedEngines": {
                    "type": "string",
                    "enum": [
                        "ALLOW",
                        "BLOCK",
                        "BLOCK_WITH_RESET"
                    ]
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "VrfOspfInterfacePolicyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VrfOspfInterfacePolicyModel"
                    }
                }
            }
        },
        "IRedistributeProtocolBase": {
            "type": "object",
            "properties": {
                "tagNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "routeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "routeMetric": {
                    "$ref": "#/definitions/IOspfRouteMetric"
                },
                "subnets": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "VpnAdvancedSettingsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VpnAdvancedSettings"
                    }
                }
            }
        },
        "RealmMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "hasUnresolvedReferences": {
                    "type": "boolean",
                    "description": "Field represents whether this `Realm` has unresolved references."
                },
                "isDownloading": {
                    "type": "boolean",
                    "description": "Field represents whether a download task is in progress."
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "systemDefined": {
                    "type": "boolean",
                    "description": "Field represents whether this `Realm` can be seen by other policies."
                },
                "duplicatedDomain": {
                    "type": "boolean",
                    "description": "Field represents whether an imported realm has 'adPrimaryDomain' that conflicts with an existing realm on the system. A realm with this flag set can not be enabled until the condition has been cleared."
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "description": "An object representing the metadata of the realm."
        },
        "OspfInterfacePolicyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceInterface": {
                    "$ref": "#/definitions/IFTDInterface"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "ospfProtocolConfiguration": {
                    "$ref": "#/definitions/IOspfProtocolConfiguration"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IApplicationRisk": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application risk.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application risk."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "Application risk resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the application risk."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationRisk."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Represents an ApplicationRisk."
        },
        "CertificateMapModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CertificateMapModel"
                    }
                }
            }
        },
        "IPv4PrefixList": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IIPvPrefixListEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IFTDDeviceHAFailoverLink": {
            "type": "object",
            "required": [
                "activeIP",
                "interfaceObject",
                "logicalName",
                "standbyIP"
            ],
            "properties": {
                "interfaceObject": {
                    "$ref": "#/definitions/IFTDBaseInterface"
                },
                "useIPv6Address": {
                    "type": "boolean"
                },
                "standbyIP": {
                    "type": "string"
                },
                "activeIP": {
                    "type": "string"
                },
                "logicalName": {
                    "type": "string"
                },
                "subnetMask": {
                    "type": "string"
                }
            }
        },
        "RESTFeedProperty": {
            "type": "object",
            "properties": {
                "llfeedProperty": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "expirationTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "publish": {
                    "type": "boolean"
                },
                "action": {
                    "type": "string"
                },
                "whitelist": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer",
                    "format": "int32"
                },
                "tags": {
                    "$ref": "#/definitions/LLTags"
                }
            }
        },
        "INeighborFiltering": {
            "type": "object",
            "properties": {
                "neighborMaximumPrefix": {
                    "$ref": "#/definitions/INeighborMaximumPrefix"
                },
                "neighborDistributeLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INeighborDistributeLists"
                    }
                },
                "neighborFilterList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INeighborFilterList"
                    }
                },
                "neighborRouteMap": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INeighborRouteMap"
                    }
                },
                "name": {
                    "type": "string"
                },
                "ipv6PrefixListFilter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IIpvPrefixListFilter"
                    }
                },
                "neighborDefaultOriginate": {
                    "$ref": "#/definitions/INeighborDefaultOriginate"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "ipv4PrefixListFilter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IIpvPrefixListFilter"
                    }
                }
            }
        },
        "IFTDBaseInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ICountryModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the country.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Country."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Identifier matching country from geolocation database."
                },
                "iso2": {
                    "type": "string",
                    "description": "ISO2 country code string."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always Country."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "iso3": {
                    "type": "string",
                    "description": "ISO3 country code string."
                }
            },
            "description": "Represents a Country."
        },
        "FTDNatPolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "rules": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IGroupPolicyAdvancedSettingsModel": {
            "type": "object",
            "properties": {
                "restrictVPNToVLANId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies the egress VLAN for remote access VPN sessions assigned to this group policy. The range is 1-4094.There is no default value."
                },
                "vpnTrafficFilterACL": {
                    "description": "Optional. Represents vpn-filter acl to post-decrypted traffic after it exits a tunnel and pre-encrypted traffic before it enters a tunnel. The ACL should be configured with the client assigned IP addresses as source and local network ip as destination in ACL.",
                    "$ref": "#/definitions/IReference"
                },
                "sessionSettings": {
                    "description": "Optional. Configures Session paramaters for VPN",
                    "$ref": "#/definitions/IGroupPolicySessionSettingsModel"
                }
            },
            "description": "Model representiing the Configurations for Advanced Settings for Group Policy."
        },
        "AnyConnectCustomAttributeModel": {
            "type": "object",
            "required": [
                "anyConnectAttribute"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the AnyConnect Package.",
                    "$ref": "#/definitions/Metadata"
                },
                "anyConnectAttribute": {
                    "type": "string",
                    "description": "Name of the added AnyConnect custom attribute variable"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "User provided resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing the AnyConnect Package object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: AnyConnectPackage."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "AnyConnect Custom Attribute objects represent custom attribute used in configurations, typically for remote access VPN policies. They can contain custom attribute in AnyConnect."
        },
        "IContinentModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the continent.",
                    "$ref": "#/definitions/IMetadata"
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "This field is deprecated and should not be used."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Continent."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "countries": {
                    "type": "array",
                    "description": "List of objects representing countries.",
                    "items": {
                        "$ref": "#/definitions/ICountryModel"
                    }
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Identifier matching contient from geolocation database."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always Continent."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Represents a Continent."
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "WARN"
                    ]
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorMessagesContainer"
                    }
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "FRAMEWORK",
                        "OTHER",
                        "VALIDATION"
                    ]
                }
            }
        },
        "DeploymentDetail": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "policyList": {
                    "type": "array",
                    "description": "Details of policies which were deployed to the device.",
                    "items": {
                        "$ref": "#/definitions/IPolicyModel"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the deployment job "
                },
                "description": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time in seconds at which the deployment was started, timestamp is in unix format"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "endTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time in seconds at which the deployment ended, timestamp is in unix format"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the deployment, can be one of DEPLOYING, SUCCEEDED, PARTIALLY_SUCCEEDED, FAILED, SSP_SUCCEEDED, SSP_FAILED, SSP_PRIMARY_BOOTSTRAP_SUCCEEDED, SSP_PRIMARY_BOOTSTRAP_FAILED, SSP_SECONDARY_BOOTSTRAP_SUCCEEDED, SSP_SECONDARY_BOOTSTRAP_FAILED, PRIMARY_BOOTSTRAP_SUCCEEDED, PRIMARY_BOOTSTRAP_FAILED, SECONDARY_BOOTSTRAP_SUCCEEDED, SECONDARY_BOOTSTRAP_FAILED, BREAK_SUCCEEDED, BREAK_FAILED, PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, SSP_PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, SSP_SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, BREAK_PARTIALLY_SUCCEEDED, CANCELLED and NONE ",
                    "enum": [
                        "DEPLOYING",
                        "SUCCEEDED",
                        "PARTIALLY_SUCCEEDED",
                        "FAILED",
                        "SSP_SUCCEEDED",
                        "SSP_FAILED",
                        "SSP_PRIMARY_BOOTSTRAP_SUCCEEDED",
                        "SSP_PRIMARY_BOOTSTRAP_FAILED",
                        "SSP_SECONDARY_BOOTSTRAP_SUCCEEDED",
                        "SSP_SECONDARY_BOOTSTRAP_FAILED",
                        "PRIMARY_BOOTSTRAP_SUCCEEDED",
                        "PRIMARY_BOOTSTRAP_FAILED",
                        "SECONDARY_BOOTSTRAP_SUCCEEDED",
                        "SECONDARY_BOOTSTRAP_FAILED",
                        "BREAK_SUCCEEDED",
                        "BREAK_FAILED",
                        "PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "SSP_PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "SSP_SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "BREAK_PARTIALLY_SUCCEEDED",
                        "CANCELLED",
                        "NONE"
                    ]
                }
            },
            "description": "An object representing the deployment details on a device"
        },
        "ProtocolPortObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProtocolPortObject"
                    }
                }
            }
        },
        "CloudRegionListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudRegion"
                    }
                }
            }
        },
        "IUrlObjectsContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IUrlBase"
                    }
                },
                "literals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IUrlLiteral"
                    }
                },
                "urlCategoriesWithReputation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IUrlCategoryAndReputation"
                    }
                }
            }
        },
        "INameServer": {
            "type": "object",
            "properties": {
                "name-server": {
                    "type": "string"
                }
            }
        },
        "RESTIndicatorListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTIndicator"
                    }
                }
            }
        },
        "AccessPolicySecurityIntelligencePolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessPolicySecurityIntelligencePolicy"
                    }
                }
            }
        },
        "IRollbackDeviceListEntry": {
            "type": "object",
            "properties": {
                "deviceList": {
                    "type": "array",
                    "description": "List of device UUIDs which are part of deployment job id.",
                    "items": {
                        "type": "string"
                    }
                },
                "deploymentJobId": {
                    "type": "string",
                    "description": "Deployment job UUID."
                }
            },
            "description": "Part of request body which contains deployment job ids and list of devices for config rollback."
        },
        "IGroupPolicyConnectionSettingsModel": {
            "type": "object",
            "properties": {
                "keepAliveMessageInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional.Specifies the interval for Keep-Alive messsage. Default is 20 seconds. Valid range is from 15 - 600 seconds."
                },
                "gatewayDPDInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. When enableGatewayDPD is enabled, interval is specified from 5 to 3600 seconds, with which the security appliance performs gateway dead peer detection.Default is 30 secs"
                },
                "clientFirewallPrivateNetworkRules": {
                    "description": "Optional. If the split tunnel is configured the private network rule is the rule applied to the VPN virtual adapter interface on the client",
                    "$ref": "#/definitions/IReference"
                },
                "rekeyMethod": {
                    "type": "string",
                    "description": "Optional. If SSL rekey is enabled, specifies if new tunnel has to be established or existing one has to be renegotiated. Default is NEW_TUNNEL",
                    "enum": [
                        "NEW_TUNNEL",
                        "EXISTING_TUNNEL"
                    ]
                },
                "bypassUnsupportProtocol": {
                    "type": "boolean",
                    "description": "Optional. Enables to determine whether to drop network traffic for which the FTD did not assign an IP address,or allow that traffic to bypass the FTD and be sent from the client unencrypted or in the clear. Default is False"
                },
                "rekeyInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies the number of minutes from the start of the session until the re-key takes place. Range is 4-10080. Default is 4 minutes"
                },
                "enableClientDPD": {
                    "type": "boolean",
                    "description": "Optional. Enables client to quickly detect a condition where the peer is not responding, and the connection has failed."
                },
                "enableKeepAliveMessages": {
                    "type": "boolean",
                    "description": "Optional. Enables connection through a proxy, firewall, or NAT device remains open. Default is True"
                },
                "enableGatewayDPD": {
                    "type": "boolean",
                    "description": "Optional. Enables that the security appliance (gateway) can quickly detect a condition where the peer is not responding, and the connection has failed."
                },
                "clientFirewallPublicNetworkRules": {
                    "description": "Optional. If the split tunnel is configured, the public network rule is the rule applied to other non-vpn interfaces on the client.",
                    "$ref": "#/definitions/IReference"
                },
                "enableSSLRekey": {
                    "type": "boolean"
                },
                "clientDPDInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies the DDPD interval from 5 to 3600 seconds, with which the client performs DPD. Default is 30 sec"
                }
            },
            "description": "Model representing the Configuration of Connection Settings for a Group Policy."
        },
        "IApplicationProductivity": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application productivity.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application productivity."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "Application productivity resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the application productivity."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationProductivity."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Represents an ApplicationProductivity."
        },
        "IVariableSet": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "RESTIndicator": {
            "type": "object",
            "properties": {
                "indicator": {
                    "$ref": "#/definitions/LLIndicator"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "pending": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "rawData": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "noRealizedIncidents": {
                    "type": "integer",
                    "format": "int32"
                },
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTObservable"
                    }
                },
                "feedId": {
                    "type": "string"
                },
                "effectiveProperty": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "noPartialIncidents": {
                    "type": "integer",
                    "format": "int32"
                },
                "customProperty": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "updatedAt": {
                    "type": "integer",
                    "format": "int32"
                },
                "equation": {
                    "$ref": "#/definitions/RESTIndicatorEquationNode"
                },
                "containsUnsupported": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "iteratorId": {
                    "type": "string"
                },
                "indicatorVersion": {
                    "type": "string"
                },
                "containsInvalid": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sourceName": {
                    "type": "string"
                },
                "inheritedProperty": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "fileId": {
                    "type": "string"
                }
            }
        },
        "FQDNOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FQDNOverride"
                    }
                }
            }
        },
        "CloudEventsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudEvents"
                    }
                }
            }
        },
        "URLGroupObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/URLGroupObject"
                    }
                }
            }
        },
        "AllowDNSRuleListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllowDNSRule"
                    }
                }
            }
        },
        "IDevice": {
            "type": "object",
            "required": [
                "hostName",
                "license_caps",
                "regKey"
            ],
            "properties": {
                "hostName": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "modelId": {
                    "type": "string"
                },
                "advanced": {
                    "$ref": "#/definitions/IAdvanced"
                },
                "natID": {
                    "type": "string"
                },
                "license_caps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "ftdMode": {
                    "type": "string",
                    "enum": [
                        "ROUTED",
                        "TRANSPARENT"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "snortEngine": {
                    "type": "string",
                    "enum": [
                        "SNORT2",
                        "SNORT3"
                    ]
                },
                "healthPolicy": {
                    "$ref": "#/definitions/IHealthPolicy"
                },
                "model": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "prohibitPacketTransfer": {
                    "type": "boolean"
                },
                "modelType": {
                    "type": "string"
                },
                "regKey": {
                    "type": "string"
                },
                "keepLocalEvents": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "sw_version": {
                    "type": "string"
                },
                "performanceTier": {
                    "type": "string"
                },
                "healthStatus": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "modelNumber": {
                    "type": "string"
                },
                "accessPolicy": {
                    "$ref": "#/definitions/IPolicyModel"
                },
                "deviceGroup": {
                    "$ref": "#/definitions/IDeviceGroup"
                }
            }
        },
        "RuleImportSummary": {
            "type": "object",
            "properties": {
                "deleted": {
                    "description": "Specifies the details of deleted rule.",
                    "$ref": "#/definitions/RuleImportSummaryEntry"
                },
                "added": {
                    "description": "Specifies the details of added rule.",
                    "$ref": "#/definitions/RuleImportSummaryEntry"
                },
                "unassociated": {
                    "description": "Specifies the details of unassociated rule.",
                    "$ref": "#/definitions/RuleImportSummaryEntry"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ruleimportsummary."
                },
                "updated": {
                    "description": "Specifies the details of updated rule.",
                    "$ref": "#/definitions/RuleImportSummaryEntry"
                },
                "skipped": {
                    "description": "Specifies the details of skipped rule.",
                    "$ref": "#/definitions/RuleImportSummaryEntry"
                }
            },
            "description": "An object that represents the details for imported Snort3 custom rules."
        },
        "INeighborHops": {
            "type": "object",
            "properties": {
                "neighborTtlSecurityHops": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "maxHopCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "disableConnectedCheck": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "Upgrade": {
            "type": "object",
            "properties": {
                "autoUpgradeCancel": {
                    "type": "boolean",
                    "description": "If set to True, the upgrade will be automatically canceled and go back to the original starting point upon an upgrade failure, otherwise the device will stay at the current state where it failed."
                },
                "metadata": {
                    "description": "Object representing metadata attributes for the triggered task.",
                    "$ref": "#/definitions/IMetadata"
                },
                "readinessCheckOnly": {
                    "type": "boolean",
                    "description": "Set to True if performing readiness check only, otherwise the device will start a real upgrade procedure. When both readinessCheckOnly and pushUpgradeFileOnly are set to true, readinessCheckOnly will take the precedence."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the upgrade."
                },
                "description": {
                    "type": "string",
                    "description": "More information about the upgrade."
                },
                "links": {
                    "description": "Object representing this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique ID of this operation."
                },
                "pushUpgradeFileOnly": {
                    "type": "boolean",
                    "description": "Set to True if pushing the upgrade file to device(s) only, otherwise actual upgrade will also be triggered. When both readinessCheckOnly and pushUpgradeFileOnly are set to true, readinessCheckOnly will take the precedence."
                },
                "type": {
                    "type": "string",
                    "description": "Upgrade"
                },
                "targets": {
                    "type": "array",
                    "description": "A list of FTD devices.",
                    "items": {
                        "$ref": "#/definitions/ITarget"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "upgradePackage": {
                    "description": "Object representing the upgrade package.",
                    "$ref": "#/definitions/UpgradePackage"
                }
            },
            "description": "This API is to trigger an upgrade/readinesscheck on a list of devices or just push an upgrade file to a list of devices."
        },
        "VrfIPv4StaticRouteModel": {
            "type": "object",
            "required": [
                "gateway",
                "interfaceName",
                "metricValue",
                "selectedNetworks"
            ],
            "properties": {
                "routeTracking": {
                    "$ref": "#/definitions/ISLAMonitorModel"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "selectedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "metricValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "isTunneled": {
                    "type": "boolean"
                },
                "interfaceName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/IHostObjectContainer"
                }
            }
        },
        "ExpandedCommunityList": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IExpandedCommunityListEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "AnyConnectPackageModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyConnectPackageModel"
                    }
                }
            }
        },
        "IHealthMonitorMetric": {
            "type": "object",
            "properties": {
                "unit": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PrefilterHitCountListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "description": "List of all hit count entries for given filter query on prefilter policy.",
                    "items": {
                        "$ref": "#/definitions/PrefilterHitCount"
                    }
                }
            },
            "description": "List of all hit count entries for given filter query on prefilter policy."
        },
        "IInterfaceObjectModel": {
            "type": "object",
            "properties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceDeviceModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IOspfAreaType": {
            "type": "object",
            "properties": {
                "routeMetric": {
                    "$ref": "#/definitions/IOspfRouteMetric"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "noSummary": {
                    "type": "boolean"
                },
                "noRedistribution": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IOverrideDefaultFragmentSetting": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "integer",
                    "format": "int32"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Ospfv3PolicyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ospfv3PolicyModel"
                    }
                }
            }
        },
        "IPortObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IPolicyStatus": {
            "type": "object",
            "properties": {
                "trafficInterrupting": {
                    "type": "boolean",
                    "description": "Boolean indicating a deployment can cause traffic interruption."
                },
                "upToDate": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the policy is out-of-date."
                },
                "versionTimeStamp": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Epoch time, indicating last modified time of the policy."
                },
                "modifiedUserInfoList": {
                    "type": "array",
                    "description": "List of ModifiedUserInfo objects containing LastModifiedTime and UserName.",
                    "items": {
                        "$ref": "#/definitions/IModifiedUserInfo"
                    }
                },
                "referredPolicyList": {
                    "type": "array",
                    "description": "List of PolicyStatus objects which are referred by the policy.",
                    "items": {
                        "$ref": "#/definitions/IPolicyStatus"
                    }
                },
                "policy": {
                    "description": "Object which contains Policy Information such as id, name and policy type.",
                    "$ref": "#/definitions/IPolicyModel"
                }
            }
        },
        "LocalRealmUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for the user."
                },
                "metadata": {
                    "description": "Object representing metadata properties of Local Realm Object.",
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the user"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "realm": {
                    "description": "Realm Object under which the user has to be added.",
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of Local Realm User"
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: LocalRealmUser."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Defines Local Realm User"
        },
        "InterfaceGroupObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InterfaceGroupObject"
                    }
                }
            }
        },
        "IInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "HostOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HostOverride"
                    }
                }
            }
        },
        "Duration": {
            "type": "object",
            "properties": {
                "validLifeTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "preferLifeTime": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IKeyChainObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IKeyObject"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Snort3IPSRulesObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Snort3IPSRulesObject"
                    }
                }
            }
        },
        "RealmUserListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RealmUser"
                    }
                }
            }
        },
        "IPFSSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "modulusGroup": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IVpnIkev1Settings": {
            "type": "object",
            "properties": {
                "automaticPreSharedKeyLength": {
                    "type": "integer",
                    "format": "int32"
                },
                "certificateAuth": {
                    "description": "Signing authority used for the VPN certificate.",
                    "$ref": "#/definitions/IReference"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "Type of authentication used for the VPN.",
                    "enum": [
                        "MANUAL_PRE_SHARED_KEY",
                        "AUTOMATIC_PRE_SHARED_KEY",
                        "CERTIFICATE"
                    ]
                },
                "manualPreSharedKey": {
                    "type": "string",
                    "description": "Contains the manual pre-shared key for the VPN, if any."
                },
                "policy": {
                    "description": "VPN policy.",
                    "$ref": "#/definitions/IReference"
                }
            },
            "description": "Contains information about Internet Key Exchange version 1 settings for VPNs."
        },
        "SSOServer": {
            "type": "object",
            "required": [
                "identityProviderCert",
                "idpEntityId",
                "ssoURL"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "requestSignatureType": {
                    "type": "string",
                    "description": " Possible values include NO_SIGNATURE|RSA_SHA1|RSA_SHA256|RSA_SHA384|RSA_SHA512"
                },
                "ssoURL": {
                    "type": "string",
                    "description": "URL or IP address at which the SAML provider will accept incoming requests to authenticate a user"
                },
                "serverOnInternalNetwork": {
                    "type": "boolean",
                    "description": "Indicates the SAML provider in on an inside network, default value is false"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: SSOServer."
                },
                "reAuthAtLogin": {
                    "type": "boolean",
                    "description": "Boolean indicating whether users are required to reauthenticate when logging into the SAML server."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string"
                },
                "idpEntityId": {
                    "type": "string",
                    "description": "SAML Identity Provider entityID"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "URL provided to third-party IdPs to redirect end users back to the ASA"
                },
                "logoutURL": {
                    "type": "string",
                    "description": "URL or IP address at which the SAML provider will accept incoming requests to log out. "
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "identityProviderCert": {
                    "$ref": "#/definitions/IReference"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object.."
                },
                "serviceProviderCert": {
                    "$ref": "#/definitions/IReference"
                },
                "requestTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timeout set by the provider. Allowed range is 1-7200 seconds. Default value is 0"
                }
            },
            "description": "A model representing SSO Server Object definition."
        },
        "VlanOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing vlan tag override definition."
        },
        "CommunityListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CommunityList"
                    }
                }
            }
        },
        "IStaticArpEntry": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                }
            }
        },
        "AnyConnectProfileModel": {
            "type": "object",
            "required": [
                "fileName",
                "fileType"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "fileName": {
                    "type": "string",
                    "description": "Name of the AnyConnect client file"
                },
                "name": {
                    "type": "string",
                    "description": "User provided resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing this resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: AnyConnectProfile."
                },
                "version": {
                    "type": "string"
                },
                "fileType": {
                    "type": "string",
                    "description": "Type of the AnyConnect file",
                    "enum": [
                        "ANYCONNECT_VPN_PROFILE",
                        "ANYCONNECT_MANAGEMENT_VPN_PROFILE",
                        "AMP_ENABLER",
                        "FEEDBACK",
                        "ISE_POSTURE",
                        "NETWORK_ACCESS_MANAGER",
                        "NETWORK_VISIBILITY",
                        "UMBRELLA_ROAMING",
                        "WEB_SECURITY"
                    ]
                }
            },
            "description": "File objects represent AnyConnect Client Profile files."
        },
        "IOspfv3NeighborProperties": {
            "type": "object",
            "properties": {
                "neighborCost": {
                    "$ref": "#/definitions/IOspfv3NeighborCost"
                },
                "neighborPriority": {
                    "$ref": "#/definitions/IOspfv3NeighborPriority"
                }
            }
        },
        "RESTCollectionTopic": {
            "type": "object",
            "properties": {
                "collectionSubType": {
                    "type": "string"
                },
                "collectionAddress": {
                    "type": "string"
                },
                "collectionContentBinding": {
                    "type": "string"
                },
                "collectionPollIntervalInMinutes": {
                    "type": "integer",
                    "format": "int32"
                },
                "llcollectionTopic": {
                    "$ref": "#/definitions/LLCollectionTopic"
                },
                "collectionDescription": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "collectionProtocolBinding": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "collectionMessageBinding": {
                    "type": "string"
                },
                "collectionName": {
                    "type": "string"
                }
            }
        },
        "INeighbors": {
            "type": "object",
            "properties": {
                "neighborTimers": {
                    "$ref": "#/definitions/INeighborTimers"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "neighborHaMode": {
                    "$ref": "#/definitions/INeighborHaMode"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "neighborAdvanced": {
                    "$ref": "#/definitions/INeighborAdvanced"
                },
                "neighborRoutes": {
                    "$ref": "#/definitions/INeighborRoutes"
                },
                "type": {
                    "type": "string"
                },
                "neighborFiltering": {
                    "$ref": "#/definitions/INeighborFiltering"
                },
                "neighborLocalAs": {
                    "$ref": "#/definitions/INeighborLocalAs"
                },
                "remoteAs": {
                    "type": "string"
                },
                "linkLocalInterface": {
                    "$ref": "#/definitions/IFTDInterface"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "neighborGeneral": {
                    "$ref": "#/definitions/INeighborGeneral"
                }
            }
        },
        "VrfOspfPolicyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "filterRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfFilterRule"
                    }
                },
                "logAdjacencyChanges": {
                    "$ref": "#/definitions/IOspfLogAdjChanges"
                },
                "description": {
                    "type": "string"
                },
                "enableProcess": {
                    "type": "string",
                    "enum": [
                        "PROCESS_1",
                        "PROCESS_2"
                    ]
                },
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfArea"
                    }
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfSummaryAddresses"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "processId": {
                    "type": "string"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfNeighbors"
                    }
                },
                "processConfiguration": {
                    "$ref": "#/definitions/IOspfProcessModel"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "redistributeProtocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRedistributeProtocolBase"
                    }
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "ISnort3PolicyRuleCount": {
            "type": "object",
            "properties": {
                "alert": {
                    "type": "integer",
                    "format": "int32"
                },
                "disabled": {
                    "type": "integer",
                    "format": "int32"
                },
                "block": {
                    "type": "integer",
                    "format": "int32"
                },
                "overridden": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PagingContainer": {
            "type": "object",
            "properties": {
                "pages": {
                    "type": "integer",
                    "format": "int32"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32"
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FTDVTIInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "tunnelSource": {
                    "$ref": "#/definitions/IInterface"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "tunnelSrcIPv6IntfAddr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "tunnelId": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ipsecMode": {
                    "type": "string"
                }
            }
        },
        "ISecurityGroupTagLiteral": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "SIURLFeedListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SIURLFeed"
                    }
                }
            }
        },
        "FTDBridgeGroupInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDBridgeGroupInterface"
                    }
                }
            }
        },
        "IHardwareContainer": {
            "type": "object",
            "properties": {
                "duplex": {
                    "type": "string",
                    "enum": [
                        "AUTO",
                        "FULL",
                        "HALF"
                    ]
                },
                "speed": {
                    "type": "string",
                    "enum": [
                        "AUTO",
                        "TEN",
                        "HUNDRED",
                        "THOUSAND",
                        "TEN_THOUSAND",
                        "TWENTY_FIVE_THOUSAND",
                        "FORTY_THOUSAND",
                        "HUNDRED_THOUSAND"
                    ]
                }
            }
        },
        "IPv4AddressPoolOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv4AddressPoolOverride"
                    }
                }
            }
        },
        "IS2SIkeAdvanceSettingModel": {
            "type": "object",
            "properties": {
                "peerIdentityValidation": {
                    "type": "string",
                    "enum": [
                        "DO_NOT_CHECK",
                        "REQUIRED",
                        "IF_SUPPORTED_BY_CERT"
                    ]
                },
                "enableNotificationOnTunnelDisconnect": {
                    "type": "boolean"
                },
                "thresholdToChallengeIncomingCookies": {
                    "type": "integer",
                    "format": "int32"
                },
                "ikeKeepaliveSettings": {
                    "$ref": "#/definitions/IIkeKeepaliveSettings"
                },
                "identitySentToPeer": {
                    "type": "string",
                    "enum": [
                        "IP_ADDRESS",
                        "HOST_NAME",
                        "AUTO_OR_DN"
                    ]
                },
                "cookieChallenge": {
                    "type": "string",
                    "enum": [
                        "CUSTOM",
                        "ALWAYS",
                        "NEVER"
                    ]
                },
                "enableAggressiveMode": {
                    "type": "boolean"
                },
                "percentageOfSAsAllowedInNegotiation": {
                    "type": "integer",
                    "format": "int32"
                },
                "maximumNumberOfSAsAllowed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IFTDRAVpnCertToConnectionProfileMap": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "connectionProfile": {
                    "$ref": "#/definitions/IReference"
                },
                "certificateMap": {
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "FTDRAVpnConnectionProfileModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDRAVpnConnectionProfileModel"
                    }
                }
            }
        },
        "PolicyList": {
            "type": "object",
            "required": [
                "action",
                "name"
            ],
            "properties": {
                "standardAccessListRouteSources": {
                    "type": "array",
                    "description": "Routes that have been advertised by routers and access servers at the address specified by the access lists.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "interfaces": {
                    "type": "array",
                    "description": "Add the Security zones/Interface groups that contain the interfaces through which the device communicates with the management station",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "ipv4PrefixListRouteSources": {
                    "type": "array",
                    "description": "Routes that have been advertised by routers and access servers at the address specified by the prefix lists.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "standardAccessListNextHops": {
                    "type": "array",
                    "description": "A next hop router address passed by one of the access lists specified. (standardAccessListNextHops and ipv4PrefixListAddresses are mutually exclusive)",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "description": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "PolicyList - type of this object"
                },
                "interfaceNames": {
                    "type": "array",
                    "description": "Interface logical names associated with this object",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv4PrefixListAddresses": {
                    "type": "array",
                    "description": "A destination address that is permitted by a prefix list (standardAccessListAddresses and ipv4PrefixListAddresses are mutually exclusive)",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "version": {
                    "type": "string"
                },
                "standardAccessListAddresses": {
                    "type": "array",
                    "description": "A destination address that is permitted by a standard access list (standardAccessListAddresses and ipv4PrefixListAddresses are mutually exclusive)",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "matchCommunityExactly": {
                    "type": "boolean",
                    "description": "Match the BGP community exactly with the specified community"
                },
                "metric": {
                    "type": "integer",
                    "format": "int32",
                    "description": "This setting allows you to match any routes that have a specified metric. The metric values can range from 0 to 4294967295."
                },
                "communityLists": {
                    "type": "array",
                    "description": "The route can match either community",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "ipv4PrefixListNexthops": {
                    "type": "array",
                    "description": "A next hop router address passed by one of the prefix lists specified.(standardAccessListNextHops and ipv4PrefixListAddresses are mutually exclusive)",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name for the policy list object"
                },
                "overridable": {
                    "type": "boolean"
                },
                "action": {
                    "type": "string",
                    "description": "Action to take for this matching criteria: PERMIT or DENY",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "tag": {
                    "type": "integer",
                    "format": "int32",
                    "description": "This setting allows you to match any routes that have a specified security group tag. The tag values can range from 0 to 4294967295"
                },
                "asPathLists": {
                    "type": "array",
                    "description": "BGP autonomous system path for matching criteria.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "unique object identifier"
                }
            },
            "description": "A policy list for use in a route map for Border Gateway Protocol (BGP)."
        },
        "LLObservation": {
            "type": "object",
            "properties": {
                "elementId": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/LLObservationData"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "elementName": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PortObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/PortMetadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing port object definition."
        },
        "VpnAdvancedSettings": {
            "type": "object",
            "properties": {
                "advancedIkeSetting": {
                    "$ref": "#/definitions/IS2SIkeAdvanceSettingModel"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "advancedTunnelSetting": {
                    "$ref": "#/definitions/IS2STunnelAdvanceSettingModel"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "advancedIpsecSetting": {
                    "$ref": "#/definitions/IS2SIpSecAdvanceSettingModel"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "VrfOspfInterfacePolicyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "deviceInterface": {
                    "$ref": "#/definitions/IFTDInterface"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "ospfProtocolConfiguration": {
                    "$ref": "#/definitions/IOspfProtocolConfiguration"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "InspectorConfigListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InspectorConfig"
                    }
                }
            }
        },
        "RealmListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Realm"
                    }
                }
            }
        },
        "IIntrusionUsage": {
            "type": "object",
            "properties": {
                "devices": {
                    "type": "integer",
                    "format": "int32"
                },
                "asscoiatedAcPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "accesspolicy": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IS2SIpSecAdvanceSettingModel": {
            "type": "object",
            "properties": {
                "enableFragmentationBeforeEncryption": {
                    "type": "boolean",
                    "description": "Indicates whether to enable transmission unit fragmentation before encryption."
                },
                "maximumTransmissionUnitAging": {
                    "description": "Duration of the MTU aging window.",
                    "$ref": "#/definitions/IMaximumTransmissionUnitAging"
                }
            },
            "description": "Contains site-to-site IPSec advanced settings."
        },
        "VrfIPv6StaticRouteModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VrfIPv6StaticRouteModel"
                    }
                }
            }
        },
        "RealmUserGroup": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Metadata object of the RealmUserGroup.",
                    "$ref": "#/definitions/RealmUserGroupMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the RealmUserGroup."
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "realm": {
                    "description": "Realm object for the group.",
                    "$ref": "#/definitions/IRealm"
                },
                "id": {
                    "type": "string",
                    "description": "Unique Identifier of the group."
                },
                "type": {
                    "type": "string",
                    "description": "Value is 'RealmUserGroup'. Read-only fixed value."
                }
            },
            "description": "Defines Identity RealmUserGroup Object."
        },
        "IFPPhysicalInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "enabled": {
                    "type": "integer",
                    "format": "int32"
                },
                "mtu": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string"
                },
                "interfaceType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "MANAGEMENT",
                        "PASSIVE",
                        "INLINE",
                        "SWITCHED",
                        "ROUTED",
                        "HA_LINK",
                        "ASA"
                    ]
                },
                "mdi": {
                    "type": "string"
                },
                "staticArpEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStaticArpEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "GlobalObjectSearchListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobalObjectSearch"
                    }
                }
            }
        },
        "IFilePolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IIntrusionRuleThreshold": {
            "type": "object",
            "properties": {
                "seconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time in seconds for which the rule is matched before generating an event."
                },
                "trackBy": {
                    "type": "string",
                    "description": "Value describing the attribute by which configuration generates the event. One of: SOURCE | DESTINATION",
                    "enum": [
                        "SOURCE",
                        "DESTINATION"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of seconds to match before generating an event."
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "thresholdType": {
                    "type": "string",
                    "description": "Rate which must be exceeded by a source or destination host before a rule can generate an event. One of: LIMIT | THRESHOLD | BOTH",
                    "enum": [
                        "LIMIT",
                        "THRESHOLD",
                        "BOTH"
                    ]
                }
            },
            "description": "Model representing intrusion rule threshold setting."
        },
        "URLObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: URL."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "url": {
                    "type": "string",
                    "description": "Actual URL of object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing url object definition."
        },
        "AccessPolicyLoggingSettingModel": {
            "type": "object",
            "properties": {
                "fileAndMalwareSyslogConfig": {
                    "$ref": "#/definitions/ISyslogConfig"
                },
                "syslogConfigFromPlatformSetting": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "ipsSyslogSeverity": {
                    "type": "string",
                    "enum": [
                        "ALERT",
                        "CRIT",
                        "DEBUG",
                        "EMERG",
                        "ERR",
                        "INFO",
                        "NOTICE",
                        "WARNING"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "enableFileAndMalwareSyslog": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "syslogConfig": {
                    "$ref": "#/definitions/ISyslogConfig"
                },
                "name": {
                    "type": "string"
                },
                "fileAndMalwareSyslogSeverity": {
                    "type": "string",
                    "enum": [
                        "ALERT",
                        "CRIT",
                        "DEBUG",
                        "EMERG",
                        "ERR",
                        "INFO",
                        "NOTICE",
                        "WARNING"
                    ]
                },
                "severityForPlatformSettingSyslogConfig": {
                    "type": "string",
                    "enum": [
                        "ALERT",
                        "CRIT",
                        "DEBUG",
                        "EMERG",
                        "ERR",
                        "INFO",
                        "NOTICE",
                        "WARNING"
                    ]
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "ipsSyslogConfig": {
                    "$ref": "#/definitions/ISyslogConfig"
                },
                "enableipsSyslog": {
                    "type": "boolean"
                }
            }
        },
        "GeoLocationObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the geolocation.",
                    "$ref": "#/definitions/Metadata"
                },
                "description": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "continentUUID": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "countries": {
                    "type": "array",
                    "description": "List of objects representing countries.",
                    "items": {
                        "$ref": "#/definitions/ICountryModel"
                    }
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always GeoLocationObject."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "continents": {
                    "type": "array",
                    "description": "List of objects representing continents.",
                    "items": {
                        "$ref": "#/definitions/IContinentModel"
                    }
                },
                "continentId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "This field is deprecated and should not be used."
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the geolocation."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the geolocation."
                }
            },
            "description": "Represents a GeoLocation containing various Countries and Continents."
        },
        "FTDManualNatRule": {
            "type": "object",
            "required": [
                "natType",
                "originalSource"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "translatedDestinationPort": {
                    "$ref": "#/definitions/IProtocolPortObject"
                },
                "fallThrough": {
                    "type": "boolean"
                },
                "natType": {
                    "type": "string",
                    "enum": [
                        "STATIC",
                        "DYNAMIC"
                    ]
                },
                "targetIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "translatedDestination": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "translatedSourcePort": {
                    "$ref": "#/definitions/IProtocolPortObject"
                },
                "description": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "originalSourcePort": {
                    "$ref": "#/definitions/IProtocolPortObject"
                },
                "sourceInterface": {
                    "$ref": "#/definitions/IInterfaceObjectModel"
                },
                "interfaceInOriginalDestination": {
                    "type": "boolean"
                },
                "netToNet": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "originalSource": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "dns": {
                    "type": "boolean"
                },
                "patOptions": {
                    "$ref": "#/definitions/IPatOptionsContainer"
                },
                "version": {
                    "type": "string"
                },
                "noProxyArp": {
                    "type": "boolean"
                },
                "translatedSource": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "interfaceInTranslatedSource": {
                    "type": "boolean"
                },
                "routeLookup": {
                    "type": "boolean"
                },
                "originalDestination": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "unidirectional": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "destinationInterface": {
                    "$ref": "#/definitions/IInterfaceObjectModel"
                },
                "originalDestinationPort": {
                    "$ref": "#/definitions/IProtocolPortObject"
                },
                "interfaceIpv6": {
                    "type": "boolean"
                }
            }
        },
        "IS2STunnelAdvanceSettingModel": {
            "type": "object",
            "properties": {
                "natKeepaliveMessageTraversal": {
                    "description": "Object representing keepalive message traversal information.",
                    "$ref": "#/definitions/INatKeepaliveTraversal"
                },
                "certificateMapSettings": {
                    "description": "Contains certificate map settings.",
                    "$ref": "#/definitions/ICertificateMapSettings"
                },
                "enableSpokeToSpokeConnectivityThroughHub": {
                    "type": "boolean",
                    "description": "Indicates whether spoke-to-spoke connectivity is enabled through the hub."
                },
                "bypassAccessControlTrafficForDecryptedTraffic": {
                    "type": "boolean",
                    "description": "Indicates whether to bypass access control for decrypted traffic."
                }
            },
            "description": "Contains advanced site-to-site tunnel settings."
        },
        "Ikev2PolicyObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "encryptionAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "diffieHellmanGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "version": {
                    "type": "string"
                },
                "prfIntegrityAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "string"
                },
                "integrityAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Ikev1PolicyObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "diffieHellmanGroup": {
                    "type": "integer",
                    "format": "int32"
                },
                "authenticationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                }
            }
        },
        "RESTElementListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTElement"
                    }
                }
            }
        },
        "NetworkGroupListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkGroup"
                    }
                }
            }
        },
        "IVpnBackupInterface": {
            "type": "object",
            "properties": {
                "publicIpAddress": {
                    "type": "string"
                },
                "interface": {
                    "$ref": "#/definitions/IReference"
                }
            }
        },
        "IMaximumTransmissionUnitAging": {
            "type": "object",
            "properties": {
                "resetIntervalMinutes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Interval before resetting the MTU."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether MTU aging is enabled."
                }
            },
            "description": "Contains information about Maximum Transmission UNit aging."
        },
        "LLInspectorOverrideConfig": {
            "type": "object",
            "description": "The schema of this payload is dynamic and based on the OpenAPI schema received from the latest installed Lightweight Security Package.",
            "additionalProperties": {
                "type": "object"
            }
        },
        "VirtualSwitchListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VirtualSwitch"
                    }
                }
            }
        },
        "IOspfv3GracefulRestartHelper": {
            "type": "object",
            "properties": {
                "enableLSA": {
                    "type": "boolean"
                }
            }
        },
        "IApplicationFilter": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application filter.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the application filter."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "appConditions": {
                    "type": "array",
                    "description": "List of objects representing application conditions.",
                    "items": {
                        "$ref": "#/definitions/IAppCondition"
                    }
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the application filter."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationFilter."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "applications": {
                    "type": "array",
                    "description": "List of objects representing applications.",
                    "items": {
                        "$ref": "#/definitions/IApplicationModel"
                    }
                }
            },
            "description": "Represents an ApplicationFilter containing various Conditions and Applications."
        },
        "TimeRangeListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeRange"
                    }
                }
            }
        },
        "FPInterfaceStatistics": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "rxBytes": {
                    "type": "integer",
                    "format": "int32"
                },
                "txBytes": {
                    "type": "integer",
                    "format": "int32"
                },
                "interfaceUuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "droppedPackets": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Snort3IPSRulesListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Snort3IPSRules"
                    }
                }
            }
        },
        "ICMPV4ObjectOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ICMPV4ObjectOverride"
                    }
                }
            }
        },
        "FTDSubInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "subIntfId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "SecurityGroupTagListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecurityGroupTag"
                    }
                }
            }
        },
        "ExpirationLifeTime": {
            "type": "object",
            "properties": {
                "preferDateTime": {
                    "type": "string"
                },
                "validDateTime": {
                    "type": "string"
                }
            }
        },
        "ISIDNSPolicy": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "blocklistLogging": {
                    "$ref": "#/definitions/ISILogging"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IAppCondition": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "string",
                    "description": "User-specified filter string."
                },
                "search": {
                    "type": "string",
                    "description": "String representation of the application condition."
                },
                "risks": {
                    "type": "array",
                    "description": "List of objects representing application risks.",
                    "items": {
                        "$ref": "#/definitions/IApplicationRisk"
                    }
                },
                "productivities": {
                    "type": "array",
                    "description": "List of objects representing application productivities.",
                    "items": {
                        "$ref": "#/definitions/IApplicationProductivity"
                    }
                },
                "applicationTypes": {
                    "type": "array",
                    "description": "List of objects representing application types.",
                    "items": {
                        "$ref": "#/definitions/IApplicationType"
                    }
                },
                "categories": {
                    "type": "array",
                    "description": "List of objects representing application categories.",
                    "items": {
                        "$ref": "#/definitions/IApplicationCategory"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationFilterCondition."
                },
                "tags": {
                    "type": "array",
                    "description": "List of objects representing application tags.",
                    "items": {
                        "$ref": "#/definitions/IApplicationTag"
                    }
                }
            },
            "description": "Represents an AppCondition containing Application Types, Tags, Productivities, Risks, and Categories."
        },
        "FilePolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "HostOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always return false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing Host network override definition."
        },
        "OspfPolicyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspfPolicyModel"
                    }
                }
            }
        },
        "StaticRouteModel": {
            "type": "object",
            "required": [
                "gateway",
                "interfaceName",
                "metricValue",
                "selectedNetworks"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "selectedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "metricValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "isTunneled": {
                    "type": "boolean"
                },
                "interfaceName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/IHostObjectContainer"
                }
            }
        },
        "FTDNatRule": {
            "type": "object",
            "required": [
                "natType"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "fallThrough": {
                    "type": "boolean"
                },
                "natType": {
                    "type": "string",
                    "enum": [
                        "STATIC",
                        "DYNAMIC"
                    ]
                },
                "dns": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "patOptions": {
                    "$ref": "#/definitions/IPatOptionsContainer"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "noProxyArp": {
                    "type": "boolean"
                },
                "sourceInterface": {
                    "$ref": "#/definitions/IInterfaceObjectModel"
                },
                "routeLookup": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "netToNet": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "destinationInterface": {
                    "$ref": "#/definitions/IInterfaceObjectModel"
                },
                "id": {
                    "type": "string"
                },
                "interfaceIpv6": {
                    "type": "boolean"
                }
            }
        },
        "IConnectionProfileGroupUrl": {
            "type": "object",
            "properties": {
                "aliasUrl": {
                    "description": "URL object containing the url.",
                    "$ref": "#/definitions/IReference"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "User can connect to the connection profile directly using the alias url."
                }
            },
            "description": "Identifies group URLs to automatically connect to the connection profile."
        },
        "HostScanPackageObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HostScanPackageObject"
                    }
                }
            }
        },
        "LLEquationNode": {
            "type": "object",
            "properties": {
                "op": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "isRealized": {
                    "type": "boolean"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LLEquationNode"
                    }
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "applyCondition": {
                    "type": "string"
                }
            }
        },
        "IOspfHelloMultiplierMechanism": {
            "type": "object",
            "properties": {
                "helloMultiplier": {
                    "type": "integer",
                    "format": "int32"
                },
                "neighborDetectionType": {
                    "type": "string"
                }
            }
        },
        "IDeviceListEntry": {
            "type": "object",
            "properties": {
                "containerUUID": {
                    "type": "string",
                    "description": "UUID of the container"
                },
                "deploymentStatus": {
                    "type": "string",
                    "description": "Deployment status of the device in the deployment job",
                    "enum": [
                        "DEPLOYING",
                        "SUCCEEDED",
                        "PARTIALLY_SUCCEEDED",
                        "FAILED",
                        "SSP_SUCCEEDED",
                        "SSP_FAILED",
                        "SSP_PRIMARY_BOOTSTRAP_SUCCEEDED",
                        "SSP_PRIMARY_BOOTSTRAP_FAILED",
                        "SSP_SECONDARY_BOOTSTRAP_SUCCEEDED",
                        "SSP_SECONDARY_BOOTSTRAP_FAILED",
                        "PRIMARY_BOOTSTRAP_SUCCEEDED",
                        "PRIMARY_BOOTSTRAP_FAILED",
                        "SECONDARY_BOOTSTRAP_SUCCEEDED",
                        "SECONDARY_BOOTSTRAP_FAILED",
                        "BREAK_SUCCEEDED",
                        "BREAK_FAILED",
                        "PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "SSP_PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "SSP_SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED",
                        "BREAK_PARTIALLY_SUCCEEDED",
                        "CANCELLED",
                        "NONE"
                    ]
                },
                "containerName": {
                    "type": "string",
                    "description": "Name of the container. This will still be displayed after deletion."
                },
                "canRollback": {
                    "type": "boolean",
                    "description": "Indicates whether the deployed version to device in the deployment job is rollback capable. This field is available only if context filter parameter has value as RollbackApplicable."
                },
                "deviceName": {
                    "type": "string",
                    "description": "Name of the device"
                },
                "deviceUUID": {
                    "type": "string",
                    "description": "UUID of the device"
                },
                "deployedVersion": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Config version of the device in the deployment job"
                }
            }
        },
        "LLStatusMsg": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/LLAdditionalProperties"
            }
        },
        "RESTObservation": {
            "type": "object",
            "properties": {
                "elementId": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/RESTObservationData"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                },
                "elementName": {
                    "type": "string"
                },
                "llobservation": {
                    "$ref": "#/definitions/LLObservation"
                }
            }
        },
        "ISnort3IntrusionRuleGroupsModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overrideSecurityLevel": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "LEVEL_1",
                        "LEVEL_2",
                        "LEVEL_3",
                        "LEVEL_4"
                    ]
                },
                "isSystemDefined": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "childGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISnort3IntrusionRuleGroupsModel"
                    }
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "defaultSecurityLevel": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "LEVEL_1",
                        "LEVEL_2",
                        "LEVEL_3",
                        "LEVEL_4"
                    ]
                }
            }
        },
        "IKEv1IPsecProposalListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IKEv1IPsecProposal"
                    }
                }
            }
        },
        "INeighborTimers": {
            "type": "object",
            "properties": {
                "keepAliveInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumHoldTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "holdTime": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "VariableSetListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariableSet"
                    }
                }
            }
        },
        "Application": {
            "type": "object",
            "properties": {
                "applicationTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IApplicationTag"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "appProductivity": {
                    "$ref": "#/definitions/ApplicationProductivity"
                },
                "deprecated": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "decrypted": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IApplicationTag"
                    }
                },
                "productivity": {
                    "$ref": "#/definitions/IApplicationProductivity"
                },
                "appId": {
                    "type": "integer",
                    "format": "int32"
                },
                "appCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IApplicationCategory"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "risk": {
                    "$ref": "#/definitions/IApplicationRisk"
                },
                "applicationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IApplicationType"
                    }
                },
                "id": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IApplicationCategory"
                    }
                }
            }
        },
        "ExternalLookup": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "intValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "longValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "enabled": {
                    "type": "boolean"
                },
                "network": {
                    "$ref": "#/definitions/NetworkObject"
                }
            }
        },
        "IOspfv3Neighbor": {
            "type": "object",
            "required": [
                "configurations",
                "deviceInterface"
            ],
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfv3NeighborConfiguration"
                    }
                },
                "deviceInterface": {
                    "$ref": "#/definitions/IFTDInterface"
                }
            }
        },
        "ExternalStorageListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalStorage"
                    }
                }
            }
        },
        "PrefilterHitCount": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the hit count entry.",
                    "$ref": "#/definitions/HitCountMetadata"
                },
                "lastFetchTimeStamp": {
                    "type": "string",
                    "description": "Indicates the last time (in ISO 8601 format) the hit count was retrieved for the mentioned rule."
                },
                "hitCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the number of times the prefilter rule was hit on the target device. It is based on the data from the last FMC hit count refresh operation."
                },
                "firstHitTimeStamp": {
                    "type": "string",
                    "description": "Indicates the time (in ISO 8601 format) when the hit count was first hit for the mentioned rule."
                },
                "rule": {
                    "description": "Object representing the prefilter rule against which the hit count information is retrieved.",
                    "$ref": "#/definitions/IPolicyModel"
                },
                "lastHitTimeStamp": {
                    "type": "string",
                    "description": "Indicates the time (in ISO 8601 format) when the hit count was last hit for the mentioned rule."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be PrefilterHitCount."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "Model of HitCount entry for a prefilter rule."
        },
        "ServerVersion": {
            "type": "object",
            "properties": {
                "serverVersion": {
                    "type": "string"
                },
                "vdbVersion": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "lspVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "geoVersion": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sruVersion": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ServerVersionListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServerVersion"
                    }
                }
            }
        },
        "PrefilterDefaultAction": {
            "type": "object",
            "properties": {
                "logEnd": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "logBegin": {
                    "type": "boolean"
                },
                "snmpConfig": {
                    "$ref": "#/definitions/IReference"
                },
                "sendEventsToFMC": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "syslogConfig": {
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "BLOCK_TUNNELS",
                        "ANALYZE_TUNNELS"
                    ]
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "FTDHAMonitoredInterfacesListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDHAMonitoredInterfaces"
                    }
                }
            }
        },
        "IIPvPrefixListEntry": {
            "type": "object",
            "required": [
                "sequence"
            ],
            "properties": {
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "minPrefixLenth": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipAddress": {
                    "type": "string"
                },
                "maxPrefixLength": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                }
            }
        },
        "LLObservable": {
            "type": "object",
            "properties": {
                "miscData": {
                    "$ref": "#/definitions/LLMiscData"
                },
                "type": {
                    "type": "string"
                },
                "observableType": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "unEncryptedDBId": {
                    "type": "string"
                },
                "indicatorCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "effectiveProperty": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "dbid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "inheritedProperty": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "customProperty": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "updatedAt": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FTDRedundantInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "primaryInterface": {
                    "$ref": "#/definitions/IInterface"
                },
                "id": {
                    "type": "string"
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "redundantId": {
                    "type": "integer",
                    "format": "int32"
                },
                "secondaryInterface": {
                    "$ref": "#/definitions/IInterface"
                }
            }
        },
        "LLMiscData": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "IBaseDevice": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "modelId": {
                    "type": "string"
                },
                "advanced": {
                    "$ref": "#/definitions/IAdvanced"
                },
                "description": {
                    "type": "string"
                },
                "modelType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "sw_version": {
                    "type": "string"
                },
                "healthPolicy": {
                    "$ref": "#/definitions/IHealthPolicy"
                },
                "healthStatus": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "modelNumber": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "accessPolicy": {
                    "$ref": "#/definitions/IPolicyModel"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "Snort3NetworkAnalysisPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Snort3NetworkAnalysisPolicy"
                    }
                }
            }
        },
        "FTDPhysicalInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDPhysicalInterface"
                    }
                }
            }
        },
        "ApplicationRiskListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationRisk"
                    }
                }
            }
        },
        "SLAMonitorObjectModel": {
            "type": "object",
            "required": [
                "interfaceObjects",
                "monitorAddress",
                "slaId"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "noOfPackets": {
                    "type": "integer",
                    "format": "int32"
                },
                "slaId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dataSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "interfaceNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "interfaceObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceObjectModel"
                    }
                },
                "frequency": {
                    "type": "integer",
                    "format": "int32"
                },
                "monitorAddress": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tos": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "IStaticIPContainer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "netmask": {
                    "type": "string"
                }
            }
        },
        "INatKeepaliveTraversal": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "intervalSeconds": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BGPIPvAddressFamilyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BGPIPvAddressFamilyModel"
                    }
                }
            }
        },
        "Commands": {
            "type": "object",
            "properties": {
                "commandOutput": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "commandInput": {
                    "type": "string"
                }
            }
        },
        "DNSServerGroupOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSServerGroupOverride"
                    }
                }
            }
        },
        "LLIncident": {
            "type": "object",
            "properties": {
                "indicatorName": {
                    "type": "string"
                },
                "equation": {
                    "$ref": "#/definitions/LLEquationNode"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "indicatorId": {
                    "type": "string"
                },
                "actionTaken": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "observations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LLObservation"
                    }
                },
                "publish": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "property": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "id": {
                    "type": "string"
                },
                "sourceName": {
                    "type": "string"
                },
                "realizedAt": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ISESecurityGroupTagListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISESecurityGroupTag"
                    }
                }
            }
        },
        "IMetadataUser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ObjectUsageListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectUsage"
                    }
                }
            }
        },
        "IIkeKeepaliveSettings": {
            "type": "object",
            "properties": {
                "threshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "ikeKeepalive": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "ENABLED",
                        "ENABLED_INFINITE"
                    ]
                }
            }
        },
        "SIURLList": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/SIListMetadata"
                },
                "fileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "UpgradePackage": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ISSORole": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "map": {
                    "type": "string"
                }
            }
        },
        "FTDEtherChannelInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDEtherChannelInterface"
                    }
                }
            }
        },
        "StandardACLListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StandardACL"
                    }
                }
            }
        },
        "TaskStatus": {
            "type": "object",
            "properties": {
                "taskType": {
                    "type": "string",
                    "enum": [
                        "DEVICE_REGISTRATION",
                        "DEVICE_DEPLOYMENT",
                        "DEVICE_ROLLBACK",
                        "NGFWHA_OPERATIONS",
                        "COPY_CONFIG_REQUEST",
                        "HIT_COUNT_REFRESH",
                        "FTD_CLUSTER_BOOTSTRAP",
                        "FTD_CLUSTER_BREAK"
                    ]
                },
                "subTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISubTask"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "SINetworkFeed": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/SIFeedMetadata"
                },
                "feedURL": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "checksumURL": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "updateFrequency": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IOspfv3SummaryPrefix": {
            "type": "object",
            "properties": {
                "tag": {
                    "type": "string"
                },
                "ipv6Prefix": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "advertise": {
                    "type": "boolean"
                }
            }
        },
        "AnyConnectPackageModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "fileName": {
                    "type": "string",
                    "description": "Name of the AnyConnect client image."
                },
                "name": {
                    "type": "string",
                    "description": "User provided resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing this resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: AnyConnectPackage."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "File objects represent AnyConnect Client Image files."
        },
        "ICertificateMapSettings": {
            "type": "object",
            "properties": {
                "useCertMapConfiguredInEndpointToDetermineTunnel": {
                    "type": "boolean"
                },
                "usePeerIpAddressToDetermineTunnel": {
                    "type": "boolean"
                },
                "useCertificateOuToDetermineTunnel": {
                    "type": "boolean"
                },
                "useIkeIdentityOuToDetermineTunnel": {
                    "type": "boolean"
                }
            }
        },
        "ProtocolPortObjectOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProtocolPortObjectOverride"
                    }
                }
            }
        },
        "RESTTaxiiCollection": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "caCert": {
                    "type": "string"
                },
                "feedContent": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "invalidObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "feedStatus": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "downloadOn": {
                    "type": "boolean"
                },
                "nextRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "property": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "checksum": {
                    "type": "string"
                },
                "llfeedConfig": {
                    "$ref": "#/definitions/LLFeedConfig"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "clientPrivateKey": {
                    "type": "string"
                },
                "subscribedCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "clientCert": {
                    "type": "string"
                },
                "delivery": {
                    "type": "string"
                },
                "finishTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "availableCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "lastRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "runNow": {
                    "type": "boolean"
                },
                "totalDiscardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "refresh": {
                    "type": "integer",
                    "format": "int32"
                },
                "params": {
                    "$ref": "#/definitions/LLParams"
                },
                "uri": {
                    "type": "string"
                },
                "feedConfig": {
                    "$ref": "#/definitions/LLFeedConfig"
                },
                "version": {
                    "type": "string"
                },
                "discoveryInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "totalInvalidObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMsg": {
                    "$ref": "#/definitions/LLStatusMsg"
                },
                "passwd": {
                    "type": "string"
                },
                "startHour": {
                    "type": "integer",
                    "format": "int32"
                },
                "discardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "feedType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "IntrusionPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntrusionPolicy"
                    }
                }
            }
        },
        "IOspfv3VirtualLinks": {
            "type": "object",
            "properties": {
                "retransmitInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "deadInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "routerId": {
                    "type": "string"
                },
                "helloInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "transmitDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "ttlSecurity": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PortObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortObject"
                    }
                }
            }
        },
        "IDynamicObjectBase": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ApplicationProductivity": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ProtocolPortObjectOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing protocol port object override definition."
        },
        "IDeviceInventoryData": {
            "type": "object",
            "properties": {
                "cpuType": {
                    "type": "string"
                },
                "cpuCores": {
                    "type": "string"
                },
                "memoryInMB": {
                    "type": "string"
                },
                "storageInGB": {
                    "type": "string"
                }
            }
        },
        "DeviceMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "description": "The last user who modified this instance.",
                    "$ref": "#/definitions/MetadataUser"
                },
                "isPartOfContainer": {
                    "type": "boolean",
                    "description": "This field indicates whether it is part of any cluster. This will be true for a device which is part of NGFWHA, NGFW cluster and firepower devices which is part of Stack."
                },
                "lspVersion": {
                    "type": "string"
                },
                "inventoryDetails": {
                    "$ref": "#/definitions/IDeviceInventoryData"
                },
                "readOnly": {
                    "description": "Details regarding the read only status of this instance.",
                    "$ref": "#/definitions/ReadOnly"
                },
                "inventoryData": {
                    "description": "Inventory details of the device.",
                    "$ref": "#/definitions/DeviceInventoryData"
                },
                "isSnort3": {
                    "type": "boolean"
                },
                "sruVersion": {
                    "type": "string",
                    "description": "SRU version of a particular device."
                },
                "deviceSerialNumber": {
                    "type": "string"
                },
                "chassisDetails": {
                    "$ref": "#/definitions/IDeviceChassisData"
                },
                "vdbVersion": {
                    "type": "string",
                    "description": "VDB version of a particular device."
                },
                "task": {
                    "$ref": "#/definitions/ITaskStatus"
                },
                "domain": {
                    "description": "Lists the domains to which this instance belongs if applicable.",
                    "$ref": "#/definitions/Domain"
                },
                "chassisData": {
                    "description": "This field holds information related to chassis.",
                    "$ref": "#/definitions/DeviceChassisData"
                },
                "isMultiInstance": {
                    "type": "boolean",
                    "description": "Indicated if the device is in multiinstance or native mode."
                },
                "containerDetails": {
                    "description": "If 'isPartOfContainer' field is true then this field will hold the information of container.",
                    "$ref": "#/definitions/IBaseDevice"
                },
                "snortVersion": {
                    "type": "string",
                    "description": "Snort version of a particular device."
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The last updated timestamp."
                }
            }
        },
        "IKEv1IPsecProposal": {
            "type": "object",
            "properties": {
                "espEncryption": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "espHash": {
                    "type": "string"
                }
            }
        },
        "Snort3IntrusionRuleGroups": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of Snort 3 intrusion rulegroup.",
                    "$ref": "#/definitions/IMetadata"
                },
                "overrideSecurityLevel": {
                    "type": "string",
                    "description": "Override level in context of a policy. Allowed only for custom intrusion policy. One of: DISABLED | LEVEL_1 | LEVEL_2 | LEVEL_3 | LEVEL_4.",
                    "enum": [
                        "DISABLED",
                        "LEVEL_1",
                        "LEVEL_2",
                        "LEVEL_3",
                        "LEVEL_4"
                    ]
                },
                "isSystemDefined": {
                    "type": "boolean",
                    "description": "Read-only field indicating if the rulegroup is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Snort 3 intrusion rulegroup."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Snort 3 intrusion rulegroup."
                },
                "childGroups": {
                    "type": "array",
                    "description": "List of rulegroups associated with the parent rulegroup.",
                    "items": {
                        "$ref": "#/definitions/ISnort3IntrusionRuleGroupsModel"
                    }
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the Snort 3 intrusion rulegroup."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always IntrusionRuleGroup."
                },
                "version": {
                    "type": "string"
                },
                "defaultSecurityLevel": {
                    "type": "string",
                    "description": "Default level in context of a policy. One of: DISABLED | LEVEL_1 | LEVEL_2 | LEVEL_3 | LEVEL_4.",
                    "enum": [
                        "DISABLED",
                        "LEVEL_1",
                        "LEVEL_2",
                        "LEVEL_3",
                        "LEVEL_4"
                    ]
                }
            },
            "description": "Object representing the per-policy behaviour of a specified intrusion rulegroup for a target intrusion policy."
        },
        "StandardCommunityListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StandardCommunityList"
                    }
                }
            }
        },
        "IPv4AddressPoolListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv4AddressPool"
                    }
                }
            }
        },
        "IDeviceChassisData": {
            "type": "object",
            "properties": {
                "securityModuleNo": {
                    "type": "integer",
                    "format": "int32"
                },
                "chassisUrl": {
                    "type": "string"
                },
                "securityModuleSN": {
                    "type": "string"
                },
                "chassisSerialNo": {
                    "type": "string"
                }
            }
        },
        "BGPIPvAddressFamilyModel": {
            "type": "object",
            "required": [
                "routerId"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "routerId": {
                    "type": "string"
                },
                "asNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "addressFamilyIPv4": {
                    "$ref": "#/definitions/IBGPAddressFamilyModel"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "addressFamilyIPv6": {
                    "$ref": "#/definitions/IBGPAddressFamilyModel"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "VpnIPSecSettings": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "ikeV1IpsecProposal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "perfectForwardSecrecy": {
                    "$ref": "#/definitions/IPFSSettings"
                },
                "lifetimeSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "ikeV2IpsecProposal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "tfcPackets": {
                    "$ref": "#/definitions/ITFCPackets"
                },
                "ikeV2Mode": {
                    "type": "string",
                    "enum": [
                        "TUNNEL",
                        "TRANSPORT_PREFERRED",
                        "TRANSPORT_REQUIRE"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "enableSaStrengthEnforcement": {
                    "type": "boolean"
                },
                "cryptoMapType": {
                    "type": "string",
                    "enum": [
                        "STATIC",
                        "DYNAMIC"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "lifetimeKilobytes": {
                    "type": "integer",
                    "format": "int32"
                },
                "validateIncomingIcmpErrorMessage": {
                    "type": "boolean"
                },
                "doNotFragmentPolicy": {
                    "type": "string",
                    "enum": [
                        "SET",
                        "COPY",
                        "CLEAR",
                        "NONE"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "enableRRI": {
                    "type": "boolean"
                }
            }
        },
        "IVlanTagLiteral": {
            "type": "object",
            "properties": {
                "startTag": {
                    "type": "integer",
                    "format": "int32"
                },
                "endTag": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IGroupPolicyCustomAttributesModel": {
            "type": "object",
            "properties": {
                "customAttributeObject": {
                    "description": "Represents AnyConnect custom attribute object of selected type",
                    "$ref": "#/definitions/IReference"
                },
                "anyConnectAttribute": {
                    "type": "string",
                    "description": "Represents values of  either (PER_APP_VPN|ALLOW_DEFER_UPDATE|DYNAMIC_SPLIT_TUNNELING|CUSTOM_TYPE) specifying type of AnyConnect custom attribute"
                }
            },
            "description": "Model representing the configuration of Custom Attributes of the Group Policy"
        },
        "ILsaThrottleTimer": {
            "type": "object",
            "properties": {
                "maximumDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "initialDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "minimumDelay": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IBGPGSBestPath": {
            "type": "object",
            "properties": {
                "deterministicMed": {
                    "type": "boolean"
                },
                "defaultLocalPreferenceValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "alwaysCompareMed": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "bestPathCompareRouterId": {
                    "type": "boolean"
                },
                "bestPathMedMissingAsWorst": {
                    "type": "boolean"
                }
            }
        },
        "IApplicationCategory": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application category.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application category."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "Application category resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the application category."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationCategory."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Represents an ApplicationCategory."
        },
        "IBGPGSGracefulRestart": {
            "type": "object",
            "properties": {
                "gracefulRestart": {
                    "type": "boolean"
                },
                "gracefulRestartStalePathTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "gracefulRestartRestartTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ISSOAdvancedConfig": {
            "type": "object",
            "properties": {
                "defaultRole": {
                    "$ref": "#/definitions/IReference"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISSORole"
                    }
                },
                "memberAttr": {
                    "type": "string"
                }
            }
        },
        "RealmUserMetadata": {
            "type": "object",
            "properties": {
                "lastSynced": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field representing timestamp of the last sync for the user."
                },
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "lastSeen": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field representing timestamp of the last login for the user."
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "resolved": {
                    "type": "boolean",
                    "description": "Field representing if this can be resolved to a synced entity."
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "description": "An object representing the metadata of the RealmUser."
        },
        "DapAuthorizationAttributes": {
            "type": "object",
            "properties": {
                "networkACL": {
                    "$ref": "#/definitions/IPolicyObjectModel"
                },
                "dapRecordName": {
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "CONTINUE",
                        "TERMINATE",
                        "QUARANTINE"
                    ]
                },
                "message": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "anyConnectAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPolicyObjectModel"
                    }
                }
            }
        },
        "IDomain": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IOspfv3NeighborCost": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer",
                    "format": "int32"
                },
                "filterOutgoingLSA": {
                    "type": "boolean"
                }
            }
        },
        "IRealmEntity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "SecurexConfigListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecurexConfig"
                    }
                }
            }
        },
        "IOspfVirtualLinks": {
            "type": "object",
            "properties": {
                "retransmitInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "deadInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "routerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "helloInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "transmitDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "authentication": {
                    "$ref": "#/definitions/IOspfAuthentication"
                }
            }
        },
        "IExternalCACertificate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IIntrusionMappedPolicy": {
            "type": "object",
            "properties": {
                "snortEngine": {
                    "type": "string",
                    "enum": [
                        "SNORT2",
                        "SNORT3"
                    ]
                },
                "inspectionMode": {
                    "type": "string",
                    "enum": [
                        "PREVENTION",
                        "DETECTION"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IAccessPolicyDefaultAction": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "logEnd": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will log events at the end of the connection. Default is false."
                },
                "logBegin": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will log events at the beginning of the connection. Default is false."
                },
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/IMetadata"
                },
                "snmpConfig": {
                    "description": "Object representing the SNMP alert associated with the access rule.",
                    "$ref": "#/definitions/IReference"
                },
                "intrusionPolicy": {
                    "$ref": "#/definitions/IIntrusionPolicyModel"
                },
                "sendEventsToFMC": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will send events to the Firepower Management Center event viewer. Default is false."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "type": {
                    "type": "string",
                    "description": "Response object associated with resource."
                },
                "variableSet": {
                    "description": "Object representing the variable set associated with the access rule.",
                    "$ref": "#/definitions/IReference"
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "syslogConfig": {
                    "description": "Object representing the syslog alert associated with the access rule.",
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "action": {
                    "type": "string",
                    "description": "Specifies the action to take when the conditions defined by the rule are met. One of: BLOCK | TRUST | NETWORK_DISCOVERY | PERMIT | INHERIT_FROM_PARENT.",
                    "enum": [
                        "BLOCK",
                        "TRUST",
                        "PERMIT",
                        "NETWORK_DISCOVERY",
                        "INHERIT_FROM_PARENT"
                    ]
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                }
            }
        },
        "IPortObjectsContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPortObject"
                    }
                },
                "literals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IBasePortLiteral"
                    }
                }
            }
        },
        "INeighborGeneral": {
            "type": "object",
            "properties": {
                "enableAddress": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "fallOverBFD": {
                    "type": "string",
                    "enum": [
                        "SINGLE_HOP",
                        "MULTI_HOP"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean"
                }
            }
        },
        "PortMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "parentType": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FPInterfaceStatisticsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FPInterfaceStatistics"
                    }
                }
            }
        },
        "IPv4AddressPool": {
            "type": "object",
            "required": [
                "ipAddressRange"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "ipAddressRange": {
                    "type": "string",
                    "description": "Range of addresses available in the pool. Use dotted decimal notation and a dash between the beginning and the end address. Format: ipaddr-ipaddr e.g., 10.72.1.1-10.72.1.150."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: Ipv4AddressPool."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string"
                },
                "mask": {
                    "type": "string",
                    "description": "Specifies a subnet mask for the pool of addresses in X.X.X.X format."
                }
            },
            "description": "A model representing Ipv4AddressPool Object definition."
        },
        "RangeObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RangeObject"
                    }
                }
            }
        },
        "DynamicObjectWithMappingsBulk": {
            "type": "object",
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dynamicObject": {
                    "$ref": "#/definitions/DynamicObjectBulk"
                }
            }
        },
        "IOspfv3LogAdjacencyChanges": {
            "type": "object",
            "properties": {
                "includeDetails": {
                    "type": "boolean"
                }
            }
        },
        "IIntrusionRuleSuppression": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "sourceNetworks": {
                    "type": "array",
                    "description": "Object representing source networks selected for the intrusion rule suppression setting.",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "destinationNetworks": {
                    "type": "array",
                    "description": "Object representing destination networks selected for the intrusion rule suppression setting.",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "Model representing intrusion rule suppression setting."
        },
        "IGroupPolicyClientModulesModel": {
            "type": "object",
            "properties": {
                "moduleType": {
                    "type": "string",
                    "description": "Specifies the type of the Client module package",
                    "enum": [
                        "AMP_ENABLER",
                        "FEEDBACK",
                        "ISE_POSTURE",
                        "NETWORK_ACCESS_MANAGER",
                        "NETWORK_VISIBILITY",
                        "UMBRELLA_ROAMING",
                        "WEB_SECURITY",
                        "START_BEFORE_LOGIN",
                        "DART"
                    ]
                },
                "moduleProfile": {
                    "description": "Represents VPN Client Profile Object",
                    "$ref": "#/definitions/IReference"
                },
                "enableModuleDownload": {
                    "type": "boolean",
                    "description": "Specifies if the module has to be downloaded. Default is False"
                }
            },
            "description": "Model representing the File configurations for AnyConnect Client Modules"
        },
        "InspectorOverrideConfigListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InspectorOverrideConfig"
                    }
                }
            }
        },
        "RealmUser": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Metadata object of the RealmUser.",
                    "$ref": "#/definitions/RealmUserMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the RealmUser."
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "realm": {
                    "description": "Realm object for the user.",
                    "$ref": "#/definitions/IRealm"
                },
                "id": {
                    "type": "string",
                    "description": "Unique Identifier of the user."
                },
                "type": {
                    "type": "string",
                    "description": "Value is 'RealmUser'. Read-only fixed value."
                }
            },
            "description": "Defines Identity RealmUser Object."
        },
        "IOspfNeighbors": {
            "type": "object",
            "properties": {
                "neighborInterface": {
                    "$ref": "#/definitions/IFTDInterface"
                },
                "ipAddress": {
                    "$ref": "#/definitions/INetworkAddress"
                }
            }
        },
        "IOspfFilterList": {
            "type": "object",
            "properties": {
                "prefixList": {
                    "$ref": "#/definitions/IReference"
                },
                "filterDirection": {
                    "type": "string",
                    "enum": [
                        "IN",
                        "OUT"
                    ]
                }
            }
        },
        "IGroupPolicyGeneralSettingsModel": {
            "type": "object",
            "properties": {
                "primaryDNSServer": {
                    "description": "Optional. Represents Network Object containing Primary DNS Server IP Address",
                    "$ref": "#/definitions/IReference"
                },
                "primaryWINSServer": {
                    "description": "Optional. Represents Network Object containing Primary WINS Server IP Address",
                    "$ref": "#/definitions/IReference"
                },
                "secondaryWINSServer": {
                    "description": "Optional. Represents Network Object containing Secondary WINS Server IP Address",
                    "$ref": "#/definitions/IReference"
                },
                "addressAssignment": {
                    "description": "Optional. Represents Address Assignment details that will be assigned to the endhost",
                    "$ref": "#/definitions/IGroupPolicyAddressAssignmentModel"
                },
                "banner": {
                    "type": "string",
                    "description": "Optional. Specifies the banner text to present to users at login"
                },
                "splitTunnelSettings": {
                    "description": "Optional. Represents Split tunneling directs some network traffic through the VPN tunnel (encrypted) and the remaining network traffic outside the VPN tunnel (unencrypted)",
                    "$ref": "#/definitions/IGroupPolicySplitTunnelSettingsModel"
                },
                "secondaryDNSServer": {
                    "description": "Optional. Represents Network Object containing Secondary DNS Server IP Address",
                    "$ref": "#/definitions/IReference"
                }
            },
            "description": "Model represents General Settings of a Group Policy"
        },
        "FTDSubInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDSubInterface"
                    }
                }
            }
        },
        "ITarget": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique ID of the device."
                },
                "type": {
                    "type": "string",
                    "description": "Device"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "This is the target device."
        },
        "ISyslogConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "RESTElement": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "caCert": {
                    "type": "string"
                },
                "miscData": {
                    "$ref": "#/definitions/LLMiscData"
                },
                "description": {
                    "type": "string"
                },
                "cert": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "registrationDate": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "llelement": {
                    "$ref": "#/definitions/LLElement"
                },
                "key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "IPv6AddressPoolOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false of overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing IPv6AddressPoolOverride definition."
        },
        "IReferenceContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "literals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IValueLiteral"
                    }
                }
            }
        },
        "NetworkObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of NetworkObject.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: NetworkObject."
                },
                "value": {
                    "type": "string",
                    "description": "Actual value of the network."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing Network object definition."
        },
        "DefaultAction": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "logEnd": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "logBegin": {
                    "type": "boolean"
                },
                "snmpConfig": {
                    "$ref": "#/definitions/IReference"
                },
                "intrusionPolicy": {
                    "$ref": "#/definitions/IIntrusionPolicyModel"
                },
                "sendEventsToFMC": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variableSet": {
                    "$ref": "#/definitions/IReference"
                },
                "version": {
                    "type": "string"
                },
                "syslogConfig": {
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "BLOCK",
                        "TRUST",
                        "PERMIT",
                        "NETWORK_DISCOVERY",
                        "INHERIT_FROM_PARENT"
                    ]
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "RetryUpgrade": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the triggered task.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the operation."
                },
                "description": {
                    "type": "string",
                    "description": "More details about the operation."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique Task ID of this request."
                },
                "type": {
                    "type": "string",
                    "description": "RetryUpgrade"
                },
                "targets": {
                    "type": "array",
                    "description": "A list of FTD devices.",
                    "items": {
                        "$ref": "#/definitions/ITarget"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "This operation retries a failed upgrade."
        },
        "IHost": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "FTDBridgeGroupInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "selectedInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterface"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bridgeGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AllowDNSRule": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "dnsFeeds": {
                    "description": "List of DNS Feed objects",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "sourceZones": {
                    "description": "Contains a list or Security Zone objects referenced by the rule",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the DNS Policy Rule; this value is always AllowDNSRule."
                },
                "sinkhole": {
                    "description": "If the action of the rule is SINKHOLE, then this attribute contains the sinkhole object referenced",
                    "$ref": "#/definitions/IReference"
                },
                "dnsLists": {
                    "description": "List of DNS List objects",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "networks": {
                    "description": "Contains network objects referenced by the rule. It is split in 2 separate lists: objects and literals",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "version": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean property indicating if the rule is enabled"
                },
                "systemDefault": {
                    "type": "boolean",
                    "description": "Boolean property indicating if the current rule is a system defined one"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the DNS policy Rule."
                },
                "action": {
                    "type": "string",
                    "description": "The type of the rule. Possible values are: ALLOW, BLOCK, MONITOR, SINKHOLE, NXDOMAIN",
                    "enum": [
                        "ALLOW",
                        "MONITOR",
                        "SINKHOLE",
                        "BLOCK",
                        "NXDOMAIN"
                    ]
                },
                "vlanTags": {
                    "description": "Contains VLAN tag objects referenced by the rule. It is split in 2 separate lists: objects and literals",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the DNS policy Rule."
                }
            },
            "description": "Description of DNS Policy Rule."
        },
        "IAddressContainer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "enforceEUI64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "IConnProfileCertificateUsernameSettings": {
            "type": "object",
            "properties": {
                "mapPrimaryField": {
                    "type": "string",
                    "description": "Field in the certificate that will be used as Primary attribute to authenticate. Default value is CN (Common Name)",
                    "enum": [
                        "CN_COMMMON_NAME",
                        "C_COUNTRY",
                        "DNQ_DN_QUALIFIER",
                        "EA_EMAIL_ADDRESS",
                        "GENQ_GENERATIONAL_QUALIFIER",
                        "GN_GIVEN_NAME",
                        "I_INITIAL",
                        "L_LOCALITY",
                        "N_NAME",
                        "O_ORGANISATION",
                        "OU_ORGANISATIONAL_UNIT",
                        "SER_SERIAL_NUMBER",
                        "SN_SURNAME",
                        "SP_STATE_PROVINCE",
                        "T_TITLE",
                        "UID_USER_ID",
                        "UPN_USER_PRINCIPAL_NAME",
                        "NONE"
                    ]
                },
                "mapEntireDNAsUsername": {
                    "type": "boolean",
                    "description": "Use entire DN name to authenticate the certificate. Default is False."
                },
                "prefillUsernameFromCertificate": {
                    "type": "boolean",
                    "description": "Prefill username from certificate when the user connects. Default is False."
                },
                "hideUsername": {
                    "type": "boolean",
                    "description": "Hide prefilled username field so that the user cannot modify it. Default is False."
                },
                "mapSecondaryField": {
                    "type": "string",
                    "description": "Field in the certificate that will be used as Secondary attribute to authenticate. Default value is OU (Organization Unit)",
                    "enum": [
                        "CN_COMMMON_NAME",
                        "C_COUNTRY",
                        "DNQ_DN_QUALIFIER",
                        "EA_EMAIL_ADDRESS",
                        "GENQ_GENERATIONAL_QUALIFIER",
                        "GN_GIVEN_NAME",
                        "I_INITIAL",
                        "L_LOCALITY",
                        "N_NAME",
                        "O_ORGANISATION",
                        "OU_ORGANISATIONAL_UNIT",
                        "SER_SERIAL_NUMBER",
                        "SN_SURNAME",
                        "SP_STATE_PROVINCE",
                        "T_TITLE",
                        "UID_USER_ID",
                        "UPN_USER_PRINCIPAL_NAME",
                        "NONE"
                    ]
                }
            },
            "description": "Settings used when user is authenticated using certificate."
        },
        "IPv4StaticRouteModel": {
            "type": "object",
            "required": [
                "gateway",
                "interfaceName",
                "metricValue",
                "selectedNetworks"
            ],
            "properties": {
                "routeTracking": {
                    "$ref": "#/definitions/ISLAMonitorModel"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "selectedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "metricValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "isTunneled": {
                    "type": "boolean"
                },
                "interfaceName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/IHostObjectContainer"
                }
            }
        },
        "ApplicationTypeListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationType"
                    }
                }
            }
        },
        "ErrorMessagesContainer": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                }
            }
        },
        "IOverride": {
            "type": "object",
            "properties": {
                "parent": {
                    "description": "Link to the parent/global resource which is overriden.",
                    "$ref": "#/definitions/IReference"
                },
                "target": {
                    "description": "The device or the domain target on which this override is enabled.",
                    "$ref": "#/definitions/IReference"
                }
            },
            "description": "Defines the override details for this object."
        },
        "TimeZoneObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeZoneObject"
                    }
                }
            }
        },
        "IKEv2IPsecProposal": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "encryptionAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "integrityAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DeviceChassisData": {
            "type": "object",
            "properties": {
                "securityModuleNo": {
                    "type": "integer",
                    "format": "int32"
                },
                "chassisUrl": {
                    "type": "string"
                },
                "securityModuleSN": {
                    "type": "string"
                },
                "chassisSerialNo": {
                    "type": "string"
                }
            }
        },
        "JobHistoryListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JobHistory"
                    }
                }
            }
        },
        "IOspfLogAdjChanges": {
            "type": "object",
            "properties": {
                "logType": {
                    "type": "string",
                    "enum": [
                        "DEFAULT",
                        "DETAILED"
                    ]
                }
            }
        },
        "ExtendedAccessListModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtendedAccessListModel"
                    }
                }
            }
        },
        "FTDEtherChannelInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "minActivePhysicalInterface": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "selectedInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterface"
                    }
                },
                "etherChannelId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "lacpRate": {
                    "type": "string",
                    "enum": [
                        "DEFAULT",
                        "NORMAL",
                        "FAST"
                    ]
                },
                "hardware": {
                    "$ref": "#/definitions/IHardwareContainer"
                },
                "lacpMode": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "PASSIVE",
                        "ON"
                    ]
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "maxActivePhysicalInterface": {
                    "type": "integer",
                    "format": "int32"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "loadBalancing": {
                    "type": "string",
                    "enum": [
                        "DST_IP",
                        "DST_IP_PORT",
                        "DST_PORT",
                        "DST_MAC",
                        "SRC_IP",
                        "SRC_IP_PORT",
                        "SRC_PORT",
                        "SRC_MAC",
                        "SRC_DST_IP",
                        "SRC_DST_IP_PORT",
                        "SRC_DST_PORT",
                        "SRC_DST_MAC",
                        "VLAN_DST_IP",
                        "VLAN_DST_IP_PORT",
                        "VLAN_SRC_IP",
                        "VLAN_SRC_IP_PORT",
                        "VLAN_SRC_DST_IP",
                        "VLAN_SRC_DST_IP_PORT",
                        "VLAN_ONLY"
                    ]
                },
                "version": {
                    "type": "string"
                },
                "erspanFlowId": {
                    "type": "integer",
                    "format": "int32"
                },
                "erspanSourceIP": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ContinentObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the continent.",
                    "$ref": "#/definitions/Metadata"
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "This field is deprecated and should not be used."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Continent."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "countries": {
                    "type": "array",
                    "description": "List of objects representing countries.",
                    "items": {
                        "$ref": "#/definitions/ICountryModel"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Identifier matching continent from geolocation database."
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always Continent."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Represents a Continent."
        },
        "DeployableDeviceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeployableDevice"
                    }
                }
            }
        },
        "VlanTagGroup": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "objects": {
                    "type": "array",
                    "description": "List of member vlan tags in this group",
                    "items": {
                        "$ref": "#/definitions/IVlanModel"
                    }
                },
                "literals": {
                    "type": "array",
                    "description": "List of tag values in group.",
                    "items": {
                        "$ref": "#/definitions/IVlanTagLiteral"
                    }
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: VlanTagGroup."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing tag group definition."
        },
        "RollbackRequest": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the rollback request entry.",
                    "$ref": "#/definitions/RollbackRequestMetadata"
                },
                "rollbackDeviceList": {
                    "type": "array",
                    "description": "A list containing job UUID and device UUIDs combination for the rollback.",
                    "items": {
                        "$ref": "#/definitions/IRollbackDeviceListEntry"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type must be RollbackRequest."
                }
            },
            "description": "Represents the rollback request object which will be used for config rollback of a device."
        },
        "URLCategory": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "InterfaceObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InterfaceObject"
                    }
                }
            }
        },
        "FTDRAVpnModel": {
            "type": "object",
            "required": [
                "accessInterfaceSettings",
                "addressAssignmentSettings",
                "anyConnectClientImages",
                "ravpnConnectionProfiles"
            ],
            "properties": {
                "metadata": {
                    "description": "Specifies metadata properties of RAVPN.",
                    "$ref": "#/definitions/IMetadata"
                },
                "anyConnectClientImages": {
                    "type": "array",
                    "description": "Specifies a list of AnyConnect images and order of the image",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A model representing RAVPN definition."
                },
                "ravpnConnectionProfiles": {
                    "type": "object",
                    "description": "Specifies a list of Connection Profiles"
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: RAVPN."
                },
                "version": {
                    "type": "string"
                },
                "accessInterfaceSettings": {
                    "description": "Specifies the configuration for Access Interface Settings",
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "localRealmServer": {
                    "$ref": "#/definitions/IReference"
                },
                "certificateMapSettings": {
                    "description": "Specifies the certificate map settings",
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "description": "Specifies links to this object.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Specifies Unique identifier (UUID) representing the RAVPN object"
                },
                "addressAssignmentSettings": {
                    "description": "Specifies address assignments settings",
                    "$ref": "#/definitions/IReference"
                },
                "groupPolicies": {
                    "type": "array",
                    "description": "Specifies a list of Group Policie",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                }
            },
            "description": "A model representing Remote Access VPN Policy"
        },
        "IACPolicyIdentityPolicySettings": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "identityPolicy": {
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "VlanTagListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VlanTag"
                    }
                }
            }
        },
        "ITimeRangeModel": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "effectiveEndDateTime": {
                    "type": "string"
                },
                "effectiveStartDateTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "recurrenceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRecurrence"
                    }
                }
            }
        },
        "SNMPConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ExternalStorage": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string"
                },
                "uiPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "intValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "doNotStoreConnectionEvents": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "crossLaunchEnabled": {
                    "type": "boolean"
                },
                "uiHost": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "longValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "enabled": {
                    "type": "boolean"
                },
                "network": {
                    "$ref": "#/definitions/NetworkObject"
                },
                "remoteQueryHost": {
                    "type": "string"
                },
                "logHost": {
                    "type": "string"
                },
                "isLinaLoggingEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "logPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "remoteQueryPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "remoteQueryCert": {
                    "type": "string"
                }
            }
        },
        "DNSPolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the DNS policy.",
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the DNS policy."
                },
                "description": {
                    "type": "string",
                    "description": "Description of DNS Policy"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the DNS policy."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the DNS policy; this value is always DNSPolicy."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "Description of DNS Policy."
        },
        "DefaultActionListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DefaultAction"
                    }
                }
            }
        },
        "DomainListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain"
                    }
                }
            }
        },
        "ISecurityGroupTag": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "tag": {
                    "type": "integer",
                    "format": "int32"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "VirtualSwitch": {
            "type": "object",
            "properties": {
                "dropBPDU": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "sensorPolicy": {
                    "$ref": "#/definitions/IAccessPolicyModel"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "strictTCPEnforcement": {
                    "type": "boolean"
                },
                "domainId": {
                    "type": "integer",
                    "format": "int32"
                },
                "staticMacEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStaticMacEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "switchedInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterface"
                    }
                },
                "enableSpanningTreeProtocol": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "hybridInterface": {
                    "$ref": "#/definitions/IInterface"
                }
            }
        },
        "SSOServerOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique UUID representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing SSOServerOverride object definition."
        },
        "AccessPolicyCategoryMetadata": {
            "type": "object",
            "properties": {
                "startIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Index of the first Access Rule inside the category. Index will be -1 if there are no rules in category"
                },
                "lastUser": {
                    "description": "The last user who modified this instance.",
                    "$ref": "#/definitions/MetadataUser"
                },
                "endIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Index of the last Access Rule inside the category. Index will be -1 if there are no rules in category"
                },
                "domain": {
                    "description": "Object representing the domain under which the operation has been performed.",
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "description": "Details regarding the read only status of this instance.",
                    "$ref": "#/definitions/ReadOnly"
                },
                "section": {
                    "type": "string",
                    "description": "Specifies the section into which the rules will be added. Only 'mandatory' and 'default' are allowed values. If none of the parameters are specified category will be added to 'default' section"
                },
                "accessPolicy": {
                    "description": "Object representing the access control containing the rule.",
                    "$ref": "#/definitions/IReference"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The last updated timestamp."
                }
            },
            "description": "Description of Access Policy Category Metadata."
        },
        "IApplicationType": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application type.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application type."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "Application type resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the application type."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationType."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Represents an ApplicationType."
        },
        "IUsersContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRealmEntity"
                    }
                }
            }
        },
        "SSOConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "ssoProvider": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "rootUrl": {
                    "type": "string"
                },
                "ssoCert": {
                    "type": "string"
                },
                "advancedConfig": {
                    "$ref": "#/definitions/ISSOAdvancedConfig"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "ssoIssuer": {
                    "type": "string"
                }
            }
        },
        "InterfaceEvent": {
            "type": "object",
            "properties": {
                "hasPendingChanges": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "change": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "SYNC_WITH_DEVICE",
                        "ACCEPT_CHANGES"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "DISASSOCIATED",
                        "ASSOCIATED",
                        "MODIFIED"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DynamicObject": {
            "type": "object",
            "properties": {
                "agentId": {
                    "type": "string"
                },
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/DynamicObjectMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Dynamic objects; this value is always DynamicObject."
                },
                "version": {
                    "type": "string"
                },
                "objectType": {
                    "type": "string",
                    "description": "Type of dynamic object mappings. Currently we support only 'IP'."
                }
            },
            "description": "The details about the Dynamic Object."
        },
        "ISecurityZoneObjectModel": {
            "type": "object",
            "properties": {
                "interfaceMode": {
                    "type": "string",
                    "enum": [
                        "PASSIVE",
                        "INLINE",
                        "SWITCHED",
                        "ROUTED",
                        "ASA"
                    ]
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceDeviceModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IOspfDeadIntervalMechanism": {
            "type": "object",
            "properties": {
                "deadInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "helloInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "neighborDetectionType": {
                    "type": "string"
                }
            }
        },
        "Snort3IntrusionRuleGroupsObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Snort3IntrusionRuleGroupsObject"
                    }
                }
            }
        },
        "IDistributeLists": {
            "type": "object",
            "properties": {
                "protocol": {
                    "$ref": "#/definitions/IFilterProtocol"
                },
                "accessList": {
                    "$ref": "#/definitions/IStandardACL"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IYouTube": {
            "type": "object",
            "properties": {
                "siteKey": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "IOspfKeyChainAuth": {
            "type": "object",
            "properties": {
                "authKey": {
                    "$ref": "#/definitions/IKeyChainObject"
                },
                "authType": {
                    "type": "string"
                }
            }
        },
        "SecurityZoneObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecurityZoneObject"
                    }
                }
            }
        },
        "IPv6PrefixListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv6PrefixList"
                    }
                }
            }
        },
        "FTDHAIPv4Configuration": {
            "type": "object",
            "properties": {
                "standbyIPv4Address": {
                    "type": "string"
                },
                "activeIPv4Mask": {
                    "type": "string"
                },
                "activeIPv4Address": {
                    "type": "string"
                }
            }
        },
        "IExpandedCommunityListEntry": {
            "type": "object",
            "required": [
                "action",
                "regularExpression",
                "sequence"
            ],
            "properties": {
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "regularExpression": {
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "AnyProtocolPortObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties.",
                    "$ref": "#/definitions/PortMetadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "Represents an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: AnyProtocolPortObject."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing Any portocol port object definition."
        },
        "LLFeedConfig": {
            "type": "object",
            "properties": {
                "safeToUpdate": {
                    "type": "boolean"
                },
                "feedContent": {
                    "type": "string"
                },
                "updatedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "safeToDelete": {
                    "type": "boolean"
                },
                "feedStatus": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "downloadOn": {
                    "type": "boolean"
                },
                "nextRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "password": {
                    "type": "string"
                },
                "totalUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "property": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "id": {
                    "type": "string"
                },
                "clientPrivateKey": {
                    "type": "string"
                },
                "totalUpdatedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientCert": {
                    "type": "string"
                },
                "subscribedCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LLCollectionTopic"
                    }
                },
                "discardedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "finishTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "availableCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LLCollectionTopic"
                    }
                },
                "lastRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "recurring": {
                    "type": "boolean"
                },
                "refreshSec": {
                    "type": "integer",
                    "format": "int32"
                },
                "refreshMin": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "params": {
                    "$ref": "#/definitions/LLParams"
                },
                "inRunningState": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "totalUpdatedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "discoveryInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LLCollectionTopic"
                    }
                },
                "statusMsg": {
                    "$ref": "#/definitions/LLStatusMsg"
                },
                "passwd": {
                    "type": "string"
                },
                "discardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "totalDiscardedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "caCert": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "consumedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "checksum": {
                    "type": "string"
                },
                "delivery": {
                    "type": "string"
                },
                "proxyURL": {
                    "type": "string"
                },
                "runNow": {
                    "type": "boolean"
                },
                "updatedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalConsumedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "refresh": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalDiscardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "uri": {
                    "type": "string"
                },
                "passwdAsIs": {
                    "type": "string"
                },
                "startHour": {
                    "type": "integer",
                    "format": "int32"
                },
                "feedType": {
                    "type": "string"
                },
                "totalConsumedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "TimeZoneObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of the response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "timeZoneId": {
                    "type": "string",
                    "description": "Unique identifier of the global time zone from the IANA time zone (tz) database."
                },
                "timeZone": {
                    "type": "string",
                    "description": "Read-only field containing description of the specified global time zone (timeZoneId)."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always TimeZoneObject."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                },
                "dstDateRange": {
                    "description": "Object representing the daylight saving configuration by date range. Either dstDateRange or dstDayRecurrence field must be configured to enable daylight saving for the object.",
                    "$ref": "#/definitions/ITimeZoneDateRangeFragment"
                },
                "dstDayRecurrence": {
                    "description": "Object representing the daylight saving configuration by day-based recurrence. Either dstDateRange or dstDayRecurrence field must be configured to enable daylight saving.",
                    "$ref": "#/definitions/ITimeZoneDayRecurrenceFragment"
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing response object."
                }
            },
            "description": "Object representing a time zone object."
        },
        "URLCategoryListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/URLCategory"
                    }
                }
            }
        },
        "IFilterProtocol": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string",
                    "enum": [
                        "CONNECTED",
                        "BGP",
                        "OSPF",
                        "RIP",
                        "STATIC"
                    ]
                },
                "processId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "PortObjectGroupOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortObjectGroupOverride"
                    }
                }
            }
        },
        "FTDHAMonitoredInterfaces": {
            "type": "object",
            "required": [
                "monitorForFailures"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties",
                    "$ref": "#/definitions/IMetadata"
                },
                "monitorForFailures": {
                    "type": "boolean",
                    "description": "Flag indicating failure for monitored interfaces"
                },
                "ipv6Configuration": {
                    "description": "IPv6 Configuration",
                    "$ref": "#/definitions/FTDHAIPv6Configuration"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Firepower Threat Defense high availability monitored interface"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Firepower Threat Defense high availability monitored interface"
                },
                "links": {
                    "description": "URL of the Firepower Threat Defense high availability monitored interface",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the Firepower Threat Defense high availability monitored interface"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Firepower Threat Defense high availability monitored interface"
                },
                "version": {
                    "type": "string",
                    "description": "Firepower Threat Defense high availability monitored interface model version"
                },
                "ipv4Configuration": {
                    "description": "Global",
                    "$ref": "#/definitions/FTDHAIPv4Configuration"
                }
            },
            "description": "Input representation of Firepower Threat Defense high availability monitored interface"
        },
        "IDeviceGroup": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IBaseDevice"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IRouteMapEntry": {
            "type": "object",
            "required": [
                "action",
                "sequence"
            ],
            "properties": {
                "ipv4PrefixListRouteSources": {
                    "type": "array",
                    "description": "Match IPv4 (routes/traffic) based on the advertising source address of the route. ",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "metricBandwidth": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Metric value or bandwidth in Kbits per second"
                },
                "policyLists": {
                    "type": "array",
                    "description": "Configure a route map to evaluate and process a BGP policy.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "ipv6AccessListRouteSources": {
                    "type": "array",
                    "description": "Match IPv6 (routes/traffic) based on the advertising source address of route.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "ipv6AccessListAddresses": {
                    "type": "array",
                    "description": "Match IPv6 (routes/traffic) based on the route address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "ipv4AccessListAddresses": {
                    "type": "array",
                    "description": "Match IPv4 (routes/traffic) based on the route address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "routeTypeNSSAExternal1": {
                    "type": "boolean",
                    "description": "Enable NSSA-External1 route type"
                },
                "routeTypeNSSAExternal2": {
                    "type": "boolean",
                    "description": "Enable NSSA-External2 route type"
                },
                "ipv6PrefixListNexthops": {
                    "type": "array",
                    "description": "Match IPv6 (routes/traffic) based on the next-hop address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "nextHopIPV4Setting": {
                    "type": "string",
                    "description": "Specify a next hop IPv4 address of the next hop to which packets are output.",
                    "enum": [
                        "USE_PEER_ADDRESS",
                        "SPECIFIC_IP"
                    ]
                },
                "metricType": {
                    "type": "string",
                    "description": "Valid values are : internal, type-1, or type-2.",
                    "enum": [
                        "INTERNAL",
                        "TYPE_1",
                        "TYPE_2"
                    ]
                },
                "nextHopIPV6Setting": {
                    "type": "string",
                    "description": "Specify a next hop IPv6 address of the next hop to which packets are output.",
                    "enum": [
                        "USE_PEER_ADDRESS",
                        "SPECIFIC_IP"
                    ]
                },
                "ipv4AccessListNextHops": {
                    "type": "array",
                    "description": "Match IPv4 (routes/traffic) based on the next-hop address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "ipv4PrefixListNexthops": {
                    "type": "array",
                    "description": "Match IPv4 (routes/traffic) based on the next-hop address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "action": {
                    "type": "string",
                    "description": "Indicate the redistribution access: PERMIT or DENY",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                },
                "asPathLists": {
                    "type": "array",
                    "description": "Enable matching the BGP autonomous system path access list with the specified path access list.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "tagValues": {
                    "type": "array",
                    "description": "This setting allows you to match any routes that have a specified security group tag.",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "communityListSettingInternet": {
                    "type": "boolean",
                    "description": "Internet: one of the well-known communities"
                },
                "communityListSetting": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Enable matching the BGP community with the specified community."
                },
                "ipv6AccessListNextHops": {
                    "type": "array",
                    "description": "Match IPv6 (routes/traffic) based on the next-hop address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "interfaces": {
                    "type": "array",
                    "description": "Match traffic based on the (ingress/egress) interfaces. Input security Zones.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "originSetting": {
                    "type": "string",
                    "description": "BGP origin code. Valid values are Local IGP Local IGP and Incomplete.",
                    "enum": [
                        "LOCAL_IGP",
                        "INCOMPLETE"
                    ]
                },
                "specificIPsIPV6Setting": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "communityListSettingNoExport": {
                    "type": "boolean",
                    "description": "No-Export: One of the well-known communities"
                },
                "localPreferenceSetting": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Preference value for the autonomous system path"
                },
                "interfaceNames": {
                    "type": "array",
                    "description": "Match traffic based on the (ingress/egress) interfaces. Logical names.",
                    "items": {
                        "type": "string"
                    }
                },
                "automaticTagSetting": {
                    "type": "boolean",
                    "description": "Automatically compute the tag value."
                },
                "ipv4PrefixListAddresses": {
                    "type": "array",
                    "description": "Match IPv4 (routes/traffic) based on the route address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "asPathPrependLastASToASPath": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Prepend the AS path with the last AS number."
                },
                "ipv6PrefixListAddresses": {
                    "type": "array",
                    "description": "Match IPv6 (routes/traffic) based on the route address.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "ipv6PrefixListRouteSources": {
                    "type": "array",
                    "description": "Match IPv6 (routes/traffic) based on the advertising source address of route.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "prefixListIPV6Setting": {
                    "description": "Match IPv6 (routes/traffic) based on the route address.",
                    "$ref": "#/definitions/IReference"
                },
                "prefixListIPV4Setting": {
                    "description": "Match IPv4 (routes/traffic) based on the route address.",
                    "$ref": "#/definitions/IReference"
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the position a new route map entry will have in the list of route maps entries already configured for this route map object"
                },
                "routeTypeExternal2": {
                    "type": "boolean",
                    "description": "Enable External2 route type"
                },
                "metricRouteValues": {
                    "type": "array",
                    "description": "Enable matching the metric of a route",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "routeTypeExternal1": {
                    "type": "boolean",
                    "description": "Enable External1 route type"
                },
                "communityListSettingNoAdvertise": {
                    "type": "boolean",
                    "description": "No Advertise: one of the well-known communities"
                },
                "communityLists": {
                    "type": "array",
                    "description": "Enable matching the BGP community with the specified community.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "specificIPsIPV4Setting": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "asPathPrependASPath": {
                    "type": "array",
                    "description": "Prepend an arbitrary autonomous system path string to BGP routes.",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "ipv4AccessListRouteSources": {
                    "type": "array",
                    "description": "Match IPv4 (routes/traffic) based on the advertising source address of the route. ",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "weightSetting": {
                    "type": "integer",
                    "format": "int32",
                    "description": "BGP weight for the routing table"
                },
                "routeTypeLocal": {
                    "type": "boolean",
                    "description": "Enable Local route type"
                }
            },
            "description": "List of route maps entries already configured for this route map object."
        },
        "IRouteMap": {
            "type": "object",
            "required": [
                "entries",
                "name"
            ],
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRouteMapEntry"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IOspfAuthentication": {
            "type": "object",
            "properties": {
                "passwdAuth": {
                    "$ref": "#/definitions/IOspfPasswdAuth"
                },
                "md5AuthList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfMD5Auth"
                    }
                },
                "keyChain": {
                    "$ref": "#/definitions/IOspfKeyChainAuth"
                },
                "areaAuth": {
                    "$ref": "#/definitions/IOspfAreaAuth"
                }
            }
        },
        "VrfStaticRouteModel": {
            "type": "object",
            "required": [
                "gateway",
                "interfaceName",
                "metricValue",
                "selectedNetworks"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "selectedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "metricValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "isTunneled": {
                    "type": "boolean"
                },
                "interfaceName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/IHostObjectContainer"
                }
            }
        },
        "ICMPV6ObjectOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "INetworkObjectsContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkBase"
                    }
                },
                "literals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddressLiteral"
                    }
                }
            }
        },
        "IMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/IMetadataUser"
                },
                "domain": {
                    "$ref": "#/definitions/IDomain"
                },
                "readOnly": {
                    "$ref": "#/definitions/IReadonly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "HostObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Defines read only details about the object - whether it is system defined, last user who modified the object etc.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Set to 'true' if the object can be overridden, 'false' otherwise."
                },
                "name": {
                    "type": "string",
                    "description": " The unique name for the object."
                },
                "description": {
                    "type": "string",
                    "description": "A description about the object."
                },
                "links": {
                    "description": "Contains the full URL to the current object and its parent (if any)",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "This is populated only if this object is an override and contains the parent (global) object id and whether this is an override on device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "The unique UUID of this object."
                },
                "type": {
                    "type": "string",
                    "description": "The unique type of this object (fixed)."
                },
                "value": {
                    "type": "string",
                    "description": "The Host IP address value for this object."
                },
                "version": {
                    "type": "string",
                    "description": "The unique object version (if any)."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "The override target id either the device (UUID) or the domain (UUID) on which this override is created. Applicable only for overriden objects."
                }
            },
            "description": "An object defining a Host Network object definition."
        },
        "ContinentObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContinentObject"
                    }
                }
            }
        },
        "AsPathList": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IAsPathListEntry"
                    }
                },
                "name": {
                    "type": "integer",
                    "format": "int32"
                },
                "overridable": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ISNMPConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DynamicObjectMappings": {
            "type": "object",
            "properties": {
                "mappings": {
                    "type": "array",
                    "description": "List of Hostname or Network which will be mapped or removed from Dynamic Object",
                    "items": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing Dynamic Object."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Dynamic objects Mappings; this value is always DynamicObjectMappings."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "The details about the Dynamic Object Mappings."
        },
        "LLElement": {
            "type": "object",
            "properties": {
                "capabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "caCert": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "miscData": {
                    "$ref": "#/definitions/LLMiscData"
                },
                "cert": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registrationDate": {
                    "type": "integer",
                    "format": "int32"
                },
                "action": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "InspectorConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "inspectorConfig": {
                    "$ref": "#/definitions/LLInspectorConfig"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the object. This value is always 'InspectorConfig'."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Object representing inspector settings for network analysis policy."
        },
        "IFMCAccessConfig": {
            "type": "object",
            "properties": {
                "enableAccess": {
                    "type": "boolean"
                },
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                }
            }
        },
        "RESTIndicatorEquationNode": {
            "type": "object",
            "properties": {
                "op": {
                    "type": "string"
                },
                "item": {
                    "$ref": "#/definitions/LLEquationNode"
                },
                "condition": {
                    "type": "string"
                },
                "isRealized": {
                    "type": "boolean"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTIndicatorEquationNode"
                    }
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "applyCondition": {
                    "type": "string"
                }
            }
        },
        "HitCountListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "description": "List of all HitCount entries for given filter query on Access Policy.",
                    "items": {
                        "$ref": "#/definitions/HitCount"
                    }
                }
            },
            "description": "List of all HitCount entries for given filter query on Access Policy."
        },
        "UrlGroupOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing URL group override definition."
        },
        "IReadonly": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "enum": [
                        "RBAC",
                        "SYSTEM",
                        "DOMAIN"
                    ]
                },
                "state": {
                    "type": "boolean"
                }
            }
        },
        "BGPGeneralSettingModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BGPGeneralSettingModel"
                    }
                }
            }
        },
        "FMCHAStatus": {
            "type": "object",
            "properties": {
                "pendingDeviceInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPendingDeviceRegInfo"
                    }
                },
                "fmcPrimary": {
                    "$ref": "#/definitions/IFMCServerInfo"
                },
                "haOpInProgress": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "haStatusMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "fmcSecondary": {
                    "$ref": "#/definitions/IFMCServerInfo"
                },
                "overallStatus": {
                    "type": "string",
                    "enum": [
                        "GOOD",
                        "DEGRADED",
                        "SPLIT_BRAIN"
                    ]
                },
                "syncStatus": {
                    "type": "string",
                    "enum": [
                        "GOOD",
                        "IN_PROGRESS",
                        "PAUSED",
                        "FAILED"
                    ]
                }
            }
        },
        "FQDNObject": {
            "type": "object",
            "required": [
                "dnsResolution"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "dnsResolution": {
                    "type": "string",
                    "enum": [
                        "IPV4_ONLY",
                        "IPV6_ONLY",
                        "IPV4_AND_IPV6"
                    ]
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "overrideTargetId": {
                    "type": "string"
                }
            }
        },
        "IStandardCommunityListEntry": {
            "type": "object",
            "required": [
                "action",
                "communities",
                "sequence"
            ],
            "properties": {
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "noExport": {
                    "type": "boolean"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "internet": {
                    "type": "boolean"
                },
                "noAdvertise": {
                    "type": "boolean"
                },
                "communities": {
                    "type": "string"
                }
            }
        },
        "ApplicationRisk": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IFTDHAFailoverInterfacePolicyTrigger": {
            "type": "object",
            "required": [
                "interfaceHoldTime",
                "interfacePollTime",
                "interfacePollTimeUnit",
                "peerHoldTime",
                "peerHoldTimeUnit",
                "peerPollTime",
                "peerPollTimeUnit"
            ],
            "properties": {
                "percentFailedInterfaceExceed": {
                    "type": "integer",
                    "format": "int32"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "peerHoldTimeUnit": {
                    "type": "string",
                    "enum": [
                        "SEC",
                        "MSEC"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "peerHoldTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "interfacePollTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "noOfFailedInterfaceLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "peerPollTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "interfaceHoldTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "peerPollTimeUnit": {
                    "type": "string",
                    "enum": [
                        "SEC",
                        "MSEC"
                    ]
                },
                "interfacePollTimeUnit": {
                    "type": "string",
                    "enum": [
                        "SEC",
                        "MSEC"
                    ]
                }
            }
        },
        "PrefilterDefaultActionListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PrefilterDefaultAction"
                    }
                }
            }
        },
        "ISecurityZoneContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISecurityZoneObjectModel"
                    }
                }
            }
        },
        "FTDBaseInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "IPolicyObjectModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IDependentPolicy": {
            "type": "object",
            "properties": {
                "dependentTypeList": {
                    "type": "array",
                    "description": "List of out-of-date policies which are inter-dependent.",
                    "items": {
                        "type": "string"
                    }
                },
                "dependencyReason": {
                    "type": "string",
                    "description": "Describes the reason for the inter-dependency between the out-of-date policies."
                }
            },
            "description": "Represents the inter-dependent out-of-date policies with the reason."
        },
        "FTDClusterDeviceContainer": {
            "type": "object",
            "required": [
                "masterDevice",
                "slaveDevices"
            ],
            "properties": {
                "masterDevice": {
                    "description": "Current master device ID",
                    "$ref": "#/definitions/IDevice"
                },
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/IMetadata"
                },
                "modelId": {
                    "type": "string",
                    "description": "Model ID"
                },
                "advanced": {
                    "description": "Object representing Device Advanced Configuration.",
                    "$ref": "#/definitions/IAdvanced"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "slaveDevices": {
                    "type": "array",
                    "description": "List of slave devices",
                    "items": {
                        "$ref": "#/definitions/IDevice"
                    }
                },
                "modelType": {
                    "type": "string",
                    "description": "Model type of the registered device cluster."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: DeviceCluster"
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "sw_version": {
                    "type": "string",
                    "description": "FTD Cluster version"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Current health status of the device, for e.g. green"
                },
                "healthPolicy": {
                    "description": "Object representing the system health policy applied to the registered device cluster.",
                    "$ref": "#/definitions/IHealthPolicy"
                },
                "name": {
                    "type": "string",
                    "description": "FTD Cluster name."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "model": {
                    "type": "string",
                    "description": "Cisco device model name, for e.g. Cisco Firepower 9000 Series SM-24 Threat Defense"
                },
                "modelNumber": {
                    "type": "string",
                    "description": "Model number of the registered device."
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "accessPolicy": {
                    "description": "Object representing the currently assigned access control policy.",
                    "$ref": "#/definitions/IPolicyModel"
                }
            },
            "description": "A model representing FTD Cluster Container"
        },
        "Snort3NetworkAnalysisPolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of Network Analysis Policy.",
                    "$ref": "#/definitions/IIntrusionPolicyMetadata"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Network Analysis Policy"
                },
                "inspectorConfig": {
                    "description": "Object representing inspector settings for Network Analysis Policy.",
                    "$ref": "#/definitions/IReference"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be NetworkAnalysisPolicy."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "snortEngine": {
                    "type": "string",
                    "description": "Indicates the Snort engine version.",
                    "enum": [
                        "SNORT2",
                        "SNORT3"
                    ]
                },
                "inspectionMode": {
                    "type": "string",
                    "description": "Indicates the inspection mode. Can be either DETECTION or PREVENTION. Only applicable for Snort 3 engine.",
                    "enum": [
                        "PREVENTION",
                        "DETECTION"
                    ]
                },
                "isSystemDefined": {
                    "type": "boolean",
                    "description": "Specifies if the policy is system defined."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Network Analysis Policy"
                },
                "basePolicy": {
                    "description": "Object representing the base policy of the Network Analysis Policy.",
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the Network Analysis Policy."
                },
                "inspectorOverrideConfig": {
                    "description": "Object representing modified inspector settings for Network Analysis Policy.",
                    "$ref": "#/definitions/IReference"
                }
            },
            "description": "An object that represents the details for Network Analysis Policy."
        },
        "IPv4StaticRouteModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv4StaticRouteModel"
                    }
                }
            }
        },
        "IPv4AddressPoolOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false of overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing IPv4AddressPoolOverride definition."
        },
        "Ospfv3PolicyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "processId": {
                    "type": "integer",
                    "format": "int32"
                },
                "processConfiguration": {
                    "$ref": "#/definitions/IOspfv3ProcessModel"
                },
                "name": {
                    "type": "string"
                },
                "summaryPrefix": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfv3SummaryPrefix"
                    }
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfv3Area"
                    }
                },
                "redistributeProtocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRedistributeProtocolBase"
                    }
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "AccessPolicyInheritanceSetting": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the access policy inheritance settings.",
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the access policy inheritance setting."
                },
                "basePolicy": {
                    "description": "Object specifying the base access policy for inheritance setting",
                    "$ref": "#/definitions/IReference"
                },
                "description": {
                    "type": "string",
                    "description": "Description of Access Policy Inheritance settings"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the access policy inheritance setting."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the access control policy inheritance setting; this value is always AccessPolicyInheritanceSetting."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Description of Access Policy Inheritence Setting."
        },
        "IFileWrapper": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "attrib": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IVLanTagsContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IVlanBase"
                    }
                },
                "literals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IVlanTagLiteral"
                    }
                }
            }
        },
        "BlockDNSRule": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "dnsFeeds": {
                    "description": "List of DNS Feed objects",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "sourceZones": {
                    "description": "Contains a list or Security Zone objects referenced by the rule",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the DNS Policy Rule; this value is always BlockDNSRule."
                },
                "sinkhole": {
                    "description": "If the action of the rule is SINKHOLE, then this attribute contains the sinkhole object referenced",
                    "$ref": "#/definitions/IReference"
                },
                "dnsLists": {
                    "description": "List of DNS List objects",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "networks": {
                    "description": "Contains network objects referenced by the rule. It is split in 2 separate lists: objects and literals",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "version": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean property indicating if the rule is enabled"
                },
                "systemDefault": {
                    "type": "boolean",
                    "description": "Boolean property indicating if the current rule is a system defined one"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the DNS policy Rule."
                },
                "action": {
                    "type": "string",
                    "description": "The type of the rule. Possible values are: ALLOW, BLOCK, MONITOR, SINKHOLE, NXDOMAIN",
                    "enum": [
                        "ALLOW",
                        "MONITOR",
                        "SINKHOLE",
                        "BLOCK",
                        "NXDOMAIN"
                    ]
                },
                "vlanTags": {
                    "description": "Contains VLAN tag objects referenced by the rule. It is split in 2 separate lists: objects and literals",
                    "$ref": "#/definitions/IReferenceContainer"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the DNS policy Rule."
                }
            },
            "description": "Description of DNS Policy Rule."
        },
        "IMaximumPaths": {
            "type": "object",
            "properties": {
                "ibgp": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "InlineSet": {
            "type": "object",
            "properties": {
                "macFiltering": {
                    "type": "boolean"
                },
                "loadBalancingModeVlan": {
                    "type": "string"
                },
                "tapMode": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "standBy": {
                    "type": "boolean"
                },
                "failOpenSnortBusy": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "strictTCPEnforcement": {
                    "type": "boolean"
                },
                "failopen": {
                    "type": "boolean"
                },
                "mtu": {
                    "type": "integer",
                    "format": "int32"
                },
                "bypass": {
                    "type": "boolean"
                },
                "failSafe": {
                    "type": "boolean"
                },
                "loadBalancingMode": {
                    "type": "string"
                },
                "failOpenSnortDown": {
                    "type": "boolean"
                },
                "inlinepairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInlinePair"
                    }
                },
                "name": {
                    "type": "string"
                },
                "propogateLinkState": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "VrfIPv6StaticRouteModel": {
            "type": "object",
            "required": [
                "gateway",
                "interfaceName",
                "metricValue",
                "selectedNetworks"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "selectedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "metricValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "isTunneled": {
                    "type": "boolean"
                },
                "interfaceName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/IHostObjectContainer"
                }
            }
        },
        "IKeyObject": {
            "type": "object",
            "properties": {
                "acceptLifeTime": {
                    "$ref": "#/definitions/ILifeTime"
                },
                "authAlgorithm": {
                    "type": "string"
                },
                "keyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "authString": {
                    "$ref": "#/definitions/IAuthTypeAndString"
                },
                "sendLifeTime": {
                    "$ref": "#/definitions/ILifeTime"
                }
            }
        },
        "RouteMapListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RouteMap"
                    }
                }
            }
        },
        "EndPointDeviceType": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "iseId": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "fqName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "EndPointDeviceTypeListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EndPointDeviceType"
                    }
                }
            }
        },
        "GlobalSearchListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobalSearch"
                    }
                }
            }
        },
        "INeighborTransportPathMTUDiscovery": {
            "type": "object",
            "properties": {
                "disable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "FTDRAVpnConnectionProfileModel": {
            "type": "object",
            "required": [
                "authenticationMethod",
                "groupPolicy"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "enableSecondaryAuthentication": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "groupPolicy": {
                    "description": "Default group policy for the connection profile.",
                    "$ref": "#/definitions/IReference"
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: RaVpnConnectionProfile."
                },
                "secondaryAuthenticationSettings": {
                    "$ref": "#/definitions/ISecondaryAuthenticationSettings"
                },
                "enablePrimaryAuthFallbackToLocal": {
                    "type": "boolean"
                },
                "secondaryAuthenticationServer": {
                    "$ref": "#/definitions/IReference"
                },
                "useLocalAsSecondaryAuthServer": {
                    "type": "boolean"
                },
                "stripRealmFromUsername": {
                    "type": "boolean",
                    "description": "If set to true, removes the realm from the username before passing the username on to the AAA server. Default is False"
                },
                "groupAlias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IConnectionProfileGroupAlias"
                    }
                },
                "primaryAuthenticationServer": {
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "ipv4AddressPool": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing this resource."
                },
                "groupUrl": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IConnectionProfileGroupUrl"
                    }
                },
                "passwordExpirationNotificationPeriod": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days to notify password expiry. Range is 0-180 days. Default is 14 days."
                },
                "allowConnectionOnlyIfAuthorized": {
                    "type": "boolean",
                    "description": "Allow VPN Session only if the user is authorized. Default is False"
                },
                "authorizationServer": {
                    "$ref": "#/definitions/IReference"
                },
                "enableMultipleCertificateAuthentication": {
                    "type": "boolean",
                    "description": "Enable multiple certificate authentication."
                },
                "notifyUserOnPasswordExpiryDay": {
                    "type": "boolean",
                    "description": "Notify ahead of the password expiry or on the day the password expires. Default is False."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "stripGroupFromUsername": {
                    "type": "boolean",
                    "description": "If set to true, removes the group name from the username before passing the username on to the AAA server. Default is False"
                },
                "dhcpServersForAddressAssignment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "enableSecondaryAuthFallbackToLocal": {
                    "type": "boolean"
                },
                "useLocalAsPrimaryAuthServer": {
                    "type": "boolean"
                },
                "enablePasswordManagement": {
                    "type": "boolean",
                    "description": "Allows the user to change the password, if the password is expired. Default is False"
                },
                "accountingServer": {
                    "$ref": "#/definitions/IReference"
                },
                "authenticationMethod": {
                    "type": "string",
                    "description": "Method of authentication.",
                    "enum": [
                        "AAA_ONLY",
                        "SAML",
                        "CLIENT_CERTIFICATE_ONLY",
                        "AAA_AND_CLIENT_CERTIFICATE"
                    ]
                },
                "certificateUsernameSettings": {
                    "$ref": "#/definitions/IConnProfileCertificateUsernameSettings"
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "ipv6AddressPool": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                }
            },
            "description": "A model representing Connection Profile definition."
        },
        "CommandsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Commands"
                    }
                }
            }
        },
        "DeploymentDetailListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeploymentDetail"
                    }
                }
            }
        },
        "Metadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "description": "The last user who modified this instance.",
                    "$ref": "#/definitions/MetadataUser"
                },
                "domain": {
                    "description": "Defines the domains this instance belongs to (if applicable).",
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "description": "Details regarding the read only status of this instance",
                    "$ref": "#/definitions/ReadOnly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The last updated timestamp."
                }
            },
            "description": "Defines read only details about the object - whether it is system defined, last user who modified the object etc."
        },
        "ISLAMonitorModel": {
            "type": "object",
            "required": [
                "interfaceObjects",
                "monitorAddress",
                "slaId"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "noOfPackets": {
                    "type": "integer",
                    "format": "int32"
                },
                "slaId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dataSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer",
                    "format": "int32"
                },
                "interfaceNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "interfaceObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceObjectModel"
                    }
                },
                "frequency": {
                    "type": "integer",
                    "format": "int32"
                },
                "monitorAddress": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tos": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "VrfIPv4StaticRouteModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VrfIPv4StaticRouteModel"
                    }
                }
            }
        },
        "RadiusServerGroupModel": {
            "type": "object",
            "required": [
                "radiusServers",
                "retryInterval"
            ],
            "properties": {
                "dynamicAuthorizationPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ASA will listen to the port for the CoA policy updates from ISE. Default is 1700, the range is 1024 to 65535."
                },
                "metadata": {
                    "description": "Object representing metadata attributes for the CertificateMap.",
                    "$ref": "#/definitions/Metadata"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: RadiusServerGroup."
                },
                "enableInterimAccountUpdate": {
                    "type": "boolean",
                    "description": "Enable the periodic generation of Radius interim-accounting-update messages"
                },
                "version": {
                    "type": "string"
                },
                "enableAuthorizeOnly": {
                    "type": "boolean",
                    "description": "ISE server is used only for authorization when certificate authentication is enabled"
                },
                "enableDynamicAuthorization": {
                    "type": "boolean",
                    "description": "Enable the Radius Dynamic Authorization (ISE Change of Authorization, CoA) services for the AAA server group"
                },
                "groupAccountingMode": {
                    "type": "string",
                    "description": "Indicates whether accounting messages are sent to a single server (single mode) or sent to all servers in the group (simultaneous mode)",
                    "enum": [
                        "SINGLE",
                        "MULTIPLE"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "User provided resource name"
                },
                "radiusServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRadiusServers"
                    }
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "realm": {
                    "$ref": "#/definitions/IReference"
                },
                "retryInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Specifies the retry interval (1-10 seconds) for the request"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing the CertificateMap object."
                },
                "interimAccountUpdateInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Interval at which the accounting records are transmitted for every VPN session to the server group. Default 24 hours, Range 1-120 hours"
                }
            },
            "description": "Radius Server Group objects contain one or more references to Radius servers. These servers are used to authenticate users logging in through Remote Access VPN connections."
        },
        "VrfBGPIPvAddressFamilyModel": {
            "type": "object",
            "required": [
                "routerId"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "routerId": {
                    "type": "string"
                },
                "asNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "addressFamilyIPv4": {
                    "$ref": "#/definitions/IBGPAddressFamilyModel"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "addressFamilyIPv6": {
                    "$ref": "#/definitions/IBGPAddressFamilyModel"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IIPv6Container": {
            "type": "object",
            "properties": {
                "linkLocalAddress": {
                    "type": "string"
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IAddressContainer"
                    }
                },
                "raInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "enableAutoConfig": {
                    "type": "boolean"
                },
                "nsInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPrefixContainer"
                    }
                },
                "enforceEUI64": {
                    "type": "boolean"
                },
                "enableRA": {
                    "type": "boolean"
                },
                "dadAttempts": {
                    "type": "integer",
                    "format": "int32"
                },
                "enableDHCPAddrConfig": {
                    "type": "boolean"
                },
                "enableDHCPNonAddrConfig": {
                    "type": "boolean"
                },
                "raLifeTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "enableIPV6": {
                    "type": "boolean"
                },
                "reachableTime": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FTDVlanInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDVlanInterface"
                    }
                }
            }
        },
        "AccessRuleMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "ruleIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "section": {
                    "type": "string"
                },
                "accessPolicy": {
                    "$ref": "#/definitions/IReference"
                },
                "category": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IRecurrence": {
            "type": "object",
            "required": [
                "dailyEndTime",
                "dailyStartTime",
                "days",
                "rangeEndDay",
                "rangeEndTime",
                "rangeStartDay",
                "rangeStartTime",
                "recurrenceType"
            ],
            "properties": {
                "rangeStartTime": {
                    "type": "string",
                    "description": "Represents the time (in ISO 8601 format) at which the time range starts being effective. This field must be used if recurrenceType is specified as RANGE."
                },
                "rangeEndDay": {
                    "type": "string",
                    "description": "Represents the time (in ISO 8601 format) at which the time range stops being effective. This field must be used if recurrenceType is specified as RANGE.",
                    "enum": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ]
                },
                "rangeEndTime": {
                    "type": "string",
                    "description": "Represents the day of week at which the time range stops being effective. This field must be used if recurrenceType is specified as RANGE."
                },
                "rangeStartDay": {
                    "type": "string",
                    "description": "Represents the day of week at which the time range starts being effective. This field must be used if recurrenceType is specified as RANGE.",
                    "enum": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ]
                },
                "dailyStartTime": {
                    "type": "string",
                    "description": "Represents the time (in ISO 8601 format) at which the time range starts being effective on selected days. This field must be used if recurrenceType is specified as DAILY_INTERVAL."
                },
                "days": {
                    "type": "array",
                    "description": "Represents the days of week on which the time range is effective. This field must be used if recurrenceType is specified as DAILY_INTERVAL.",
                    "items": {
                        "type": "string",
                        "enum": [
                            "MON",
                            "TUE",
                            "WED",
                            "THU",
                            "FRI",
                            "SAT",
                            "SUN"
                        ]
                    }
                },
                "dailyEndTime": {
                    "type": "string",
                    "description": "Represents the time (in ISO 8601 format) at which the time range stops being effective on selected days. This field must be used if recurrenceType is specified as DAILY_INTERVAL."
                },
                "recurrenceType": {
                    "type": "string",
                    "description": "Type of the recurrence interval. This value can be either DAILY_INTERVAL or RANGE.",
                    "enum": [
                        "DAILY_INTERVAL",
                        "RANGE"
                    ]
                }
            },
            "description": "Object fragment that represents a recurrence interval. A recurrence interval specifies a duration that repeats on a weekly basis, during which the time range is effective. If recurrence interval is of type RANGE, the fragment represents a continuous duration of time that repeats every week. If recurrence interval is of type DAILY_INTERVAL, the fragment represents a period of time that repeats on selected days of week."
        },
        "IBGPGSTimers": {
            "type": "object",
            "properties": {
                "keepAlive": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "minHoldTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "holdTime": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DNSPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSPolicy"
                    }
                }
            }
        },
        "IGroupPolicySessionSettingsModel": {
            "type": "object",
            "properties": {
                "simultaneousLoginPerUser": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies the number of simultaneous logins allowed for any user. The default value is 3. The range is 0-2147483647"
                },
                "maxConnectionTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies a maximum amount of time for VPN connections. Range is 1-35791394 minutes. The default value for this attribute is null and its behaviour is unlimited time allowed per connection."
                },
                "vpnIdleTimeoutAlertInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies the time at which an idle timeout alert message is displayed to the user. This alert message tells users how many minutes they have left until their VPN session will be disconnected due to inactivity. The default alert interval is one minute. The range is from 1 - 30 minutes."
                },
                "accessHours": {
                    "description": "Optional. Specifies the range of time this group policy is available to be applied to a remote access user",
                    "$ref": "#/definitions/IReference"
                },
                "vpnIdleTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies a VPN idle timeout period. If there is no communication activity on the connection in this period, the ASA terminates the connection. The minimum time is 1 minute, the maximum time is 35791394 minutes, and the default is 30 minutes."
                },
                "maxConnectionTimeAlertInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies the time at which a session timeout alert message is displayed to the user. The default alert interval is one minute. The range is from 1 - 30 minutes."
                }
            },
            "description": "Model representing the Configurations for AnyConnect Client Sessions."
        },
        "IApplicationsContainer": {
            "type": "object",
            "properties": {
                "inlineApplicationFilters": {
                    "type": "array",
                    "description": "List of objects representing application filters.",
                    "items": {
                        "$ref": "#/definitions/IAppCondition"
                    }
                },
                "applicationFilters": {
                    "type": "array",
                    "description": "List of objects representing pre-defined application filters.",
                    "items": {
                        "$ref": "#/definitions/IApplicationFilter"
                    }
                },
                "applications": {
                    "type": "array",
                    "description": "List of objects representing applications.",
                    "items": {
                        "$ref": "#/definitions/IApplicationModel"
                    }
                }
            },
            "description": "Represents an ApplicationsContainer containing application filters and applications."
        },
        "IOspfAdministrativeDistance": {
            "type": "object",
            "properties": {
                "external": {
                    "type": "integer",
                    "format": "int32"
                },
                "interArea": {
                    "type": "integer",
                    "format": "int32"
                },
                "intraArea": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "NetworkGroup": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "objects": {
                    "type": "array",
                    "description": "The list of member network objects",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "literals": {
                    "type": "array",
                    "description": "List of network values in group.",
                    "items": {
                        "$ref": "#/definitions/INetworkAddressLiteral"
                    }
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: NetworkGroup."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing Network group definition."
        },
        "RouteMap": {
            "type": "object",
            "required": [
                "entries",
                "name"
            ],
            "properties": {
                "metadata": {
                    "description": "Metadata associated with this object.",
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "description": "The list of Route Map entries associated with this object.",
                    "items": {
                        "$ref": "#/definitions/IRouteMapEntry"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Route Map"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "If set to true, this object can be overriden."
                },
                "description": {
                    "type": "string",
                    "description": "The route map object."
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "type": {
                    "type": "string",
                    "description": "RouteMap - type of this object"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "The route map object."
        },
        "HitCountMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "task": {
                    "description": "Object representing the task status of the hit count operation.",
                    "$ref": "#/definitions/ITaskStatus"
                },
                "ruleIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Index number of the rule in the access control or prefilter policy list, against which the hit count information is retrieved."
                },
                "domain": {
                    "description": "Object representing the domain under which the operation has been performed.",
                    "$ref": "#/definitions/Domain"
                },
                "deviceRuleId": {
                    "type": "string",
                    "description": "ID of the rule on the target device console."
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                },
                "policy": {
                    "description": "Object representing the access control or prefilter policy containing the rule.",
                    "$ref": "#/definitions/IPolicyModel"
                }
            }
        },
        "SIURLFeed": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/SIFeedMetadata"
                },
                "feedURL": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "checksumURL": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "updateFrequency": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "PreferLifeTime": {
            "type": "object",
            "properties": {
                "duration": {
                    "$ref": "#/definitions/Duration"
                },
                "expirationLifeTime": {
                    "$ref": "#/definitions/ExpirationLifeTime"
                }
            }
        },
        "LLParams": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "RESTTidSourceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTTidSource"
                    }
                }
            }
        },
        "IFTDHAIPv6ActiveStandbyPair": {
            "type": "object",
            "properties": {
                "activeIPv6": {
                    "type": "string"
                },
                "standbyIPv6": {
                    "type": "string"
                }
            }
        },
        "ISwitchPortConfig": {
            "type": "object",
            "properties": {
                "portMode": {
                    "type": "string",
                    "enum": [
                        "ACCESS",
                        "TRUNK"
                    ]
                },
                "protectedEnabled": {
                    "type": "boolean"
                },
                "trunkModeAllowedVlanIds": {
                    "type": "string"
                },
                "accessModeVlanId": {
                    "type": "integer",
                    "format": "int32"
                },
                "trunkModeNativeVlanId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IHostObjectContainer": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/IHost"
                },
                "literal": {
                    "$ref": "#/definitions/INetworkAddressLiteral"
                }
            }
        },
        "IOspfv3NsfGracefulRestart": {
            "type": "object",
            "properties": {
                "gracefulRestart": {
                    "$ref": "#/definitions/IOspfv3GracefulRestart"
                },
                "gracefulRestartHelper": {
                    "$ref": "#/definitions/IOspfv3GracefulRestartHelper"
                }
            }
        },
        "SINetworkList": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/SIListMetadata"
                },
                "fileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "StandardACL": {
            "type": "object",
            "required": [
                "entries",
                "name"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "description": "Standard Access List Entries",
                    "items": {
                        "$ref": "#/definitions/IStandardACLEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "Standard Access List"
        },
        "IOspfAreaAuth": {
            "type": "object",
            "properties": {
                "passwdAuth": {
                    "$ref": "#/definitions/IOspfPasswdAuth"
                },
                "md5AuthList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfMD5Auth"
                    }
                },
                "authType": {
                    "type": "string"
                }
            }
        },
        "SIDNSList": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/SIListMetadata"
                },
                "fileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Security Intelligence DNS List object."
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing Security Intelligence DNS list."
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be SIDNSList."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Object representing a static list of DNS servers uploaded by the user"
        },
        "IAccessPolicyModel": {
            "type": "object",
            "required": [
                "defaultAction"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "defaultAction": {
                    "$ref": "#/definitions/IAccessPolicyDefaultAction"
                },
                "name": {
                    "type": "string"
                },
                "identityPolicySetting": {
                    "$ref": "#/definitions/IACPolicyIdentityPolicySettings"
                },
                "description": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "securityIntelligence": {
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "prefilterPolicySetting": {
                    "$ref": "#/definitions/IAccessPolicyPrefilterPolicySettingModel"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "GlobalPolicySearch": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/IMetadata"
                },
                "searchCriteria": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type of resource."
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISearchResult"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "A model representing global policy search response."
        },
        "IProtocolPortObject": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "port": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "StaticRouteModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StaticRouteModel"
                    }
                }
            }
        },
        "IdentityPolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the Object."
                }
            },
            "description": "Contains information about the Identity Policy used by the Firepower Threat Defense device."
        },
        "IVpnIkev2Settings": {
            "type": "object",
            "properties": {
                "automaticPreSharedKeyLength": {
                    "type": "integer",
                    "format": "int32"
                },
                "certificateAuth": {
                    "description": "Signing authority used for the VPN certificate.",
                    "$ref": "#/definitions/IReference"
                },
                "enforceHexBasedPreSharedKeyOnly": {
                    "type": "boolean"
                },
                "authenticationType": {
                    "type": "string",
                    "description": "Type of authentication used for the VPN.",
                    "enum": [
                        "MANUAL_PRE_SHARED_KEY",
                        "AUTOMATIC_PRE_SHARED_KEY",
                        "CERTIFICATE"
                    ]
                },
                "manualPreSharedKey": {
                    "type": "string",
                    "description": "Contains the manual pre-shared key for the VPN, if any."
                },
                "policy": {
                    "description": "VPN policy.",
                    "$ref": "#/definitions/IReference"
                }
            },
            "description": "Contains information about Internet Key Exchange version 2 settings for VPNs."
        },
        "IOspfProcessModel": {
            "type": "object",
            "properties": {
                "ignoreLsaMospf": {
                    "type": "boolean"
                },
                "timers": {
                    "$ref": "#/definitions/IOspfTimers"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "nsfGracefulRestart": {
                    "$ref": "#/definitions/IOspfNsfGracefulRestart"
                },
                "defaultInformationOriginate": {
                    "$ref": "#/definitions/IOspfDefaultInfoOriginate"
                },
                "routerId": {
                    "type": "string"
                },
                "rfc1583Compatible": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "administrativeDistance": {
                    "$ref": "#/definitions/IOspfAdministrativeDistance"
                }
            }
        },
        "FTDManualNatRuleListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDManualNatRule"
                    }
                }
            }
        },
        "Snort3IPSRulesObject": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "description": "User provided rule description."
                },
                "metadata": {
                    "description": "Object representing metadata attributes for the intrusion rule.",
                    "$ref": "#/definitions/Metadata"
                },
                "ruleGroups": {
                    "type": "array",
                    "description": "Object containing a list of rules groups associated with the rule.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "gid": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Generator Identifier used to identify the part of Snort which generates an event."
                },
                "overrideState": {
                    "type": "string",
                    "description": "User override state of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
                    "enum": [
                        "DROP",
                        "BLOCK",
                        "ALERT",
                        "DISABLE",
                        "DEFAULT"
                    ]
                },
                "defaultState": {
                    "type": "string",
                    "description": "Default State of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
                    "enum": [
                        "DROP",
                        "BLOCK",
                        "ALERT",
                        "DISABLE",
                        "DEFAULT"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "threshold": {
                    "description": "Object containing threshold configuration for the rule.",
                    "$ref": "#/definitions/IIntrusionRuleThreshold"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always IntrusionRule."
                },
                "version": {
                    "type": "string"
                },
                "sid": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Snort Identifier used to uniquely identify Snort rules."
                },
                "revision": {
                    "type": "integer",
                    "format": "int32"
                },
                "ruleAction": {
                    "type": "array",
                    "description": "Object containing list of rule actions specified for all intrusion policies.",
                    "items": {
                        "$ref": "#/definitions/IRuleAction"
                    }
                },
                "isSystemDefined": {
                    "type": "boolean",
                    "description": "Read-only field indicating if the rule is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the intrusion rule."
                },
                "suppression": {
                    "description": "Object containing configuration which allows users to suppress events for a rule for specific trusted IP addresses.",
                    "$ref": "#/definitions/IIntrusionRuleSuppression"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the intrusion rule."
                },
                "ruleData": {
                    "type": "string",
                    "description": "Details of the rule based on which rule created or updated."
                }
            },
            "description": "Object representing a Snort 3 intrusion rule."
        },
        "IRealm": {
            "type": "object",
            "properties": {
                "adPrimaryDomain": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "directoryConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IDirectoryConfiguration"
                    }
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "adJoinPassword": {
                    "type": "string"
                },
                "authSessionTimeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "groupDn": {
                    "type": "string"
                },
                "realmType": {
                    "type": "string",
                    "enum": [
                        "AD",
                        "LDAP",
                        "LOCAL",
                        "DISCOVERED",
                        "SPECIAL"
                    ]
                },
                "includedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dirPassword": {
                    "type": "string"
                },
                "updateHour": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "groupAttribute": {
                    "type": "string"
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "realmId": {
                    "type": "integer",
                    "format": "int32"
                },
                "failedAuthSessionTimeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "adJoinUsername": {
                    "type": "string"
                },
                "guestSessionTimeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "string"
                },
                "excludedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dirUsername": {
                    "type": "string"
                },
                "updateInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "includedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "activeAuthSessionTimeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "baseDn": {
                    "type": "string"
                },
                "tsAgentSessionTimeout": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RangeOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing range object override definition."
        },
        "ISelectedPoliciesforDevices": {
            "type": "object",
            "properties": {
                "selectedPolicies": {
                    "type": "array",
                    "description": "List of Policy Types which have to be selectively deployed. Note: mandatoryDeployablePolicies should not be included in this list.",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceUUID": {
                    "type": "string",
                    "description": "Corresponding device UUID for which the selection is mentioned."
                }
            },
            "description": "Represents the object which is responsible for enabling the Selective Policy Deployment"
        },
        "AccessRuleListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessRule"
                    }
                }
            }
        },
        "IOspfAreaRanges": {
            "type": "object",
            "properties": {
                "addressNetwork": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "advertise": {
                    "type": "boolean"
                }
            }
        },
        "IOspfv3GracefulRestart": {
            "type": "object",
            "properties": {
                "gracefulRestartInterval": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IAsPathListEntry": {
            "type": "object",
            "required": [
                "sequence"
            ],
            "properties": {
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "regularExpression": {
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                }
            }
        },
        "IFTDInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ITimeZoneDayRecurrenceFragment": {
            "type": "object",
            "properties": {
                "startWeek": {
                    "type": "string",
                    "description": "An ordinal number, from 1-52, representing the week on which daylight saving will start.",
                    "enum": [
                        "FIRST",
                        "SECOND",
                        "THIRD",
                        "FOURTH",
                        "LAST"
                    ]
                },
                "startDayOfWeek": {
                    "type": "string",
                    "description": "Day of the week on which the daylight saving will start.",
                    "enum": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ]
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number (in minutes) representing the offset from specified time zone. Offset value must be between 1-1440."
                },
                "startMonth": {
                    "type": "string",
                    "description": "Month of the year on which the daylight saving will start.",
                    "enum": [
                        "JAN",
                        "FEB",
                        "MAR",
                        "APR",
                        "MAY",
                        "JUN",
                        "JUL",
                        "AUG",
                        "SEP",
                        "OCT",
                        "NOV",
                        "DEC"
                    ]
                },
                "startTime": {
                    "type": "string",
                    "description": "Time of the day (in 24-hour HH:mm format) at which the daylight saving will start."
                },
                "endTime": {
                    "type": "string",
                    "description": "Time of the day (in 24-hour HH:mm format) at which the daylight saving will end."
                },
                "endWeek": {
                    "type": "string",
                    "description": "An ordinal number, from 1-52, representing the week on which the daylight saving will end.",
                    "enum": [
                        "FIRST",
                        "SECOND",
                        "THIRD",
                        "FOURTH",
                        "LAST"
                    ]
                },
                "endMonth": {
                    "type": "string",
                    "description": "Month of the year on which the daylight saving will end.",
                    "enum": [
                        "JAN",
                        "FEB",
                        "MAR",
                        "APR",
                        "MAY",
                        "JUN",
                        "JUL",
                        "AUG",
                        "SEP",
                        "OCT",
                        "NOV",
                        "DEC"
                    ]
                },
                "endDayOfWeek": {
                    "type": "string",
                    "description": "Day of the week on which the daylight saving will end.",
                    "enum": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ]
                }
            },
            "description": "Object fragment to configure the daylight saving by day recurrence."
        },
        "IOspfv3ProcessModel": {
            "type": "object",
            "properties": {
                "ignoreLsaMospf": {
                    "type": "boolean"
                },
                "timers": {
                    "$ref": "#/definitions/IOspfv3Timers"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "logAdjacencyChanges": {
                    "$ref": "#/definitions/IOspfv3LogAdjacencyChanges"
                },
                "description": {
                    "type": "string"
                },
                "passiveInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "nsfGracefulRestart": {
                    "$ref": "#/definitions/IOspfv3NsfGracefulRestart"
                },
                "defaultInformationOriginate": {
                    "$ref": "#/definitions/IOspfv3DefaultInfoOriginate"
                },
                "routerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "administrativeDistance": {
                    "$ref": "#/definitions/IOspfAdministrativeDistance"
                }
            }
        },
        "TimeZoneObjectOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeZoneObjectOverride"
                    }
                }
            }
        },
        "INeighborRouteMap": {
            "type": "object",
            "properties": {
                "routeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "filterUpdateAction": {
                    "type": "string",
                    "enum": [
                        "IN",
                        "OUT"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "SLAMonitorObjectModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SLAMonitorObjectModel"
                    }
                }
            }
        },
        "CancelUpgrade": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Cancel a failed upgrade."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique Task ID of this request."
                },
                "forceCancel": {
                    "type": "boolean",
                    "description": "Set to True if cancelling an ongoing upgrade by force, False otherwise."
                },
                "type": {
                    "type": "string",
                    "description": "CancelUpgrade"
                },
                "upgradeId": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "description": "A list of FTD devices",
                    "items": {
                        "$ref": "#/definitions/ITarget"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "This operation is to cancel a failed upgrade."
        },
        "DeploymentRequestMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "task": {
                    "$ref": "#/definitions/TaskStatus"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IIpvPrefixListFilter": {
            "type": "object",
            "properties": {
                "ipv6PrefixList": {
                    "$ref": "#/definitions/IReference"
                },
                "filterUpdateAction": {
                    "type": "string",
                    "enum": [
                        "IN",
                        "OUT"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "ipv4PrefixList": {
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "AuditModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuditModel"
                    }
                }
            }
        },
        "AuditModel": {
            "type": "object",
            "properties": {
                "auditId": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "snapshotId": {
                    "type": "string"
                },
                "subSystem": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "time": {
                    "type": "integer",
                    "format": "int32"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "FTDPhysicalInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "hardware": {
                    "$ref": "#/definitions/IHardwareContainer"
                },
                "lacpMode": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "PASSIVE",
                        "ON"
                    ]
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "channelGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "switchPortConfig": {
                    "$ref": "#/definitions/ISwitchPortConfig"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "isRedundantMember": {
                    "type": "boolean"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "powerOverEthernet": {
                    "$ref": "#/definitions/IPoeConfig"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "erspanFlowId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "erspanSourceIP": {
                    "type": "string"
                }
            }
        },
        "BlockDNSRuleListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlockDNSRule"
                    }
                }
            }
        },
        "ReadOnly": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "description": "Reason the resource is read only - SYSTEM (if it is system defined), RBAC (if user RBAC permissions make it read only) or DOMAIN (if resource is read only in current domain).",
                    "enum": [
                        "RBAC",
                        "SYSTEM",
                        "DOMAIN"
                    ]
                },
                "state": {
                    "type": "boolean",
                    "description": "True if this resource us read only and false otherwise."
                }
            },
            "description": "Defines the read only conditions if the referenced resource is read only."
        },
        "IPrefilterPolicyDefaultAction": {
            "type": "object",
            "properties": {
                "logEnd": {
                    "type": "boolean"
                },
                "logBegin": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "snmpConfig": {
                    "$ref": "#/definitions/IReference"
                },
                "sendEventsToFMC": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "syslogConfig": {
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "BLOCK_TUNNELS",
                        "ANALYZE_TUNNELS"
                    ]
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "AccessPolicyCategoryListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessPolicyCategory"
                    }
                }
            }
        },
        "NetworkGroupOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkGroupOverride"
                    }
                }
            }
        },
        "INeighborLocalAs": {
            "type": "object",
            "properties": {
                "noPrepend": {
                    "type": "boolean"
                },
                "asNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "replaceAs": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "dualAs": {
                    "type": "boolean"
                }
            }
        },
        "FPPhysicalInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FPPhysicalInterface"
                    }
                }
            }
        },
        "DeviceInventoryData": {
            "type": "object",
            "properties": {
                "cpuType": {
                    "type": "string"
                },
                "cpuCores": {
                    "type": "string"
                },
                "memoryInMB": {
                    "type": "string"
                },
                "storageInGB": {
                    "type": "string"
                }
            }
        },
        "IFTDDeviceHABootStrap": {
            "type": "object",
            "required": [
                "lanFailover",
                "statefulFailover",
                "useSameLinkForFailovers"
            ],
            "properties": {
                "sharedKey": {
                    "type": "string"
                },
                "lanFailover": {
                    "$ref": "#/definitions/IFTDDeviceHAFailoverLink"
                },
                "encKeyGenerationScheme": {
                    "type": "string",
                    "enum": [
                        "AUTO",
                        "CUSTOM"
                    ]
                },
                "useSameLinkForFailovers": {
                    "type": "boolean"
                },
                "statefulFailover": {
                    "$ref": "#/definitions/IFTDDeviceHAFailoverLink"
                },
                "isEncryptionEnabled": {
                    "type": "boolean"
                }
            }
        },
        "DeviceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Device"
                    }
                }
            }
        },
        "DynamicObjectBulk": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ISecondaryAuthenticationSettings": {
            "type": "object",
            "properties": {
                "useSecondaryUsernameforSession": {
                    "type": "boolean",
                    "description": "Secondary username is used for reporting user activity."
                },
                "promptUsername": {
                    "type": "boolean",
                    "description": "Allow user to enter Username and Password."
                },
                "certificateUsernameSettings": {
                    "$ref": "#/definitions/IConnProfileCertificateUsernameSettings"
                },
                "usePrimaryUsername": {
                    "type": "boolean",
                    "description": "Use the same username that is used with Primary Authentication Server."
                },
                "mapUsernameFromCertificate": {
                    "type": "boolean",
                    "description": "Use the username from Certificate."
                }
            },
            "description": "Secondary authentication settings if double authentication enabled."
        },
        "VpnEndpointListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VpnEndpoint"
                    }
                }
            }
        },
        "ICMPV6Object": {
            "type": "object",
            "properties": {
                "icmpType": {
                    "type": "string",
                    "description": "ICMP type number."
                },
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/PortMetadata"
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ICMP code number."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: ICMPV6Object."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "An object defining a ICMPv6 Port object definition."
        },
        "PendingChangesListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PendingChanges"
                    }
                }
            }
        },
        "IPoeConfig": {
            "type": "object",
            "properties": {
                "consumptionWattage": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "type": "boolean"
                }
            }
        },
        "LLObservationData": {
            "type": "object",
            "properties": {
                "actionTaken": {
                    "type": "string"
                },
                "miscData": {
                    "$ref": "#/definitions/LLMiscData"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "CountryObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the country.",
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Country."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "This field is deprecated and should not be used."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Identifier matching country from geolocation database."
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "iso2": {
                    "type": "string",
                    "description": "ISO2 country code string."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always Country."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "iso3": {
                    "type": "string",
                    "description": "ISO3 country code string."
                }
            },
            "description": "Represents a Country."
        },
        "AnyConnectProfileModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyConnectProfileModel"
                    }
                }
            }
        },
        "ApplicationType": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "TimeRange": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of the response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "effectiveEndDateTime": {
                    "type": "string",
                    "description": "Represents the absolute date and time (in ISO 8601 format) at which the time range object stops being effective. If not specified, value is considered, 'never ends'."
                },
                "effectiveStartDateTime": {
                    "type": "string",
                    "description": "Represents the absolute date and time (in ISO 8601 format) at which the time range object starts being effective. If not specified, value is considered, 'starts now'."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always TimeRange."
                },
                "recurrenceList": {
                    "type": "array",
                    "description": "Represents the list of recurring intervals during which the time range is effective. These intervals are valid only between effectiveStartDateTime and effectiveEndDateTime.",
                    "items": {
                        "$ref": "#/definitions/IRecurrence"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Object representing a time range object."
        },
        "SIListMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "entryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "listUpdateTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "LLSettings": {
            "type": "object",
            "additionalProperties": {
                "type": "object"
            }
        },
        "DeploymentRequest": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/DeploymentRequestMetadata"
                },
                "forceDeploy": {
                    "type": "boolean",
                    "description": "Boolean indicating the deployment is force deploy or not. Value set to `true` only if device is not out-of-date and user wants to force a deployment. This should not be used unless needed. Default is `false`."
                },
                "selectedPoliciesforDevices": {
                    "type": "array",
                    "description": "List of devices for Selective Policy Deployment. </br> The devices mentioned here should be part of the 'devicelist' attribute.",
                    "items": {
                        "$ref": "#/definitions/ISelectedPoliciesforDevices"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "String represents the name to the device."
                },
                "deviceList": {
                    "type": "array",
                    "description": "List of device UUIDs for which the deployment has to triggered.",
                    "items": {
                        "type": "string"
                    }
                },
                "ignoreWarning": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the warnings needs to be ignored during the prevalidation of deployment job. Default is `false`."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description of the object."
                },
                "links": {
                    "description": "Link to the deployment request with the job id.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Id created as part of the deployment."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Request object. This value is always DeploymentRequest."
                },
                "version": {
                    "type": "string",
                    "description": "Integer indicating the version to which the deployment should be done."
                },
                "deploymentNote": {
                    "type": "string",
                    "description": "User provided job note with max of 512 characters"
                }
            },
            "description": "Represents the deployment request object which will be used for policy deployment of a device."
        },
        "ApplicableDevice": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "isPartOfContainer": {
                    "type": "string"
                },
                "modelId": {
                    "type": "string"
                },
                "advanced": {
                    "$ref": "#/definitions/IAdvanced"
                },
                "containerType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "modelType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "upgradePackage": {
                    "$ref": "#/definitions/UpgradePackage"
                },
                "sw_version": {
                    "type": "string"
                },
                "healthStatus": {
                    "type": "string"
                },
                "healthPolicy": {
                    "$ref": "#/definitions/IHealthPolicy"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "model": {
                    "type": "string"
                },
                "modelNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "accessPolicy": {
                    "$ref": "#/definitions/IPolicyModel"
                }
            }
        },
        "InterfaceGroupObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "interfaceMode": {
                    "type": "string",
                    "enum": [
                        "PASSIVE",
                        "INLINE",
                        "SWITCHED",
                        "ROUTED"
                    ]
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IInterfaceDeviceModel"
                    }
                },
                "description": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "interfaceGroup": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "FTDRAVpnCertificateMapSettings": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of Certificate Map Settings.",
                    "$ref": "#/definitions/Metadata"
                },
                "enableCertificateToConnectionProfileMapping": {
                    "type": "boolean",
                    "description": "Specifies if connection profile should be selected based on matching certificate map rules. Default value is False."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing response object."
                },
                "useGroupURL": {
                    "type": "boolean",
                    "description": "If certificate map matches different connection profile than the one specified in group url, Default value is False"
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: RaVPNCertificateMapSetting."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "certificateToConnectionProfileMap": {
                    "type": "array",
                    "description": "List of Rules mapping the certificate map to connection profile. If enableCertificateToConnectionProfileMapping is True then atleast one rule is mandatory.",
                    "items": {
                        "$ref": "#/definitions/IFTDRAVpnCertToConnectionProfileMap"
                    }
                }
            },
            "description": "A model representing Certificate Map Settings definition."
        },
        "Domain": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the domain."
                },
                "links": {
                    "description": "Links to the domain resource URLs.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique UUID of this domain"
                },
                "type": {
                    "type": "string",
                    "description": "Domain type definition (fixed)."
                },
                "uuid": {
                    "type": "string"
                }
            },
            "description": "The details about the domain."
        },
        "RealmUserGroupListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RealmUserGroup"
                    }
                }
            }
        },
        "IARPConfigContainer": {
            "type": "object",
            "properties": {
                "macAddress": {
                    "type": "string"
                },
                "enableAlias": {
                    "type": "boolean"
                },
                "ipAddress": {
                    "type": "string"
                }
            }
        },
        "INetworkAddressLiteral": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "VpnPKIEnrollmentModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VpnPKIEnrollmentModel"
                    }
                }
            }
        },
        "INetworkObjectsOnly": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "AccessPolicyLoggingSettingModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessPolicyLoggingSettingModel"
                    }
                }
            }
        },
        "IValueUpdate": {
            "type": "object",
            "properties": {
                "newValue": {
                    "type": "string"
                },
                "fieldName": {
                    "type": "string"
                },
                "oldValue": {
                    "type": "string"
                }
            }
        },
        "HitCount": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the hit count entry.",
                    "$ref": "#/definitions/HitCountMetadata"
                },
                "lastFetchTimeStamp": {
                    "type": "string",
                    "description": "Indicates the last time (in ISO 8601 format) the hit count was retrieved for the mentioned rule."
                },
                "hitCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the number of times the access control rule was hit on the target device. It is based on the data from the last FMC hit count refresh operation."
                },
                "firstHitTimeStamp": {
                    "type": "string",
                    "description": "Indicates the time (in ISO 8601 format) when the hit count was first hit for the mentioned rule."
                },
                "rule": {
                    "description": "Object representing the access control rule against which the hit count information is retrieved.",
                    "$ref": "#/definitions/IPolicyModel"
                },
                "lastHitTimeStamp": {
                    "type": "string",
                    "description": "Indicates the time (in ISO 8601 format) when the hit count was last hit for the mentioned rule."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be HitCount."
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "KeyChainObjectOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyChainObjectOverride"
                    }
                }
            }
        },
        "IOspfv3RouteSummary": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv6Prefix": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "advertise": {
                    "type": "boolean"
                }
            }
        },
        "Snort3IntrusionRuleGroupsObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of Snort 3 intrusion rulegroup.",
                    "$ref": "#/definitions/IMetadata"
                },
                "overrideSecurityLevel": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "LEVEL_1",
                        "LEVEL_2",
                        "LEVEL_3",
                        "LEVEL_4"
                    ]
                },
                "isSystemDefined": {
                    "type": "boolean",
                    "description": "Read-only field indicating if the rulegroup is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Snort 3 intrusion rulegroup."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Snort 3 intrusion rulegroup."
                },
                "childGroups": {
                    "type": "array",
                    "description": "List of IntrusionRuleGroups associated with the parent rulegroup.",
                    "items": {
                        "$ref": "#/definitions/ISnort3IntrusionRuleGroupsModel"
                    }
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the Snort 3 intrusion rulegroup."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always IntrusionRuleGroup."
                },
                "version": {
                    "type": "string"
                },
                "defaultSecurityLevel": {
                    "type": "string",
                    "enum": [
                        "DISABLED",
                        "LEVEL_1",
                        "LEVEL_2",
                        "LEVEL_3",
                        "LEVEL_4"
                    ]
                }
            },
            "description": "Object representing details for Snort 3 intrusion rulegroup."
        },
        "ITimeZoneDateRangeFragment": {
            "type": "object",
            "properties": {
                "startDateTime": {
                    "type": "string",
                    "description": "Represents the date and time (in ISO 8601 format) at which the daylight saving will start."
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number (in minutes) representing the offset from specified time zone. Offset value must be between 1-1440."
                },
                "endDateTime": {
                    "type": "string",
                    "description": "Represents the date and time (in ISO 8601 format) at which the daylight saving with end."
                }
            },
            "description": "Object fragment to configure the daylight saving by date range."
        },
        "UrlOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing URL object override definition."
        },
        "AccessPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessPolicy"
                    }
                }
            }
        },
        "ITaskStatus": {
            "type": "object",
            "properties": {
                "taskType": {
                    "type": "string",
                    "enum": [
                        "DEVICE_REGISTRATION",
                        "DEVICE_DEPLOYMENT",
                        "DEVICE_ROLLBACK",
                        "NGFWHA_OPERATIONS",
                        "COPY_CONFIG_REQUEST",
                        "HIT_COUNT_REFRESH",
                        "FTD_CLUSTER_BOOTSTRAP",
                        "FTD_CLUSTER_BREAK"
                    ]
                },
                "subTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISubTask"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "HealthMetric": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "metric": {
                    "type": "string",
                    "description": "Name of the metric."
                },
                "regexFilter": {
                    "type": "string",
                    "description": "Regular expression as filter to be applied on the metric. Supports RE2 Syntax documented here : https://github.com/google/re2/wiki/Syntax. Example regexFilter for fetching metrics for cpu for only CPU01 would be cpu=~\"CPU01\" "
                },
                "response": {
                    "type": "string",
                    "description": "Response containing the values for the metric specified meeting the criteria for the regular expression between the start time and end time at every step interval specified."
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the health metric; this value is always Metric."
                },
                "version": {
                    "type": "string"
                },
                "deviceUUID": {
                    "type": "string",
                    "description": "UUID of the device associated with this metric."
                }
            }
        },
        "IGroupDependencyDetailEntry": {
            "type": "object",
            "properties": {
                "selectivelyDeployablePolicies": {
                    "type": "array",
                    "description": "List of out-of-date policies which can be selectively deployed.",
                    "items": {
                        "type": "string"
                    }
                },
                "mandatoryDeployablePolicies": {
                    "type": "array",
                    "description": "List of out-of-date policies which must get deployed always in the upcoming deployment. These policies will get added into the deployment by default.",
                    "items": {
                        "type": "string"
                    }
                },
                "dependentPolicyList": {
                    "type": "array",
                    "description": "Describes the dependency between the out-of-date policies with the reason",
                    "items": {
                        "$ref": "#/definitions/IDependentPolicy"
                    }
                }
            },
            "description": "Represents the dependency information between out-of-date policies"
        },
        "GlobalPolicySearchListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobalPolicySearch"
                    }
                }
            }
        },
        "GlobalSearch": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/IMetadata"
                },
                "searchCriteria": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type of resource."
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISearchResult"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "A model representing global object search response."
        },
        "Ikev1PolicyObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ikev1PolicyObject"
                    }
                }
            }
        },
        "IGroupPolicySSLSettingsModel": {
            "type": "object",
            "properties": {
                "dtlsCompression": {
                    "type": "string",
                    "description": "Specifies DTLS Compression method (DISABLED,LZS). Default is DISABLED",
                    "enum": [
                        "DISABLED",
                        "LZS"
                    ]
                },
                "sslCompression": {
                    "type": "string",
                    "description": "Specifies SSL Compression method (DEFLATE,DISABLED,LZS). Default is DISABLED",
                    "enum": [
                        "DISABLED",
                        "DEFLATE",
                        "LZS"
                    ]
                },
                "ignoreDFBit": {
                    "type": "boolean",
                    "description": "Optional. Specifies to ignore the Don't Fragment (DF) bit in packets that need fragmentation.Allows the forced fragmentation of packets that have the DF bit set, allowing them to pass through the tunnel. Default is False"
                },
                "mtuSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Specifies the maximum transmission unit (MTU) size for SSL VPN connections established by the Cisco AnyConnect VPN Client.Default is 1406 Bytes, valid range is 576 to 1462 Bytes."
                }
            },
            "description": "Model representing the Configuration of SSL parameters to be used when connecting to the Client."
        },
        "DeviceGroupListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeviceGroup"
                    }
                }
            }
        },
        "VRFInterfaceEntry": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "logicalName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "literal": {
                    "type": "boolean"
                }
            }
        },
        "RESTTidSource": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "caCert": {
                    "type": "string"
                },
                "feedContent": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "invalidObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "feedStatus": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "downloadOn": {
                    "type": "boolean"
                },
                "nextRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "property": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "checksum": {
                    "type": "string"
                },
                "llfeedConfig": {
                    "$ref": "#/definitions/LLFeedConfig"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "clientPrivateKey": {
                    "type": "string"
                },
                "subscribedCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "clientCert": {
                    "type": "string"
                },
                "delivery": {
                    "type": "string"
                },
                "finishTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "availableCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "lastRun": {
                    "type": "integer",
                    "format": "int32"
                },
                "runNow": {
                    "type": "boolean"
                },
                "totalDiscardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "refresh": {
                    "type": "integer",
                    "format": "int32"
                },
                "params": {
                    "$ref": "#/definitions/LLParams"
                },
                "uri": {
                    "type": "string"
                },
                "feedConfig": {
                    "$ref": "#/definitions/LLFeedConfig"
                },
                "version": {
                    "type": "string"
                },
                "discoveryInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTCollectionTopic"
                    }
                },
                "totalInvalidObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusMsg": {
                    "$ref": "#/definitions/LLStatusMsg"
                },
                "passwd": {
                    "type": "string"
                },
                "startHour": {
                    "type": "integer",
                    "format": "int32"
                },
                "discardedIndicators": {
                    "type": "integer",
                    "format": "int32"
                },
                "consumedUnsupportedObservables": {
                    "type": "integer",
                    "format": "int32"
                },
                "feedType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "LLFeedProperty": {
            "type": "object",
            "properties": {
                "expirationTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "publish": {
                    "type": "boolean"
                },
                "action": {
                    "type": "string"
                },
                "whitelist": {
                    "type": "boolean"
                },
                "ttl": {
                    "type": "integer",
                    "format": "int32"
                },
                "tags": {
                    "$ref": "#/definitions/LLTags"
                }
            }
        },
        "LLIndicator": {
            "type": "object",
            "properties": {
                "pending": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "rawData": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "noRealizedIncidents": {
                    "type": "integer",
                    "format": "int32"
                },
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LLObservable"
                    }
                },
                "stale": {
                    "type": "boolean"
                },
                "unsupported": {
                    "type": "boolean"
                },
                "feedId": {
                    "type": "string"
                },
                "effectiveProperty": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "noPartialIncidents": {
                    "type": "integer",
                    "format": "int32"
                },
                "customProperty": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "updatedAt": {
                    "type": "integer",
                    "format": "int32"
                },
                "equation": {
                    "$ref": "#/definitions/LLEquationNode"
                },
                "version": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer",
                    "format": "int32"
                },
                "tags": {
                    "$ref": "#/definitions/LLTags"
                },
                "indicatorVersion": {
                    "type": "string"
                },
                "expirationTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "publish": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "invalid": {
                    "type": "boolean"
                },
                "sourceName": {
                    "type": "string"
                },
                "inheritedProperty": {
                    "$ref": "#/definitions/LLFeedProperty"
                },
                "fileId": {
                    "type": "string"
                }
            }
        },
        "PortObjectGroupListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PortObjectGroup"
                    }
                }
            }
        },
        "IStaticMacEntry": {
            "type": "object",
            "properties": {
                "interface": {
                    "$ref": "#/definitions/IInterface"
                },
                "mac": {
                    "type": "string"
                }
            }
        },
        "VpnIPSecSettingsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VpnIPSecSettings"
                    }
                }
            }
        },
        "Realm": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Metadata object of the realm",
                    "$ref": "#/definitions/RealmMetadata"
                },
                "adPrimaryDomain": {
                    "type": "string",
                    "description": "Field to specify the domain served by Active Directory. Sessions with users that match this domain will be associated with this realm. It must be unique. If this field is empty, first Directory Server will be queried for its value. If query fails, user must provide a value."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the realm.  Field is not guaranteed to be safe to display in the UI without escaping HTML characters."
                },
                "directoryConfigurations": {
                    "type": "array",
                    "description": "Represents all known directory server connections.  They are expected to return the same results, and if one server cannot be contacted, then the next one will be used.",
                    "items": {
                        "$ref": "#/definitions/IDirectoryConfiguration"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Value is 'Realm'. Read only fixed value."
                },
                "adJoinPassword": {
                    "type": "string",
                    "description": "Field to specify the password corresponding to the user in `ad_join_username` when joining an Active Directory domain.  Used only for active authentication / captive portal sessions when Kerberos authentication is being used. It must not be empty when 'adJoinUsername' is set. It will be shown as '*********' (nine asterisks), If a field contains '*********' (nine asterisks) on a PUT, we will try to load the password from the existing object."
                },
                "authSessionTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the amount of time in minutes a user session is held onto without receiving another login event for sessions from ISE. Allowed values are from 0 to 35791394. Default value is 1440."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Field represents whether this `Realm` can be used by other policies."
                },
                "groupDn": {
                    "type": "string",
                    "description": "Field that specifies the distinguished name (DN) where we start the search for groups from the directory server. If this field is empty, first Directory Server will be queried for its value. If query fails, user must provide a value"
                },
                "realmType": {
                    "type": "string",
                    "description": "Type of the realm. User-specified values can be 'AD' or 'LDAP'. System-specified values may also include Special and Discovered. Once realmType has been set during object creation, it cannot be changed.",
                    "enum": [
                        "AD",
                        "LDAP",
                        "LOCAL",
                        "DISCOVERED",
                        "SPECIAL"
                    ]
                },
                "includedGroups": {
                    "type": "array",
                    "description": "Fields of the user names that are configured to be included in the download.",
                    "items": {
                        "type": "string"
                    }
                },
                "dirPassword": {
                    "type": "string",
                    "description": "Field to specify the password corresponding to the user in ldapUsername used when sync'ing (downloading) user directory information. Must not be empty for POST. It will be shown as '*********' (nine asterisks), If a field contains '*********n (nine asterisks) on a PUT, we will try to load the password from the existing object."
                },
                "updateHour": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the hour where the sync (download) from the directory starts. Allowed values are from 0 to 23. Default value is 0."
                },
                "links": {
                    "description": "Self link",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique Identifier, in `UUID` format, of the realm. This field is required for PUT but cannot be included in a POST request."
                },
                "groupAttribute": {
                    "type": "string",
                    "description": "Field that specifies which `LDAP` attribute we use to determine group membership."
                },
                "failedAuthSessionTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the amount of time in minutes a user session is held onto without receiving another login event for failed authentication sessions. Allowed values are from 0 to 35791394. Default value is 1440."
                },
                "excludedUsers": {
                    "type": "array",
                    "description": "Fields of the user names that are configured to be excluded in the download.",
                    "items": {
                        "type": "string"
                    }
                },
                "realmId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the internal id of the realm. It is a read-only field, not to be set for any operation."
                },
                "adJoinUsername": {
                    "type": "string",
                    "description": "Field to specify the username when joining an Active Directory domain.  Used only for active authentication / captive portal sessions when Kerberos authentication is being used."
                },
                "guestSessionTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the amount of time in minutes a user session is held onto without receiving another login event for guest user sessions. Allowed values are from 0 to 35791394. Default value is 1440."
                },
                "version": {
                    "type": "string",
                    "description": "Revision, in `UUID` format, of the realm. Must be present for PUT, but not for POST. IT must be the same as last saved objecti for PUT."
                },
                "excludedGroups": {
                    "type": "array",
                    "description": "Fields of the group names that are configured to be excluded in the download.",
                    "items": {
                        "type": "string"
                    }
                },
                "dirUsername": {
                    "type": "string",
                    "description": "Field to specify the username used when sync'ing (downloading) user directory information. Must not be empty for POST."
                },
                "updateInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the frequency in hours of the sync (download). Allowed values are 1,2,3,4,8,12 or 24. Default value is 24."
                },
                "activeAuthSessionTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the amount of time in minutes a user session is held onto without receiving another login event for sessions from captive portal. Allowed values are from 0 to 35791394. Default value is 1440."
                },
                "includedUsers": {
                    "type": "array",
                    "description": "Fields of the user names that are configured to be included in the download.",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the realm. It must be unique and must not be empty for POST. It is not guaranteed to be safe to display in the UI without escaping HTML characters."
                },
                "baseDn": {
                    "type": "string",
                    "description": "Field that specifies the distinguished name (DN) where we start the search for users and groups from the directory server. If this field is empty, first Directory Server will be queried for its value. If query fails, user must provide a value."
                },
                "tsAgentSessionTimeout": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field for the amount of time in minutes a user session is held onto without receiving another login event for sessions from TSAgent. Allowed values are from 0 to 35791394. Default value is 1440."
                }
            },
            "description": "Defines Identity Realm Object."
        },
        "ApplicationFilterListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationFilter"
                    }
                }
            }
        },
        "FTDVlanInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "MTU": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "PASSIVE",
                        "TAP",
                        "ERSPAN",
                        "NONE",
                        "SWITCHPORT"
                    ]
                },
                "fmcAccessConfig": {
                    "$ref": "#/definitions/IFMCAccessConfig"
                },
                "arpConfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IARPConfigContainer"
                    }
                },
                "ipv4": {
                    "$ref": "#/definitions/IIPv4Container"
                },
                "ifname": {
                    "type": "string"
                },
                "ipv6": {
                    "$ref": "#/definitions/IIPv6Container"
                },
                "disablePortForwardOnVlan": {
                    "$ref": "#/definitions/IInterface"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "enableSGTPropagate": {
                    "type": "boolean"
                },
                "macLearn": {
                    "type": "boolean"
                },
                "managementOnly": {
                    "type": "boolean"
                },
                "enableAntiSpoofing": {
                    "type": "boolean"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "activeMACAddress": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fragmentReassembly": {
                    "type": "boolean"
                },
                "macTable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standbyMACAddress": {
                    "type": "string"
                },
                "enableDNSLookup": {
                    "type": "boolean"
                },
                "overrideDefaultFragmentSetting": {
                    "$ref": "#/definitions/IOverrideDefaultFragmentSetting"
                },
                "version": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "IAggregateAddresses": {
            "type": "object",
            "properties": {
                "summaryOnly": {
                    "type": "boolean"
                },
                "ipv6AggregateNetwork": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "ipv4AggregateNetwork": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "attributeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "asSet": {
                    "type": "boolean"
                },
                "suppressMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "type": {
                    "type": "string"
                },
                "advertiseMap": {
                    "$ref": "#/definitions/IRouteMap"
                }
            }
        },
        "PrefilterRule": {
            "type": "object",
            "required": [
                "action",
                "ruleType"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the prefilter rule.",
                    "$ref": "#/definitions/Metadata"
                },
                "bidirectional": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the rule is bidirectional."
                },
                "sourceInterfaces": {
                    "description": "Object representing source interfaces for prefilter rule.",
                    "$ref": "#/definitions/ISecurityZoneContainer"
                },
                "snmpConfig": {
                    "description": "Object representing the SNMP alert associated with the prefilter rule.",
                    "$ref": "#/definitions/ISNMPConfig"
                },
                "encapsulationPorts": {
                    "type": "array",
                    "description": "Object representing the encapsulation ports to be used in prefilter rule.",
                    "items": {
                        "type": "string",
                        "enum": [
                            "GRE",
                            "IP_IN_IP",
                            "IPV6_IN_IP",
                            "TEREDO"
                        ]
                    }
                },
                "timeRangeObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ITimeRangeModel"
                    }
                },
                "sourceNetworks": {
                    "description": "Object representing source networks selected for the prefilter rule.",
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "syslogSeverity": {
                    "type": "string",
                    "description": "Specifies the Override Severity if alerts are being sent to default syslog configuration. One of: ALERT | CRIT | DEBUG | EMERG | ERR | INFO | NOTICE | WARNING.",
                    "enum": [
                        "ALERT",
                        "CRIT",
                        "DEBUG",
                        "EMERG",
                        "ERR",
                        "INFO",
                        "NOTICE",
                        "WARNING"
                    ]
                },
                "destinationInterfaces": {
                    "description": "Object representing destination interfaces for prefilter rule.",
                    "$ref": "#/definitions/ISecurityZoneContainer"
                },
                "tunnelZone": {
                    "description": "Object Representing tunnel zones for prefilter rule.",
                    "$ref": "#/definitions/ISourceZoneContainer"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be PrefilterRule."
                },
                "enableSyslog": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the alerts associated with the prefilter rule are sent to default syslog configuration in Prefilter Logging."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the prefilter rule is in effect (true) or not (false). Default is true."
                },
                "syslogConfig": {
                    "description": "Object representing the syslog alert associated with the prefilter rule.",
                    "$ref": "#/definitions/ISyslogConfig"
                },
                "ruleType": {
                    "type": "string",
                    "description": "Object indicating if the Rule is Prefilter Rule or Tunnel Rule.",
                    "enum": [
                        "PREFILTER",
                        "TUNNEL"
                    ]
                },
                "destinationNetworks": {
                    "description": "Object representing destination networks selected for the prefilter rule.",
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "action": {
                    "type": "string",
                    "description": "Specifies the action to take when the conditions defined by the rule are met. One of: BLOCK | TRUST | NETWORK_DISCOVERY | PERMIT.",
                    "enum": [
                        "ANALYZE",
                        "BLOCK",
                        "FASTPATH"
                    ]
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the prefilter rule."
                },
                "logEnd": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will log events at the end of the connection. Default is false."
                },
                "logBegin": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will log events at the beginning of the connection. Default is false."
                },
                "sendEventsToFMC": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device will send events to the Firepower Management Center event viewer. Default is false."
                },
                "destinationPorts": {
                    "description": "Object representing destination ports selected for the rule.",
                    "$ref": "#/definitions/IPortObjectsContainer"
                },
                "sourcePorts": {
                    "description": "Object representing source ports selected for the rule.",
                    "$ref": "#/definitions/IPortObjectsContainer"
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "newComments": {
                    "type": "array",
                    "description": "Object representing the new comments provided in prefilter rule.",
                    "items": {
                        "type": "string"
                    }
                },
                "commentHistoryList": {
                    "type": "array",
                    "description": "List of comments in the prefilter rule's comment history.",
                    "items": {
                        "$ref": "#/definitions/ICommentHistory"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the prefilter rule."
                },
                "vlanTags": {
                    "description": "Object representing the VLAN tag set associated with the prefilter rule.",
                    "$ref": "#/definitions/IVLanTagsContainer"
                }
            },
            "description": "Represents Prefilter Rule contained within a Prefilter Policy."
        },
        "AsPathListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AsPathList"
                    }
                }
            }
        },
        "IOspfRouteMetric": {
            "type": "object",
            "properties": {
                "metricType": {
                    "type": "string",
                    "enum": [
                        "TYPE_1",
                        "TYPE_2"
                    ]
                },
                "metricValue": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IRouteInjection": {
            "type": "object",
            "properties": {
                "injectMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "name": {
                    "type": "string"
                },
                "copyAttributes": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "existMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "GlobalTimeZone": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string",
                    "description": "Description of the time zone with its UTC offset."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the global time zone from the IANA time zone (tz) database."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always GlobalTimeZone."
                }
            },
            "description": "Object representing a global time zone from IANA time zone (tz) database."
        },
        "GlobalTimeZoneListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobalTimeZone"
                    }
                }
            }
        },
        "IUrlModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "SIDNSListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SIDNSList"
                    }
                }
            }
        },
        "VRFPolicyEntry": {
            "type": "object",
            "properties": {
                "l2SwitchingEnabled": {
                    "type": "boolean"
                },
                "tooltip": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "literal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "subType": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "position": {
                    "type": "integer",
                    "format": "int32"
                },
                "interfaceEntryList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VRFInterfaceEntry"
                    }
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ApplicationCategoryListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationCategory"
                    }
                }
            }
        },
        "TimeZoneObjectOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IVpnExtranetInfo": {
            "type": "object",
            "properties": {
                "isDynamicIP": {
                    "type": "boolean",
                    "description": "Indicates whether the VPN endpoint has a dynamic IP."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the VPN endpoint."
                }
            },
            "description": "Contains VPN extranet information."
        },
        "IdentityPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IdentityPolicy"
                    }
                }
            }
        },
        "ISecurityGroupTagContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISecurityGroupTag"
                    }
                },
                "literals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISecurityGroupTagLiteral"
                    }
                }
            }
        },
        "FTDNatRuleListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDNatRule"
                    }
                }
            }
        },
        "AnyConnectCustomAttributeOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyConnectCustomAttributeOverride"
                    }
                }
            }
        },
        "RuleImportSummaryEntry": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Specifies the count of added,udpated,deleted,skipped,unassociated rules.By default shows 0"
                },
                "rules": {
                    "type": "array",
                    "description": "Specifies the rule details in the format GID:SID for the imported rules.",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ruleimportsummaryentry."
                }
            },
            "description": "An object that represents rule import summary details."
        },
        "FTDHAIPv6Configuration": {
            "type": "object",
            "properties": {
                "ipv6ActiveStandbyPair": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDHAIPv6ActiveStandbyPair"
                    }
                },
                "activeIPv6LinkLocalAddress": {
                    "type": "string"
                },
                "standbyIPv6LinkLocalAddress": {
                    "type": "string"
                }
            }
        },
        "IOspfv3InterfaceConfiguration": {
            "type": "object",
            "properties": {
                "retransmitInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "deadInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "floodReduction": {
                    "type": "boolean"
                },
                "ignoreMtuMismatch": {
                    "type": "boolean"
                },
                "helloInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "filterOutgoingLSA": {
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "ptpNonBroadcast": {
                    "type": "boolean"
                },
                "transmitDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetCost": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DynamicObjectMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "mappingsCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DeployableDevice": {
            "type": "object",
            "properties": {
                "deviceMembers": {
                    "type": "array",
                    "description": "Describes the member information of the Device.",
                    "items": {
                        "$ref": "#/definitions/IDevice"
                    }
                },
                "canBeDeployed": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device can be deployed."
                },
                "policyStatusList": {
                    "type": "array",
                    "description": "List of policy objects which are part of the device.",
                    "items": {
                        "$ref": "#/definitions/IPolicyStatus"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "Describes the reason for not allowing the deployment for a device."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Response object. This value is always DeployableDevice."
                },
                "version": {
                    "type": "string",
                    "description": "Integer, indicating the latest deployed version of the device."
                },
                "upToDate": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the device has any out-of-date policies."
                },
                "domain": {
                    "description": "Object indicating the domain information of the device.",
                    "$ref": "#/definitions/IDomain"
                },
                "isDeploying": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the deployment operation for the device is in progress."
                },
                "name": {
                    "type": "string",
                    "description": "String indicating the device name."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "String indicating the id of the device."
                },
                "trafficInterruption": {
                    "type": "string",
                    "description": "Boolean indicating a deployment can cause traffic interruption.",
                    "enum": [
                        "YES",
                        "NO",
                        "UNDETERMINED",
                        "ERROR"
                    ]
                },
                "groupDependencyDetails": {
                    "$ref": "#/definitions/IGroupDependencyDetailEntry"
                },
                "device": {
                    "description": "Object indicating the device object.",
                    "$ref": "#/definitions/IDevice"
                }
            },
            "description": "Represents the Deployable Device Object."
        },
        "ISearchResult": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "domainUuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subType": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "GLOBALSEARCH",
                        "GLOBAL",
                        "OBJECT",
                        "POLICY",
                        "DEVICE"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "IValueLiteral": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "RadiusServerGroupModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RadiusServerGroupModel"
                    }
                }
            }
        },
        "FTDClusterDeviceContainerListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDClusterDeviceContainer"
                    }
                }
            }
        },
        "INeighborDefaultOriginate": {
            "type": "object",
            "properties": {
                "routeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IAdvanced": {
            "type": "object",
            "properties": {
                "enableOGS": {
                    "type": "boolean"
                }
            }
        },
        "ISourceZoneContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ISourceZoneObject"
                    }
                }
            }
        },
        "SecurityGroupTag": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "tag": {
                    "type": "integer",
                    "format": "int32"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IPrefixContainer": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "advertisement": {
                    "$ref": "#/definitions/IAdvertisement"
                }
            }
        },
        "SNMPConfigListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SNMPConfig"
                    }
                }
            }
        },
        "IOspfv3InterfaceAuthenticationBase": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "IOspfMD5Auth": {
            "type": "object",
            "properties": {
                "md5Key": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "md5KeyId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DNSServerGroupObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DNSServerGroupObject"
                    }
                }
            }
        },
        "AnyConnectCustomAttributeOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the AnyConnect Package.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "User provided resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing the AnyConnect Package object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: AnyConnectPackage."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "AnyConnect Custom Attribute override objects represent custom attribute used in configurations, typically for remote access VPN policies. They can contain override custom attribute in AnyConnect."
        },
        "IRuleAction": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "string",
                    "description": "Default state of the rule for the specified intrusion policy. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT | PASS | REJECT | REACT | REWRITE",
                    "enum": [
                        "DROP",
                        "BLOCK",
                        "ALERT",
                        "DISABLE",
                        "DEFAULT"
                    ]
                },
                "override": {
                    "type": "string",
                    "description": "Override state of the rule for the specified intrusion policy. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT | PASS | REJECT | REACT | REWRITE",
                    "enum": [
                        "DROP",
                        "BLOCK",
                        "ALERT",
                        "DISABLE",
                        "DEFAULT"
                    ]
                },
                "policy": {
                    "description": "Object representing the intrusion policy.",
                    "$ref": "#/definitions/IIntrusionPolicyModel"
                }
            },
            "description": "Object representing the rule action specified for an intrusion policy."
        },
        "KeyChainObjectOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IDynamicObjectsContainer": {
            "type": "object",
            "properties": {
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IDynamicObjectBase"
                    }
                }
            }
        },
        "RESTIncident": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "indicatorName": {
                    "type": "string"
                },
                "equation": {
                    "$ref": "#/definitions/RESTIndicatorEquationNode"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "iteratorId": {
                    "type": "string"
                },
                "indicatorId": {
                    "type": "string"
                },
                "actionTaken": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "observations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTObservation"
                    }
                },
                "property": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "sourceName": {
                    "type": "string"
                },
                "realizedAt": {
                    "type": "integer",
                    "format": "int32"
                },
                "llincident": {
                    "$ref": "#/definitions/LLIncident"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IPPPoEContianer": {
            "type": "object",
            "properties": {
                "pppoePassword": {
                    "type": "string"
                },
                "pppoeRouteMetric": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipAddress": {
                    "type": "string"
                },
                "pppAuth": {
                    "type": "string",
                    "enum": [
                        "PAP",
                        "CHAP",
                        "MSCHAP"
                    ]
                },
                "vpdnGroupName": {
                    "type": "string"
                },
                "enableRouteSettings": {
                    "type": "boolean"
                },
                "storeCredsInFlash": {
                    "type": "boolean"
                },
                "pppoeUser": {
                    "type": "string"
                }
            }
        },
        "ApplicableDeviceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicableDevice"
                    }
                }
            }
        },
        "IDHCPContainer": {
            "type": "object",
            "properties": {
                "dhcpRouteMetric": {
                    "type": "integer",
                    "format": "int32"
                },
                "enableDefaultRouteDHCP": {
                    "type": "boolean"
                }
            }
        },
        "IGroupPolicySplitTunnelSettingsModel": {
            "type": "object",
            "properties": {
                "splitDNSRequestPolicy": {
                    "type": "string",
                    "enum": [
                        "USE_SPLIT_TUNNEL_SETTING",
                        "TUNNEL_ALL",
                        "TUNNEL_SPECIFIED_DOMAINS"
                    ]
                },
                "splitTunnelACL": {
                    "description": "If Split tunnel option is selected as TUNNEL_SPECIFIED or EXCLUDE_SPECIFIED_OVER_TUNNEL, splitTunnelACL is Mandatory. Standard access list or Extended Access List specifies matching traffic",
                    "$ref": "#/definitions/IReference"
                },
                "ipv6SplitTunnelPolicy": {
                    "type": "string",
                    "enum": [
                        "TUNNEL_ALL",
                        "TUNNEL_SPECIFIED",
                        "EXCLUDE_SPECIFIED_OVER_TUNNEL"
                    ]
                },
                "splitDNSDomainList": {
                    "type": "string",
                    "description": "Optional. Specifies List of domain names applicable for splitDNS configuration"
                },
                "ipv4SplitTunnelPolicy": {
                    "type": "string",
                    "enum": [
                        "TUNNEL_ALL",
                        "TUNNEL_SPECIFIED",
                        "EXCLUDE_SPECIFIED_OVER_TUNNEL"
                    ]
                }
            },
            "description": "Model representing the Split Tunnel Policy Settings"
        },
        "ProtocolPortObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/PortMetadata"
                },
                "protocol": {
                    "type": "string",
                    "description": "IANA protocol number or Ethertype. This is handled differently for Transport and Network layer protocols. Transport layer protocols are identified by the IANA protocol number. For example: • 6 — TCP • 17 — UDP Network layer protocols are identified by the decimal form of the IEEE Registration Authority Ethertype. For example: • 2048 — IP."
                },
                "port": {
                    "type": "string",
                    "description": "Port number for the object."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be override."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing protocol port object definition."
        },
        "ICMPV4ObjectOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "FTDRAVpnCertificateMapSettingsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDRAVpnCertificateMapSettings"
                    }
                }
            }
        },
        "IStandardACL": {
            "type": "object",
            "required": [
                "entries",
                "name"
            ],
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStandardACLEntry"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IBGPAddressFamilyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "distance": {
                    "$ref": "#/definitions/IDistance"
                },
                "injectMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRouteInjection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "autoSummary": {
                    "type": "boolean"
                },
                "aftableMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IBgpNetworks"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "distributeLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IDistributeLists"
                    }
                },
                "aggregateAddressesIPv6s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IAggregateAddresses"
                    }
                },
                "defaultInformationOrginate": {
                    "type": "boolean"
                },
                "maximumPaths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IMaximumPaths"
                    }
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INeighbors"
                    }
                },
                "bgpRedistributeInternal": {
                    "type": "boolean"
                },
                "aggregateAddressesIPv4s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IAggregateAddresses"
                    }
                },
                "bgpSupressInactive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "synchronization": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "redistributeProtocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRedistributeProtocolBase"
                    }
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "UpgradePackageListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpgradePackage"
                    }
                }
            }
        },
        "VlanTagGroupListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VlanTagGroup"
                    }
                }
            }
        },
        "PortObjectGroupOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing port object group override definition."
        },
        "VariableSet": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IHealthPolicy": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "DNSServerGroupOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ObjectUsage": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type of resource."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "A model representing object usage response."
        },
        "LLAdditionalProperties": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "FPLogicalInterface": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "securityZone": {
                    "$ref": "#/definitions/ISecurityZoneObjectModel"
                },
                "vlanTag": {
                    "type": "integer",
                    "format": "int32"
                },
                "virtualSwitch": {
                    "$ref": "#/definitions/IVirtualSwitch"
                },
                "icmpEnabled": {
                    "type": "integer",
                    "format": "int32"
                },
                "physicalInterface": {
                    "$ref": "#/definitions/IFPPhysicalInterface"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "enabled": {
                    "type": "integer",
                    "format": "int32"
                },
                "mtu": {
                    "type": "integer",
                    "format": "int32"
                },
                "mode": {
                    "type": "string"
                },
                "interfaceType": {
                    "type": "string",
                    "enum": [
                        "SWITCHED",
                        "ROUTED",
                        "VLAN"
                    ]
                },
                "mdi": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "staticArpEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IStaticArpEntry"
                    }
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "RESTObservable": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string"
                },
                "observableType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "indicatorCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "effectiveProperty": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "observable": {
                    "$ref": "#/definitions/LLObservable"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "inheritedProperty": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "customProperty": {
                    "$ref": "#/definitions/RESTFeedProperty"
                },
                "updatedAt": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MetadataUser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the user."
                },
                "links": {
                    "description": "Contains the self referencing links to this resource",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "The unique UUID of the user"
                },
                "type": {
                    "type": "string",
                    "description": "The user type (fixed)."
                }
            },
            "description": "This object defines details about the user."
        },
        "FQDNOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always return false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing FQDN Network object override definition."
        },
        "ICertificateMapRules": {
            "type": "object",
            "required": [
                "component",
                "field",
                "operator",
                "value"
            ],
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Component of the client certificate to use for the matching rule.",
                    "enum": [
                        "WHOLE_FIELD",
                        "COUNTRY",
                        "COMMON_NAME",
                        "DN_QUALIFIER",
                        "EMAIL_ADDRESS",
                        "GENERATIONAL_QUALIFIER",
                        "GIVEN_NAME",
                        "INITIALS",
                        "LOCALITY",
                        "NAME",
                        "ORGANISATION",
                        "ORGANISATIONAL_UNIT",
                        "SERIAL_NUMBER",
                        "SURNAME",
                        "STATE_PROVINCE",
                        "TITLE",
                        "USER_ID",
                        "UNSTRUCTURED_NAME",
                        "IP_ADDRESS",
                        "DOMAIN_COMPONENT"
                    ]
                },
                "field": {
                    "type": "string",
                    "description": "Field for the matching rule according to the Subject or the Issuer of the client certificate.",
                    "enum": [
                        "SUBJECT",
                        "ALTERNATIVE_SUBJECT",
                        "ISSUER",
                        "EXTENDED_KEY_USAGE"
                    ]
                },
                "value": {
                    "type": "string",
                    "description": "The value of the matching rule. The value is associated with the selected component and operator."
                },
                "operator": {
                    "type": "string",
                    "description": "Operator for the matching rule as Equals, Contains, Does Not Equal or Does Not Contain.",
                    "enum": [
                        "EQUALS",
                        "CONTAINS",
                        "DOES_NOT_EQUAL",
                        "DOES_NOT_CONTAIN"
                    ]
                }
            },
            "description": "Specify the contents of the certificate to evaluate."
        },
        "VpnIkeSettings": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "ikeV1Settings": {
                    "$ref": "#/definitions/IVpnIkev1Settings"
                },
                "type": {
                    "type": "string"
                },
                "ikeV2Settings": {
                    "$ref": "#/definitions/IVpnIkev2Settings"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IGroupPolicyAddressAssignmentModel": {
            "type": "object",
            "properties": {
                "ipv4LocalAddressPool": {
                    "type": "array",
                    "description": "Optional. Represents IPv4 address assignment that is applied based on address pools that are specific to user-groups in Remote Access VPN",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                },
                "defaultDomainName": {
                    "type": "string",
                    "description": "Optional. Specifies the name of the default domain"
                },
                "dhcpScope": {
                    "description": "Optional. Represents DHCP Network for this group.Choose or create a Network Object containing the IPv4 address of the DHCP Network for this group.",
                    "$ref": "#/definitions/IReference"
                }
            },
            "description": "Model representiing the Address Assignment details that will be assigned to the endhost."
        },
        "TunnelTags": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of tunnel tag object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of tunnel tag."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description for tunnel tag object."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be TunnelTag."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing tunnel tag definition."
        },
        "IOspfFilterRule": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "protocol": {
                    "type": "string",
                    "enum": [
                        "CONNECTED",
                        "STATIC",
                        "RIP",
                        "OSPF",
                        "BGP"
                    ]
                },
                "processId": {
                    "type": "string"
                },
                "inInterface": {
                    "$ref": "#/definitions/IFTDInterface"
                },
                "accessList": {
                    "$ref": "#/definitions/IStandardACL"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IConnectionProfileGroupAlias": {
            "type": "object",
            "properties": {
                "aliasName": {
                    "type": "string",
                    "description": "User assigned resource alias name."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If set to True, then the group name appears in the login screen dropdown. Default is False."
                }
            },
            "description": "Specifies alternate names by which the server can refer to a connection profile."
        },
        "CloudEvents": {
            "type": "object",
            "properties": {
                "sendIntrusionEvents": {
                    "type": "boolean",
                    "description": "Boolean indicating whether to send intrusion events to cloud"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "sendConnectionEvents": {
                    "type": "boolean",
                    "description": "Boolean indicating whether to send connection events to cloud"
                },
                "name": {
                    "type": "string"
                },
                "sendFileEvents": {
                    "type": "boolean",
                    "description": "Boolean indicating whether to send file/malware events to cloud"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Links to the configuration object",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique UUID of the configuration object"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the configuration object: CloudEventsConfigs"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "details of the configuration object for sending events to cloud"
        },
        "IntrusionPolicy": {
            "type": "object",
            "properties": {
                "inlineDrop": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the inspection mode. Applicable for Snort 2 engine only. Value can be 0 or 1."
                },
                "metadata": {
                    "description": "Object representing metadata properties of Intrusion Policy.",
                    "$ref": "#/definitions/IIntrusionPolicyMetadata"
                },
                "snortEngine": {
                    "type": "string",
                    "description": "Indicates the Snort engine version.",
                    "enum": [
                        "SNORT2",
                        "SNORT3"
                    ]
                },
                "inspectionMode": {
                    "type": "string",
                    "description": "Indicates the inspection mode. Can be either DETECTION or PREVENTION. Only applicable for Snort 3 engine.",
                    "enum": [
                        "PREVENTION",
                        "DETECTION"
                    ]
                },
                "isSystemDefined": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Intrusion Policy."
                },
                "basePolicy": {
                    "description": "Object representing the base policy of the Intrusion Policy.",
                    "$ref": "#/definitions/IReference"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Intrusion Policy."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the Intrusion Policy."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the object. This value is always 'intrusionpolicy'."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "An object that represents the details for Intrusion Policy."
        },
        "RangeOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RangeOverride"
                    }
                }
            }
        },
        "FTDRedundantInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDRedundantInterface"
                    }
                }
            }
        },
        "INetworkBase": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "AnyConnectCustomAttributeModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyConnectCustomAttributeModel"
                    }
                }
            }
        },
        "OspfPolicyModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "filterRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfFilterRule"
                    }
                },
                "logAdjacencyChanges": {
                    "$ref": "#/definitions/IOspfLogAdjChanges"
                },
                "description": {
                    "type": "string"
                },
                "enableProcess": {
                    "type": "string",
                    "enum": [
                        "PROCESS_1",
                        "PROCESS_2"
                    ]
                },
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfArea"
                    }
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfSummaryAddresses"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "processId": {
                    "type": "string"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfNeighbors"
                    }
                },
                "processConfiguration": {
                    "$ref": "#/definitions/IOspfProcessModel"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "redistributeProtocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IRedistributeProtocolBase"
                    }
                }
            }
        },
        "InspectorOverrideConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the object. This value is always 'InspectorOverrideConfig'."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "inspectorOverrideConfig": {
                    "$ref": "#/definitions/LLInspectorOverrideConfig"
                }
            },
            "description": "Object representing modified inspector settings for network analysis policy."
        },
        "IVpnProtectedNetwork": {
            "type": "object",
            "properties": {
                "acl": {
                    "description": "Access control list of the network.",
                    "$ref": "#/definitions/IReference"
                },
                "networks": {
                    "type": "array",
                    "description": "Represents networks in the VPN.",
                    "items": {
                        "$ref": "#/definitions/IReference"
                    }
                }
            },
            "description": "Contains information about VPN networks."
        },
        "VirtualRouterModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vrfPolicyEntry": {
                    "$ref": "#/definitions/VRFPolicyEntry"
                }
            }
        },
        "KeyChainObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IKeyObject"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "overrideTargetId": {
                    "type": "string"
                }
            }
        },
        "IIntrusionPolicyMetadata": {
            "type": "object",
            "properties": {
                "mappedPolicy": {
                    "$ref": "#/definitions/IIntrusionMappedPolicy"
                },
                "ruleCount": {
                    "$ref": "#/definitions/ISnort3PolicyRuleCount"
                },
                "lastUser": {
                    "$ref": "#/definitions/IMetadataUser"
                },
                "snortEngine": {
                    "type": "string",
                    "enum": [
                        "SNORT2",
                        "SNORT3"
                    ]
                },
                "usage": {
                    "$ref": "#/definitions/IIntrusionUsage"
                },
                "domain": {
                    "$ref": "#/definitions/IDomain"
                },
                "readOnly": {
                    "$ref": "#/definitions/IReadonly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExtendedAccessListModel": {
            "type": "object",
            "required": [
                "entries"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IExtendedACLEntry"
                    }
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IOspfPasswdAuth": {
            "type": "object",
            "properties": {
                "authKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            }
        },
        "KeyChainObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyChainObject"
                    }
                }
            }
        },
        "IReferenceUpdate": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "entityType": {
                    "type": "string"
                },
                "entityName": {
                    "type": "string"
                }
            }
        },
        "FTDRAVpnAddressAssignmentSettingListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDRAVpnAddressAssignmentSetting"
                    }
                }
            }
        },
        "IStandardACLEntry": {
            "type": "object",
            "required": [
                "action",
                "networks"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Indicate the redistribution access: PERMIT or DENY",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                },
                "networks": {
                    "description": "The network objects/groups assoicated with this object",
                    "$ref": "#/definitions/INetworkObjectsContainer"
                }
            },
            "description": "Standard Access List entry"
        },
        "CloudRegion": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "boolean",
                    "description": "Boolean indicating whether this is the region used by the system"
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain used to connect to the region"
                },
                "name": {
                    "type": "string",
                    "description": "Region name"
                },
                "description": {
                    "type": "string",
                    "description": "Region description"
                },
                "links": {
                    "description": "Related links",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the object"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the object: CloudRegion"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "A model representing a cloud region"
        },
        "UrlOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UrlOverride"
                    }
                }
            }
        },
        "ICMPV4ObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ICMPV4Object"
                    }
                }
            }
        },
        "IApplicationModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application model.",
                    "$ref": "#/definitions/IMetadata"
                },
                "deprecated": {
                    "type": "boolean",
                    "description": "Boolean representing if the application has been deprecated."
                },
                "description": {
                    "type": "string",
                    "description": "Application resource description."
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always Application."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "tags": {
                    "type": "array",
                    "description": "List of objects representing application tags.",
                    "items": {
                        "$ref": "#/definitions/IApplicationTag"
                    }
                },
                "productivity": {
                    "description": "The application productivity associated with this application.",
                    "$ref": "#/definitions/IApplicationProductivity"
                },
                "appId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Application Identifier stored in internal database (VDB)."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "risk": {
                    "description": "The application risk associated with this application.",
                    "$ref": "#/definitions/IApplicationRisk"
                },
                "applicationTypes": {
                    "type": "array",
                    "description": "List of objects representing application types.",
                    "items": {
                        "$ref": "#/definitions/IApplicationType"
                    }
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "categories": {
                    "type": "array",
                    "description": "List of objects representing application categories.",
                    "items": {
                        "$ref": "#/definitions/IApplicationCategory"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) for the application."
                }
            },
            "description": "Represents an ApplicationModel containing Application Types, Tags, Productivity, Risk, and Categories."
        },
        "SinkholeListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Sinkhole"
                    }
                }
            }
        },
        "URLObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/URLObject"
                    }
                }
            }
        },
        "BGPGeneralSettingModel": {
            "type": "object",
            "required": [
                "routerId"
            ],
            "properties": {
                "bgpGracefulRestart": {
                    "$ref": "#/definitions/IBGPGSGracefulRestart"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "aggregateTimer": {
                    "type": "integer",
                    "format": "int32"
                },
                "transportPathMtuDiscovery": {
                    "type": "boolean"
                },
                "scanTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "bestPath": {
                    "$ref": "#/definitions/IBGPGSBestPath"
                },
                "asNumber": {
                    "type": "string"
                },
                "asnotationDot": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "bgpNextHopTriggerDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "bgptimers": {
                    "$ref": "#/definitions/IBGPGSTimers"
                },
                "type": {
                    "type": "string"
                },
                "bgpNextHopTriggerEnable": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "routerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "fastExternalFallOver": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "logNeighborChanges": {
                    "type": "boolean"
                },
                "enforceFirstAs": {
                    "type": "boolean"
                },
                "maxasLimit": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SINetworkListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SINetworkList"
                    }
                }
            }
        },
        "IPv6StaticRouteModel": {
            "type": "object",
            "required": [
                "gateway",
                "interfaceName",
                "metricValue",
                "selectedNetworks"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "selectedNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "metricValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "isTunneled": {
                    "type": "boolean"
                },
                "interfaceName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/IHostObjectContainer"
                }
            }
        },
        "SIDNSFeed": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/SIFeedMetadata"
                },
                "feedURL": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Security Intelligence DNS Feed object."
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "checksumURL": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing the Security Intelligence DNS feed."
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be SIDNSFeed."
                },
                "updateFrequency": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Object representing a user-specified third-party feed."
        },
        "IOspfv3DefaultInfoOriginate": {
            "type": "object",
            "properties": {
                "always": {
                    "type": "boolean"
                },
                "routeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "routeMetric": {
                    "$ref": "#/definitions/IOspfRouteMetric"
                }
            }
        },
        "INetworkAddress": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ICMPV6ObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ICMPV6Object"
                    }
                }
            }
        },
        "INeighborTransportConnectionMode": {
            "type": "object",
            "properties": {
                "establishTCPSession": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IVlanModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "data": {
                    "$ref": "#/definitions/IVlanTagLiteral"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "RESTObservableListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTObservable"
                    }
                }
            }
        },
        "PolicyAssignment": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ITarget"
                    }
                },
                "version": {
                    "type": "string"
                },
                "policy": {
                    "$ref": "#/definitions/IPolicyModel"
                }
            }
        },
        "ICMPV4Object": {
            "type": "object",
            "properties": {
                "icmpType": {
                    "type": "string",
                    "description": "ICMP type number."
                },
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/PortMetadata"
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ICMP code number."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: ICMPV4Object."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "An object defining a ICMPv4 Port object definition."
        },
        "AccessPolicySecurityIntelligencePolicy": {
            "type": "object",
            "properties": {
                "dnsPolicy": {
                    "description": "The DNS Policy associated with the security intelligence policy",
                    "$ref": "#/definitions/ISIDNSPolicy"
                },
                "urls": {
                    "description": "List of url type objects that make up the urls allow and block lists",
                    "$ref": "#/definitions/ISISettings"
                },
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the associated security intelligence policy."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing security intelligence policy."
                },
                "type": {
                    "type": "string",
                    "description": "Type must be SecurityIntelligencePolicy."
                },
                "networks": {
                    "description": "List of network type objects that make up the networks allow and block lists",
                    "$ref": "#/definitions/ISISettings"
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Object representing the association of security intelligence policy to specified access policy."
        },
        "LLCollectionTopic": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "pollIntervalInMinutes": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "contentBindings": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "subType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "protocolBinding": {
                    "type": "string"
                },
                "messageBinding": {
                    "type": "string"
                },
                "hashMap": {
                    "$ref": "#/definitions/LLHashMap"
                }
            }
        },
        "DeviceCopyConfigRequest": {
            "type": "object",
            "properties": {
                "copySharedPolicies": {
                    "type": "boolean",
                    "description": "Boolean value. Copies shared policies from source standalone device or HA to target standalone device based on True or False input"
                },
                "targetDeviceList": {
                    "type": "array",
                    "description": "Target device list is a standalone device UUID",
                    "items": {
                        "$ref": "#/definitions/ITarget"
                    }
                },
                "sourceDevice": {
                    "description": "Source device is either a standalone device UUID or HA container UUID",
                    "$ref": "#/definitions/ITarget"
                }
            },
            "description": "Copy configuration operation on device"
        },
        "VpnEndpoint": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the VpnEndpoint.",
                    "$ref": "#/definitions/Metadata"
                },
                "extranet": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the endpoint is a managed FTD device or extranet."
                },
                "description": {
                    "type": "string",
                    "description": "Description of VpnEndpoint."
                },
                "type": {
                    "type": "string",
                    "description": "The unique type of the VpnEndpoint."
                },
                "interface": {
                    "$ref": "#/definitions/IReference"
                },
                "connectionType": {
                    "type": "string",
                    "description": "Specifies the connection type of the peer. Allowed values are ORIGINATE_ONLY, ANSWER_ONLY, BIDIRECTIONAL."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "extranetInfo": {
                    "$ref": "#/definitions/IVpnExtranetInfo"
                },
                "dynamicRRIEnabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the endpoint is enabled with Dynamic Reverse Route Injection or not."
                },
                "protectedNetworks": {
                    "$ref": "#/definitions/IVpnProtectedNetwork"
                },
                "nattedInterfaceAddress": {
                    "type": "string",
                    "description": "The public or the natted IP address of the endpoint if the vpn interface is a private IP"
                },
                "backupInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IVpnBackupInterface"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the VpnEndpoint."
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the VpnEndpoint."
                },
                "peerType": {
                    "type": "string",
                    "description": "Specifies the peer type. Allowed values are PEER, HUB, SPOKE."
                },
                "device": {
                    "$ref": "#/definitions/IReference"
                },
                "ipv6InterfaceAddress": {
                    "type": "string"
                }
            },
            "description": "Description of VpnEndpoint."
        },
        "INeighborFilterList": {
            "type": "object",
            "properties": {
                "filterUpdateAction": {
                    "type": "string",
                    "enum": [
                        "IN",
                        "OUT"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "asPathList": {
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IPv6AddressPoolOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv6AddressPoolOverride"
                    }
                }
            }
        },
        "IConsoleUser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IModifiedUserInfo": {
            "type": "object",
            "properties": {
                "lastModifiedTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Timestamp indicating the time when user has last modified the policy."
                },
                "userName": {
                    "type": "string",
                    "description": "Name of the user."
                }
            },
            "description": "Modified User Information"
        },
        "RESTIncidentListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RESTIncident"
                    }
                }
            }
        },
        "IExtendedACLEntry": {
            "type": "object",
            "required": [
                "action",
                "logLevel",
                "logging"
            ],
            "properties": {
                "logLevel": {
                    "type": "string",
                    "enum": [
                        "EMERGENCY",
                        "ALERT",
                        "CRITICAL",
                        "WARNING",
                        "ERROR",
                        "NOTIFICATION",
                        "INFORMATIONAL",
                        "DEBUGGING"
                    ]
                },
                "sourceNetworks": {
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "destinationPorts": {
                    "$ref": "#/definitions/IPortObjectsContainer"
                },
                "destinationNetworks": {
                    "$ref": "#/definitions/INetworkObjectsContainer"
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "PERMIT",
                        "DENY"
                    ]
                },
                "logging": {
                    "type": "string",
                    "enum": [
                        "PER_ACCESS_LIST_ENTRY",
                        "DEFAULT",
                        "DISABLED"
                    ]
                },
                "sourcePorts": {
                    "$ref": "#/definitions/IPortObjectsContainer"
                },
                "logInterval": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IOspfInterval": {
            "type": "object",
            "properties": {
                "helloInterval": {
                    "$ref": "#/definitions/IOspfDeadIntervalMechanism"
                },
                "helloMultiplier": {
                    "$ref": "#/definitions/IOspfHelloMultiplierMechanism"
                }
            }
        },
        "VrfBGPIPvAddressFamilyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VrfBGPIPvAddressFamilyModel"
                    }
                }
            }
        },
        "SINetworkFeedListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SINetworkFeed"
                    }
                }
            }
        },
        "DeviceGroup": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of DeviceGroup.",
                    "$ref": "#/definitions/IMetadata"
                },
                "members": {
                    "type": "array",
                    "description": "Represents devices included in group.",
                    "items": {
                        "$ref": "#/definitions/IBaseDevice"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "type": {
                    "type": "string",
                    "description": "Response object associated with resource: DeviceGroup."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing a DeviceGroup."
        },
        "IValueAdd": {
            "type": "object",
            "properties": {
                "newValue": {
                    "type": "string"
                },
                "fieldName": {
                    "type": "string"
                }
            }
        },
        "ApplicationCategory": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ICommentHistory": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/IConsoleUser"
                }
            }
        },
        "AccessPolicy": {
            "type": "object",
            "required": [
                "defaultAction"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the access control policy.",
                    "$ref": "#/definitions/Metadata"
                },
                "defaultAction": {
                    "description": "Object representing the default action (AccessPolicyDefaultAction). The default action determines how the system handles and logs traffic not handled by any other access control rules. For more information, see the defaultactions service.",
                    "$ref": "#/definitions/IAccessPolicyDefaultAction"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the access control policy."
                },
                "identityPolicySetting": {
                    "$ref": "#/definitions/IACPolicyIdentityPolicySettings"
                },
                "description": {
                    "type": "string",
                    "description": "Description of Access Policy"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "rules": {
                    "type": "object",
                    "description": "Object containing a list of rules in the access control policy."
                },
                "securityIntelligence": {
                    "description": "Object containing the security intelligence policy related data associated with the Access Policy.",
                    "$ref": "#/definitions/IReference"
                },
                "prefilterPolicySetting": {
                    "$ref": "#/definitions/IAccessPolicyPrefilterPolicySettingModel"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the access control policy."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the access control policy; this value is always AccessPolicy."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            }
        },
        "IKEv2IPsecProposalListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IKEv2IPsecProposal"
                    }
                }
            }
        },
        "HealthMonitorModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HealthMonitorModel"
                    }
                }
            }
        },
        "RESTObservationData": {
            "type": "object",
            "properties": {
                "actionTaken": {
                    "type": "string"
                },
                "llobservationData": {
                    "$ref": "#/definitions/LLObservationData"
                },
                "miscData": {
                    "$ref": "#/definitions/LLMiscData"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ApplicationListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application"
                    }
                }
            }
        },
        "VirtualRouterModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VirtualRouterModel"
                    }
                }
            }
        },
        "DynamicAccessPolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "hostscanXmlConfig": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "hostscanPackage": {
                    "$ref": "#/definitions/IPolicyObjectModel"
                },
                "authorizationAttributes": {
                    "type": "array",
                    "description": "Actions to be taken when a DAP record is matched",
                    "items": {
                        "$ref": "#/definitions/DapAuthorizationAttributes"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "dapXmlConfig": {
                    "type": "string",
                    "description": "Base 64 encoded dap xml string"
                }
            },
            "description": "Contains information about the Dynamic Access Policies used by the Firepower Threat Defense device."
        },
        "PortObjectGroup": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/PortMetadata"
                },
                "objects": {
                    "type": "array",
                    "description": "Represents port objects in group.",
                    "items": {
                        "$ref": "#/definitions/IPortObject"
                    }
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the policy assignment."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing port group definition."
        },
        "IOspfv3NeighborConfiguration": {
            "type": "object",
            "required": [
                "linkLocalAddress",
                "properties"
            ],
            "properties": {
                "linkLocalAddress": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/IOspfv3NeighborProperties"
                }
            }
        },
        "IDirectoryConfiguration": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "Field to specify the hostname or IP address of the directory server. This is a required field."
                },
                "useRoutingToSelectInterface": {
                    "type": "boolean",
                    "description": "Field used by RA-VPN configurations when using a realm for authentication, and it specifies whether the device will use predefined routing to connect to the directory server."
                },
                "port": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field of the port used to connect to the directory server. Allowed value are from 1 to 65535. "
                },
                "encryptionProtocol": {
                    "type": "string",
                    "description": "Field of the encryption protocol used when connecting to this directory server. Allowed values are 'NONE', 'LDAPS', or 'STARTTLS'.",
                    "enum": [
                        "NONE",
                        "STARTTLS",
                        "LDAPS"
                    ]
                },
                "encryptionCert": {
                    "description": "An object reference to a `ExternalCACertificate` certificate object on FMC used to connect to a server when using encryption.  Must be specified if `LDAPS` or `STARTTLS` is used in `encryptionProtocol`.",
                    "$ref": "#/definitions/IExternalCACertificate"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field indicating the order this directoryConfiguration should be used."
                },
                "interface": {
                    "description": "An object reference to the SecurityZone used by RA-VPN configurations when using a realm for authentication, and it specifies which interface the device will use to contact the directory server.",
                    "$ref": "#/definitions/IInterfaceGroupObjectModel"
                }
            },
            "description": "Represents directory server connection"
        },
        "FQDNObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FQDNObject"
                    }
                }
            }
        },
        "IEndPointDeviceType": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "iseId": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "fqName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Ospfv3InterfacePolicyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ospfv3InterfacePolicyModel"
                    }
                }
            }
        },
        "IPv4PrefixListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IPv4PrefixList"
                    }
                }
            }
        },
        "JobHistory": {
            "type": "object",
            "properties": {
                "jobName": {
                    "type": "string",
                    "description": "Name of the deployed job"
                },
                "jobStatus": {
                    "type": "string",
                    "description": "Represents the status of the job",
                    "enum": [
                        "DEPLOYING",
                        "DEPLOYED",
                        "FAILED",
                        "ABORTED",
                        "EDIT_INUSE"
                    ]
                },
                "deviceList": {
                    "type": "array",
                    "description": "List of devices which have been part of the job.",
                    "items": {
                        "$ref": "#/definitions/IDeviceListEntry"
                    }
                },
                "startTime": {
                    "type": "string",
                    "description": "Indicates the start time (in ISO 8601 format) of the deployment job."
                },
                "id": {
                    "type": "string",
                    "description": "UUID of the deployment job."
                },
                "endTime": {
                    "type": "string",
                    "description": "Indicates the end time (in ISO 8601 format) of the deployment job."
                },
                "jobType": {
                    "type": "string",
                    "enum": [
                        "DEPLOYMENT",
                        "ROLLBACK",
                        "UNKNOWN"
                    ]
                },
                "type": {
                    "type": "string",
                    "description": "Type must be JobHistory."
                },
                "user": {
                    "type": "string",
                    "description": "Creator of the deployment task."
                },
                "deploymentNote": {
                    "type": "string",
                    "description": "User provided job note"
                }
            }
        },
        "Device": {
            "type": "object",
            "required": [
                "hostName",
                "license_caps",
                "regKey"
            ],
            "properties": {
                "hostName": {
                    "type": "string",
                    "description": "Hostname or IP address of the device. If the device is behind NAT, you can leave the host name as blank, and enter the NAT_ID string in the 'Unique NAT ID' text box. Use the same NAT_ID string that you used while configuring FMC on the device."
                },
                "metadata": {
                    "description": "Object representing metadata attributes of the Device.",
                    "$ref": "#/definitions/DeviceMetadata"
                },
                "modelId": {
                    "type": "string",
                    "description": "Model ID of the registered device."
                },
                "advanced": {
                    "description": "Object representing Device Advanced Configuration.",
                    "$ref": "#/definitions/IAdvanced"
                },
                "natID": {
                    "type": "string",
                    "description": "Unique ID for a Network address translation (NAT) device (optional; used for device registration). If the device to be registered and the Firepower Management Center are separated by a NAT device, enter a unique NAT ID."
                },
                "description": {
                    "type": "string",
                    "description": "User-specified description of the registered device."
                },
                "license_caps": {
                    "type": "array",
                    "description": "Array of strings representing the license capabilities on the managed device. For registering FTD, the allowed values are: BASE (mandatory), THREAT, URLFilter, MALWARE, APEX, PLUS, VPNOnly. For Firepower ASA or NGIPSv devices, allowed values are: BASE, THREAT, PROTECT, CONTROL, URLFilter, MALWARE, VPN, SSL. ",
                    "items": {
                        "type": "string"
                    }
                },
                "ftdMode": {
                    "type": "string",
                    "description": "FTD mode (Example: ROUTED or TRANSPARENT)",
                    "enum": [
                        "ROUTED",
                        "TRANSPARENT"
                    ]
                },
                "type": {
                    "type": "string",
                    "description": "Type of the device; this value is always Device."
                },
                "snortEngine": {
                    "type": "string",
                    "enum": [
                        "SNORT2",
                        "SNORT3"
                    ]
                },
                "healthPolicy": {
                    "description": "Object representing the system health policy applied to the registered device.",
                    "$ref": "#/definitions/IHealthPolicy"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "model": {
                    "type": "string",
                    "description": "Model name of the registered device."
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the registered device."
                },
                "prohibitPacketTransfer": {
                    "type": "boolean",
                    "description": "Boolean indicating whether to prohibit the registered device from sending packet data with events to the Firepower Management Center (true) or to allow transfer (false). If this field is set to false (the default), the device transfers packets when a certain event is triggered. Not all traffic data is sent; connection events do not include a payload, only connection metadata."
                },
                "modelType": {
                    "type": "string",
                    "description": "Model type of the registered device."
                },
                "regKey": {
                    "type": "string",
                    "description": "Registration Key that you entered while configuring FMC on the device."
                },
                "keepLocalEvents": {
                    "type": "boolean",
                    "description": "Boolean indicating whether local events are recorded and kept on the device."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "sw_version": {
                    "type": "string",
                    "description": "Device version"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Current health status of the device."
                },
                "performanceTier": {
                    "type": "string",
                    "description": "Performance tier for the managed device ( applicable only for vFTD's from 6.8.0 with possible values FTDv5 | FTDv10 | FTDv20 | FTDv30 | FTDv50 | Legacy )."
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the registered device. (Example: Device 01 - 192.168.0.152.)"
                },
                "modelNumber": {
                    "type": "string",
                    "description": "Model number of the registered device."
                },
                "accessPolicy": {
                    "description": "Object representing the currently assigned access control policy. You need to specify an existing access control policy when registering a device.",
                    "$ref": "#/definitions/IPolicyModel"
                },
                "deviceGroup": {
                    "description": "Object representing the device group.",
                    "$ref": "#/definitions/IDeviceGroup"
                }
            },
            "description": "A model representing a Device."
        },
        "IOspfSummaryAddresses": {
            "type": "object",
            "properties": {
                "tagNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "summaryNetwork": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "advertise": {
                    "type": "boolean"
                }
            }
        },
        "IPv6PrefixList": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IIPvPrefixListEntry"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "SIFeedMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "entryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "INeighborRoutes": {
            "type": "object",
            "properties": {
                "advertisementInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "neighborAdvertiseMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INeighborAdvertiseMaps"
                    }
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "removePrivateAs": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IAuthTypeAndString": {
            "type": "object",
            "properties": {
                "cryptoKeyString": {
                    "type": "string"
                },
                "cryptoEncryptionType": {
                    "type": "string",
                    "enum": [
                        "PLAINTEXT"
                    ]
                }
            }
        },
        "INeighborAdvanced": {
            "type": "object",
            "properties": {
                "neighborTransportConnectionMode": {
                    "$ref": "#/definitions/INeighborTransportConnectionMode"
                },
                "neighborSecret": {
                    "type": "string"
                },
                "neighborVersion": {
                    "type": "integer",
                    "format": "int32"
                },
                "neighborTransportPathMTUDiscovery": {
                    "$ref": "#/definitions/INeighborTransportPathMTUDiscovery"
                },
                "nextHopSelf": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "neighborHops": {
                    "$ref": "#/definitions/INeighborHops"
                },
                "id": {
                    "type": "string"
                },
                "neighborWeight": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "sendCommunity": {
                    "type": "boolean"
                }
            }
        },
        "ITFCPackets": {
            "type": "object",
            "properties": {
                "burstBytes": {
                    "type": "integer",
                    "format": "int32"
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "enabled": {
                    "type": "boolean"
                },
                "payloadBytes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "GeoLocationObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoLocationObject"
                    }
                }
            }
        },
        "DynamicObjectMappingsBulk": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicObjectWithMappingsBulk"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "remove": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicObjectWithMappingsBulk"
                    }
                }
            }
        },
        "AnyProtocolPortObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnyProtocolPortObject"
                    }
                }
            }
        },
        "FTDS2SVpnModel": {
            "type": "object",
            "properties": {
                "endpoints": {
                    "type": "object",
                    "description": "Contains information for VPN endpoints."
                },
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/IMetadata"
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "type": {
                    "type": "string",
                    "description": "Response object associated with resource."
                },
                "routeBased": {
                    "type": "boolean"
                },
                "ipsecSettings": {
                    "description": "Object representing IPSEC settings for the VPN.",
                    "$ref": "#/definitions/IReference"
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "ikeV1Enabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the VPN connection is using INternet Key Exchange v1."
                },
                "ikeV2Enabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the VPN connection is using INternet Key Exchange v2."
                },
                "topologyType": {
                    "type": "string",
                    "description": "Indicates the type of topolgy used by the VPN."
                },
                "advancedSettings": {
                    "description": "Contains advanced settings for the VPN.",
                    "$ref": "#/definitions/IReference"
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "ikeSettings": {
                    "description": "Object representing Internet Key Exchange settings for the VPN.",
                    "$ref": "#/definitions/IReference"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                }
            },
            "description": "Contains information about the site-to-site VPN settings used by the Firepower Threat Defense device."
        },
        "FTDAutoNatRule": {
            "type": "object",
            "required": [
                "natType",
                "originalNetwork",
                "translatedNetwork"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "fallThrough": {
                    "type": "boolean"
                },
                "natType": {
                    "type": "string",
                    "enum": [
                        "STATIC",
                        "DYNAMIC"
                    ]
                },
                "serviceProtocol": {
                    "type": "string",
                    "enum": [
                        "TCP",
                        "UDP"
                    ]
                },
                "dns": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "patOptions": {
                    "$ref": "#/definitions/IPatOptionsContainer"
                },
                "version": {
                    "type": "string"
                },
                "noProxyArp": {
                    "type": "boolean"
                },
                "translatedNetwork": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "sourceInterface": {
                    "$ref": "#/definitions/IInterfaceObjectModel"
                },
                "interfaceInTranslatedNetwork": {
                    "type": "boolean"
                },
                "routeLookup": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "translatedPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "netToNet": {
                    "type": "boolean"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "destinationInterface": {
                    "$ref": "#/definitions/IInterfaceObjectModel"
                },
                "id": {
                    "type": "string"
                },
                "originalNetwork": {
                    "$ref": "#/definitions/INetworkObjectsOnly"
                },
                "interfaceIpv6": {
                    "type": "boolean"
                },
                "originalPort": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IOspfArea": {
            "type": "object",
            "properties": {
                "areaNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/INetworkAddress"
                    }
                },
                "defaultCost": {
                    "type": "integer",
                    "format": "int32"
                },
                "areaId": {
                    "type": "string"
                },
                "areaType": {
                    "$ref": "#/definitions/IOspfAreaType"
                },
                "virtualLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfVirtualLinks"
                    }
                },
                "areaRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfAreaRanges"
                    }
                },
                "filterList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IOspfFilterList"
                    }
                },
                "authentication": {
                    "type": "string",
                    "enum": [
                        "PASSWORD",
                        "MESSAGE_DIGEST"
                    ]
                }
            }
        },
        "FTDVTIInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FTDVTIInterface"
                    }
                }
            }
        },
        "ApplicationTagListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationTag"
                    }
                }
            }
        },
        "PolicyAssignmentListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyAssignment"
                    }
                }
            }
        },
        "NetworkObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkObject"
                    }
                }
            }
        },
        "LLTags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "IVlanBase": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "overridable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "HostObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HostObject"
                    }
                }
            }
        },
        "Ospfv3InterfacePolicyModel": {
            "type": "object",
            "required": [
                "deviceInterface"
            ],
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string"
                },
                "deviceInterface": {
                    "$ref": "#/definitions/IFTDInterface"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/IOspfv3InterfaceConfiguration"
                },
                "authentication": {
                    "$ref": "#/definitions/IOspfv3InterfaceAuthenticationBase"
                }
            }
        },
        "ILifeTime": {
            "type": "object",
            "properties": {
                "endLifeTimeValue": {
                    "type": "string"
                },
                "startLifeTimeValue": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "endLifetimeType": {
                    "type": "string",
                    "enum": [
                        "INFINITE",
                        "DURATION",
                        "DATETIME"
                    ]
                }
            }
        },
        "ApplicationTag": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IOspfProtocolConfiguration": {
            "type": "object",
            "properties": {
                "retransmitInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "ignoreMtuMismatch": {
                    "type": "boolean"
                },
                "ospfAuthentication": {
                    "$ref": "#/definitions/IOspfAuthentication"
                },
                "filterOutgoingLSA": {
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "ospfInterval": {
                    "$ref": "#/definitions/IOspfInterval"
                },
                "ptpNonBroadcast": {
                    "type": "boolean"
                },
                "transmitDelay": {
                    "type": "integer",
                    "format": "int32"
                },
                "packetCost": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ExpandedCommunityListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExpandedCommunityList"
                    }
                }
            }
        },
        "IPv6AddressPool": {
            "type": "object",
            "required": [
                "ipv6StartAddress",
                "numberOfAddresses"
            ],
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "numberOfAddresses": {
                    "type": "integer",
                    "format": "int32",
                    "description": "IPv6 address available in the configured pool and the prefix length in bits."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "ipv6StartAddress": {
                    "type": "string",
                    "description": "Specifies the number of IPv6 addresses to use in the pool starting at ipv6StartAddress, Format: ipv6_address/prefix_length."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of response object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: IPv6AddressPool."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string"
                }
            },
            "description": "A model representing Ipv6AddressPool Object definition."
        },
        "INeighborDistributeLists": {
            "type": "object",
            "properties": {
                "filterUpdateAction": {
                    "type": "string",
                    "enum": [
                        "IN",
                        "OUT"
                    ]
                },
                "accessList": {
                    "$ref": "#/definitions/IStandardACL"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "IGroupPolicyAnyConnectSettingsModel": {
            "type": "object",
            "properties": {
                "sslSettings": {
                    "description": "Optional. Configures SSL Settings parameters to be used when connecting to the Client.",
                    "$ref": "#/definitions/IGroupPolicySSLSettingsModel"
                },
                "connectionSettings": {
                    "description": "Optional. Configures the connection parameters to be applied on the VPN connectivity.",
                    "$ref": "#/definitions/IGroupPolicyConnectionSettingsModel"
                },
                "clientModules": {
                    "type": "array",
                    "description": "Optional. Represents specified Anyconnect modules to be downloaded when VPN user downloads Anyconnect Client",
                    "items": {
                        "$ref": "#/definitions/IGroupPolicyClientModulesModel"
                    }
                },
                "vpnClientProfile": {
                    "description": "Optional. Represents VPN Client Profile Object whose filetype is ANYCONNECT_VPN_PROFILE",
                    "$ref": "#/definitions/IReference"
                },
                "managementProfile": {
                    "description": "Optional. Represents VPN Management Profile Object whose filetype is ANYCONNECT_VPN_PROFILE",
                    "$ref": "#/definitions/IReference"
                },
                "customAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IGroupPolicyCustomAttributesModel"
                    }
                }
            },
            "description": "Model representing the Configurations for AnyConnect Client."
        },
        "ISESecurityGroupTag": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "tag": {
                    "type": "integer",
                    "format": "int32"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Sinkhole": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the Sinkhole.",
                    "$ref": "#/definitions/Metadata"
                },
                "description": {
                    "type": "string"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the object; this value is always Sinkhole."
                },
                "version": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "string",
                    "description": "User-specified ipv4 of the Sinkhole."
                },
                "ipv6": {
                    "type": "string",
                    "description": "User-specified ipv6 of the Sinkhole."
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the Sinkhole."
                },
                "overridable": {
                    "type": "boolean"
                },
                "action": {
                    "type": "string",
                    "description": "User-specified action of the Sinkhole.",
                    "enum": [
                        "MONITOR",
                        "BLOCK"
                    ]
                },
                "sinkholeType": {
                    "type": "string",
                    "enum": [
                        "SINKHOLE_CN_C",
                        "SINKHOLE_MALWARE",
                        "SINKHOLE_PHISHING",
                        "NONE"
                    ]
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier (UUID) representing the Sinkhole."
                }
            },
            "description": "Description of Sinkhole."
        },
        "IValueDelete": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "oldValue": {
                    "type": "string"
                }
            }
        },
        "FTDRAVpnAddressAssignmentSetting": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of Address Assignment Setting.",
                    "$ref": "#/definitions/Metadata"
                },
                "useInternalAddressPoolForIPv4": {
                    "type": "boolean",
                    "description": "Assign IPv4 address to the remote client from Address Pools configured in Connection Profile or Group Policy. Default value is True."
                },
                "useInternalAddressPoolForIPv6": {
                    "type": "boolean",
                    "description": "Assign IPv6 address to the remote client from Address Pools configured in Connection Profile or Group Policy. Default value is True"
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description. "
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: RaVpnAddressAssignmentSetting."
                },
                "IPAddressReuseInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Delays the reuse of an IP address after it return to the address pool. Default value is 0 mins, Allowed range is 0-480 mins."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "useAuthorizationServerForIPv4": {
                    "type": "boolean",
                    "description": "Assign IPv4 address to the remote client from Realm or Radius Servers. Default value is True."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/ILinks"
                },
                "useAuthorizationServerForIPv6": {
                    "type": "boolean",
                    "description": "Assign IPv6 address to the remote client from Realm or Radius Servers. Default value is True."
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing response object."
                },
                "useDHCP": {
                    "type": "boolean",
                    "description": "Obtains IP addresses from a DHCP server configured in a connection profile. Default value is True."
                }
            },
            "description": "A model representing Address Assignment Setting definition."
        },
        "IAccessPolicyPrefilterPolicySettingModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the associated prefilter policy."
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing prefilter policy."
                },
                "type": {
                    "type": "string",
                    "description": "Type must be PrefilterPolicy."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "Object representing the association of prefilter policy to specified access policy. When access policy is created, the attribute will refer to Default Prefilter Policy. This attribute can be updated only using the PUT operation. If the attribute is missing from PUT call, the attribute will not be changed."
        },
        "SIDNSFeedListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SIDNSFeed"
                    }
                }
            }
        },
        "IApplicationTag": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the application tag.",
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the application tag."
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "description": {
                    "type": "string",
                    "description": "Application tag resource description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the application tag."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the response object. This value is always ApplicationTag."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "Represents an ApplicationTag."
        },
        "NetworkOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns false for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object on a device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique UUID representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing Network Override object definition."
        },
        "IURLCategory": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "overridable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "overrides": {
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "InterfaceEventListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InterfaceEvent"
                    }
                }
            }
        },
        "IDistance": {
            "type": "object",
            "properties": {
                "externalDistance": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "internalDistance": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "localDistance": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IPendingDeviceRegInfo": {
            "type": "object",
            "properties": {
                "deviceUuid": {
                    "type": "string"
                },
                "regStatus": {
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "FAILED"
                    ]
                },
                "ipAddress": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                }
            }
        },
        "VlanOverrideListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VlanOverride"
                    }
                }
            }
        },
        "NetworkAddressListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkAddress"
                    }
                }
            }
        },
        "IIntrusionPolicyModel": {
            "type": "object",
            "properties": {
                "inlineDrop": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the inspection mode <0 or 1>"
                },
                "snortEngine": {
                    "type": "string",
                    "description": "Possible values could be SNORT2 or SNORT3",
                    "enum": [
                        "SNORT2",
                        "SNORT3"
                    ]
                },
                "inspectionMode": {
                    "type": "string",
                    "description": "Only applicable for SNORT3. Possible values could be DETECTION or PREVENTION",
                    "enum": [
                        "PREVENTION",
                        "DETECTION"
                    ]
                },
                "isSystemDefined": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the intrusion policy"
                },
                "basePolicy": {
                    "description": "Representing policy details which is used as base for current policy. This field is not present for preprovisioned intrusioned policies.",
                    "$ref": "#/definitions/IReference"
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string",
                    "description": "Intrusion Policy UUID"
                },
                "type": {
                    "type": "string",
                    "description": "Type must be intrusionpolicy"
                }
            }
        },
        "PrefilterPolicyListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PrefilterPolicy"
                    }
                }
            }
        },
        "InlineSetListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InlineSet"
                    }
                }
            }
        },
        "IBgpNetworks": {
            "type": "object",
            "properties": {
                "routeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "ipv6Address": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "ipv4Address": {
                    "$ref": "#/definitions/INetworkAddress"
                },
                "name": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "FPLogicalInterfaceListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FPLogicalInterface"
                    }
                }
            }
        },
        "VlanTagGroupOverride": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Always returns flase for overrides."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Object containing links to this resource.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                }
            },
            "description": "A model representing tag group override definition."
        },
        "IInterfaceDeviceModel": {
            "type": "object",
            "properties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IFTDInterface"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "IBasePortLiteral": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "RollbackRequestMetadata": {
            "type": "object",
            "properties": {
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "task": {
                    "$ref": "#/definitions/TaskStatus"
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "HealthAlertModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HealthAlertModel"
                    }
                }
            }
        },
        "CertificateMapModel": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata attributes for the CertificateMap.",
                    "$ref": "#/definitions/Metadata"
                },
                "name": {
                    "type": "string",
                    "description": "User-specified name of the Certificate Map"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ICertificateMapRules"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing the CertificateMap object."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource: CertificateMap."
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "Certificate Map objects are a named set of certificate matching rules. These objects are used to provide an association between a received certificate and a Remote Access VPN connection profile."
        },
        "IOspfDefaultInfoOriginate": {
            "type": "object",
            "properties": {
                "always": {
                    "type": "boolean"
                },
                "routeMap": {
                    "$ref": "#/definitions/IRouteMap"
                },
                "routeMetric": {
                    "$ref": "#/definitions/IOspfRouteMetric"
                }
            }
        },
        "LLInspectorConfig": {
            "type": "object",
            "description": "The schema of this payload is dynamic and based on the OpenAPI schema received from the latest installed Lightweight Security Package.",
            "additionalProperties": {
                "type": "object"
            }
        },
        "RangeObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User chosen resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided description."
                },
                "links": {
                    "description": "Contains the full URL to the current object and its parent (if any)",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "This is populated only if this object is an override and contains the parent (global) object id and whether this is an override on device or domain.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "The unique type of this object."
                },
                "value": {
                    "type": "string",
                    "description": "Actual value of range."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path query parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing Range Network object definition."
        },
        "VpnIkeSettingsListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VpnIkeSettings"
                    }
                }
            }
        },
        "AuthRolesListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuthRoles"
                    }
                }
            }
        },
        "SyslogConfig": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/IMetadata"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ISIObject": {
            "type": "object",
            "properties": {
                "sourceZone": {
                    "$ref": "#/definitions/IReference"
                }
            }
        },
        "Ikev2PolicyObjectListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ikev2PolicyObject"
                    }
                }
            }
        },
        "SIURLListListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SIURLList"
                    }
                }
            }
        },
        "RealmUserGroupMetadata": {
            "type": "object",
            "properties": {
                "lastSynced": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Field represents timestamp of the last sync for the RealmUserGroup."
                },
                "lastUser": {
                    "$ref": "#/definitions/MetadataUser"
                },
                "hasUnresolvedReferences": {
                    "type": "boolean",
                    "description": "Field represents whether this `Realm` has unresolved references."
                },
                "domain": {
                    "$ref": "#/definitions/Domain"
                },
                "readOnly": {
                    "$ref": "#/definitions/ReadOnly"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "description": "An object representing the metadata of the RealmUserGroup."
        },
        "ISILogging": {
            "type": "object",
            "properties": {
                "overrideSeverity": {
                    "type": "string",
                    "enum": [
                        "ALERT",
                        "CRIT",
                        "DEBUG",
                        "EMERG",
                        "ERR",
                        "INFO",
                        "NOTICE",
                        "WARNING"
                    ]
                },
                "sendLogsToSyslogServer": {
                    "type": "boolean"
                },
                "enableLogging": {
                    "type": "boolean"
                },
                "snmpTrap": {
                    "$ref": "#/definitions/IReference"
                },
                "sendLogsToEventViewer": {
                    "type": "boolean"
                },
                "overrideSyslogServer": {
                    "$ref": "#/definitions/IReference"
                }
            }
        },
        "Links": {
            "type": "object",
            "properties": {
                "parent": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "FMCHAStatusListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FMCHAStatus"
                    }
                }
            }
        },
        "PrefilterRuleListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PrefilterRule"
                    }
                }
            }
        },
        "OspfInterfacePolicyModelListContainer": {
            "properties": {
                "links": {
                    "$ref": "#/definitions/ILinks"
                },
                "paging": {
                    "$ref": "#/definitions/PagingContainer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OspfInterfacePolicyModel"
                    }
                }
            }
        },
        "URLGroupObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Object representing metadata properties of response object.",
                    "$ref": "#/definitions/Metadata"
                },
                "objects": {
                    "type": "array",
                    "description": "Represents URL objects in group.",
                    "items": {
                        "$ref": "#/definitions/IUrlModel"
                    }
                },
                "literals": {
                    "type": "array",
                    "description": "Represents target URL associated with URL object.",
                    "items": {
                        "$ref": "#/definitions/IUrlLiteral"
                    }
                },
                "overridable": {
                    "type": "boolean",
                    "description": "Boolean indicating whether object values can be overridden."
                },
                "name": {
                    "type": "string",
                    "description": "User assigned resource name."
                },
                "description": {
                    "type": "string",
                    "description": "User provided resource description."
                },
                "links": {
                    "description": "Object containing related links.",
                    "$ref": "#/definitions/Links"
                },
                "overrides": {
                    "description": "An object override allows you to define an alternate value for an object.",
                    "$ref": "#/definitions/IOverride"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing resource."
                },
                "type": {
                    "type": "string",
                    "description": "Type associated with resource."
                },
                "version": {
                    "type": "string",
                    "description": "Version number of the response object."
                },
                "overrideTargetId": {
                    "type": "string",
                    "description": "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
                }
            },
            "description": "A model representing URL group definition."
        }
    },
    "operations": {
        "getAllPolicyAssignment": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments",
            "modelName": "PolicyAssignmentListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createPolicyAssignment": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments",
            "modelName": "PolicyAssignment",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getPolicyAssignment": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments/{objectId}",
            "modelName": "PolicyAssignment",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updatePolicyAssignment": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments/{objectId}",
            "modelName": "PolicyAssignment",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getDeployableDevice": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices",
            "modelName": "DeployableDeviceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "groupDependency": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getDeploymentDetail": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices/{containerUUID}/deployments",
            "modelName": "DeploymentDetailListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getPendingChanges": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices/{containerUUID}/pendingchanges",
            "modelName": "PendingChangesListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createDeploymentRequest": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deploymentrequests",
            "modelName": "DeploymentRequest",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getJobHistory": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/jobhistories",
            "modelName": "JobHistoryListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createRollbackRequest": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/rollbackrequests",
            "modelName": "RollbackRequest",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDClusterDeviceContainer": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deviceclusters/ftddevicecluster",
            "modelName": "FTDClusterDeviceContainerListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDClusterDeviceContainer": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/deviceclusters/ftddevicecluster/{objectId}",
            "modelName": "FTDClusterDeviceContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllDeviceGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords",
            "modelName": "DeviceGroupListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createDeviceGroup": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords",
            "modelName": "DeviceGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getDeviceGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords/{objectId}",
            "modelName": "DeviceGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateDeviceGroup": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords/{objectId}",
            "modelName": "DeviceGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteDeviceGroup": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords/{objectId}",
            "modelName": "DeviceGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDHADeviceContainer": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs",
            "modelName": "FTDHADeviceContainerListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDHADeviceContainer": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs",
            "modelName": "FTDHADeviceContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDHAInterfaceMACAddresses": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs",
            "modelName": "FTDHAInterfaceMACAddressesListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDHAInterfaceMACAddresses": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs",
            "modelName": "FTDHAInterfaceMACAddresses",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDHAInterfaceMACAddresses": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs/{objectId}",
            "modelName": "FTDHAInterfaceMACAddresses",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDHAInterfaceMACAddresses": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs/{objectId}",
            "modelName": "FTDHAInterfaceMACAddresses",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDHAInterfaceMACAddresses": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs/{objectId}",
            "modelName": "FTDHAInterfaceMACAddresses",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDHAMonitoredInterfaces": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces",
            "modelName": "FTDHAMonitoredInterfacesListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDHAMonitoredInterfaces": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces/{objectId}",
            "modelName": "FTDHAMonitoredInterfaces",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDHAMonitoredInterfaces": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces/{objectId}",
            "modelName": "FTDHAMonitoredInterfaces",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDHADeviceContainer": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{objectId}",
            "modelName": "FTDHADeviceContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDHADeviceContainer": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{objectId}",
            "modelName": "FTDHADeviceContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDHADeviceContainer": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{objectId}",
            "modelName": "FTDHADeviceContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "createDeviceCopyConfigRequest": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/copyconfigrequests",
            "modelName": "DeviceCopyConfigRequest",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllDevice": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords",
            "modelName": "DeviceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createDevice": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords",
            "modelName": "Device",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDBridgeGroupInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces",
            "modelName": "FTDBridgeGroupInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDBridgeGroupInterface": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces",
            "modelName": "FTDBridgeGroupInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDBridgeGroupInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces/{objectId}",
            "modelName": "FTDBridgeGroupInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDBridgeGroupInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces/{objectId}",
            "modelName": "FTDBridgeGroupInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDBridgeGroupInterface": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces/{objectId}",
            "modelName": "FTDBridgeGroupInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDEtherChannelInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces",
            "modelName": "FTDEtherChannelInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDEtherChannelInterface": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces",
            "modelName": "FTDEtherChannelInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDEtherChannelInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces/{objectId}",
            "modelName": "FTDEtherChannelInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDEtherChannelInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces/{objectId}",
            "modelName": "FTDEtherChannelInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDEtherChannelInterface": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces/{objectId}",
            "modelName": "FTDEtherChannelInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFPInterfaceStatistics": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpinterfacestatistics",
            "modelName": "FPInterfaceStatisticsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllFPLogicalInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces",
            "modelName": "FPLogicalInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFPLogicalInterface": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces",
            "modelName": "FPLogicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFPLogicalInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces/{objectId}",
            "modelName": "FPLogicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFPLogicalInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces/{objectId}",
            "modelName": "FPLogicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFPLogicalInterface": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces/{objectId}",
            "modelName": "FPLogicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFPPhysicalInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces",
            "modelName": "FPPhysicalInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFPPhysicalInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces/{objectId}",
            "modelName": "FPPhysicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFPPhysicalInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces/{objectId}",
            "modelName": "FPPhysicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllInlineSet": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets",
            "modelName": "InlineSetListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createInlineSet": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets",
            "modelName": "InlineSet",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getInlineSet": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets/{objectId}",
            "modelName": "InlineSet",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateInlineSet": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets/{objectId}",
            "modelName": "InlineSet",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteInlineSet": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets/{objectId}",
            "modelName": "InlineSet",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getInterfaceEvent": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/interfaceevents",
            "modelName": "InterfaceEventListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createInterfaceEvent": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/interfaceevents",
            "modelName": "InterfaceEvent",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getCommands": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/operational/commands",
            "modelName": "CommandsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "command": {
                        "type": "string",
                        "required": true
                    },
                    "parameters": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getHealthMonitorModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/operational/metrics",
            "modelName": "HealthMonitorModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllFTDPhysicalInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces",
            "modelName": "FTDPhysicalInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDPhysicalInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces/{objectId}",
            "modelName": "FTDPhysicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDPhysicalInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces/{objectId}",
            "modelName": "FTDPhysicalInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDRedundantInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces",
            "modelName": "FTDRedundantInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDRedundantInterface": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces",
            "modelName": "FTDRedundantInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDRedundantInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces/{objectId}",
            "modelName": "FTDRedundantInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDRedundantInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces/{objectId}",
            "modelName": "FTDRedundantInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDRedundantInterface": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces/{objectId}",
            "modelName": "FTDRedundantInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllBGPIPvAddressFamilyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgp",
            "modelName": "BGPIPvAddressFamilyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getBGPIPvAddressFamilyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgp/{objectId}",
            "modelName": "BGPIPvAddressFamilyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllBGPGeneralSettingModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgpgeneralsettings",
            "modelName": "BGPGeneralSettingModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getBGPGeneralSettingModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgpgeneralsettings/{objectId}",
            "modelName": "BGPGeneralSettingModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIPv4StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes",
            "modelName": "IPv4StaticRouteModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleIPv4StaticRouteModel": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes",
            "modelName": "IPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv4StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes/{objectId}",
            "modelName": "IPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateIPv4StaticRouteModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes/{objectId}",
            "modelName": "IPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteIPv4StaticRouteModel": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes/{objectId}",
            "modelName": "IPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIPv6StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes",
            "modelName": "IPv6StaticRouteModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleIPv6StaticRouteModel": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes",
            "modelName": "IPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv6StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes/{objectId}",
            "modelName": "IPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateIPv6StaticRouteModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes/{objectId}",
            "modelName": "IPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteIPv6StaticRouteModel": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes/{objectId}",
            "modelName": "IPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllOspfInterfacePolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfinterface",
            "modelName": "OspfInterfacePolicyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getOspfInterfacePolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfinterface/{objectId}",
            "modelName": "OspfInterfacePolicyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllOspfPolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv2routes",
            "modelName": "OspfPolicyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getOspfPolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv2routes/{objectId}",
            "modelName": "OspfPolicyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllOspfv3InterfacePolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3interfaces",
            "modelName": "Ospfv3InterfacePolicyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getOspfv3InterfacePolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3interfaces/{objectId}",
            "modelName": "Ospfv3InterfacePolicyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllOspfv3PolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3routes",
            "modelName": "Ospfv3PolicyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getOspfv3PolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3routes/{objectId}",
            "modelName": "Ospfv3PolicyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllStaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/staticroutes",
            "modelName": "StaticRouteModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getStaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/staticroutes/{objectId}",
            "modelName": "StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVirtualRouterModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters",
            "modelName": "VirtualRouterModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createVirtualRouterModel": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters",
            "modelName": "VirtualRouterModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getVirtualRouterModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{objectId}",
            "modelName": "VirtualRouterModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVirtualRouterModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{objectId}",
            "modelName": "VirtualRouterModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteVirtualRouterModel": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{objectId}",
            "modelName": "VirtualRouterModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVrfBGPIPvAddressFamilyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/bgp",
            "modelName": "VrfBGPIPvAddressFamilyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVrfBGPIPvAddressFamilyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/bgp/{objectId}",
            "modelName": "VrfBGPIPvAddressFamilyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVrfIPv4StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes",
            "modelName": "VrfIPv4StaticRouteModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createVrfIPv4StaticRouteModel": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes",
            "modelName": "VrfIPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getVrfIPv4StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes/{objectId}",
            "modelName": "VrfIPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVrfIPv4StaticRouteModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes/{objectId}",
            "modelName": "VrfIPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteVrfIPv4StaticRouteModel": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes/{objectId}",
            "modelName": "VrfIPv4StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVrfIPv6StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes",
            "modelName": "VrfIPv6StaticRouteModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createVrfIPv6StaticRouteModel": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes",
            "modelName": "VrfIPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getVrfIPv6StaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes/{objectId}",
            "modelName": "VrfIPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVrfIPv6StaticRouteModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes/{objectId}",
            "modelName": "VrfIPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteVrfIPv6StaticRouteModel": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes/{objectId}",
            "modelName": "VrfIPv6StaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVrfOspfInterfacePolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfinterface",
            "modelName": "VrfOspfInterfacePolicyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVrfOspfInterfacePolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfinterface/{objectId}",
            "modelName": "VrfOspfInterfacePolicyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVrfOspfPolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfv2routes",
            "modelName": "VrfOspfPolicyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVrfOspfPolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfv2routes/{objectId}",
            "modelName": "VrfOspfPolicyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVrfStaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/staticroutes",
            "modelName": "VrfStaticRouteModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVrfStaticRouteModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/staticroutes/{objectId}",
            "modelName": "VrfStaticRouteModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "virtualrouterUUID": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDSubInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces",
            "modelName": "FTDSubInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleFTDSubInterface": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces",
            "modelName": "FTDSubInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDSubInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces/{objectId}",
            "modelName": "FTDSubInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDSubInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces/{objectId}",
            "modelName": "FTDSubInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDSubInterface": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces/{objectId}",
            "modelName": "FTDSubInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVirtualSwitch": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches",
            "modelName": "VirtualSwitchListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createVirtualSwitch": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches",
            "modelName": "VirtualSwitch",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getVirtualSwitch": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches/{objectId}",
            "modelName": "VirtualSwitch",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVirtualSwitch": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches/{objectId}",
            "modelName": "VirtualSwitch",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteVirtualSwitch": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches/{objectId}",
            "modelName": "VirtualSwitch",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDVTIInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces",
            "modelName": "FTDVTIInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleFTDVTIInterface": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces",
            "modelName": "FTDVTIInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDVTIInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces/{objectId}",
            "modelName": "FTDVTIInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDVTIInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces/{objectId}",
            "modelName": "FTDVTIInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDVTIInterface": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces/{objectId}",
            "modelName": "FTDVTIInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDVlanInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces",
            "modelName": "FTDVlanInterfaceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDVlanInterface": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces",
            "modelName": "FTDVlanInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDVlanInterface": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces/{objectId}",
            "modelName": "FTDVlanInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDVlanInterface": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces/{objectId}",
            "modelName": "FTDVlanInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDVlanInterface": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces/{objectId}",
            "modelName": "FTDVlanInterface",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getDevice": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{objectId}",
            "modelName": "Device",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateDevice": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{objectId}",
            "modelName": "Device",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteDevice": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{objectId}",
            "modelName": "Device",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getHealthAlertModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/health/alerts",
            "modelName": "HealthAlertModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getHealthMetric": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/health/metrics",
            "modelName": "HealthMetricListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllCloudEvents": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs",
            "modelName": "CloudEventsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getCloudEvents": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs/{objectId}",
            "modelName": "CloudEvents",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateCloudEvents": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs/{objectId}",
            "modelName": "CloudEvents",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllCloudRegion": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions",
            "modelName": "CloudRegionListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getCloudRegion": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions/{objectId}",
            "modelName": "CloudRegion",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateCloudRegion": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions/{objectId}",
            "modelName": "CloudRegion",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllExternalLookup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups",
            "modelName": "ExternalLookupListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createExternalLookup": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups",
            "modelName": "ExternalLookup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getExternalLookup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups/{objectId}",
            "modelName": "ExternalLookup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateExternalLookup": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups/{objectId}",
            "modelName": "ExternalLookup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteExternalLookup": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups/{objectId}",
            "modelName": "ExternalLookup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllExternalStorage": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage",
            "modelName": "ExternalStorageListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getExternalStorage": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage/{objectId}",
            "modelName": "ExternalStorage",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateExternalStorage": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage/{objectId}",
            "modelName": "ExternalStorage",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFMCHAStatus": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/fmchastatuses",
            "modelName": "FMCHAStatusListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllSecurexConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs",
            "modelName": "SecurexConfigListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSecurexConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs/{objectId}",
            "modelName": "SecurexConfig",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSecurexConfig": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs/{objectId}",
            "modelName": "SecurexConfig",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getTaskStatus": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/job/taskstatuses/{objectId}",
            "modelName": "TaskStatus",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAnyConnectCustomAttributeModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes",
            "modelName": "AnyConnectCustomAttributeModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAnyConnectCustomAttributeOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{containerUUID}/overrides",
            "modelName": "AnyConnectCustomAttributeOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAnyConnectCustomAttributeModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{objectId}",
            "modelName": "AnyConnectCustomAttributeModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAnyConnectPackageModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages",
            "modelName": "AnyConnectPackageModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAnyConnectPackageModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages/{objectId}",
            "modelName": "AnyConnectPackageModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAnyConnectProfileModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles",
            "modelName": "AnyConnectProfileModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAnyConnectProfileModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles/{objectId}",
            "modelName": "AnyConnectProfileModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAnyProtocolPortObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyprotocolportobjects",
            "modelName": "AnyProtocolPortObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAnyProtocolPortObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyprotocolportobjects/{objectId}",
            "modelName": "AnyProtocolPortObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllApplicationCategory": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationcategories",
            "modelName": "ApplicationCategoryListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getApplicationCategory": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationcategories/{objectId}",
            "modelName": "ApplicationCategory",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllApplicationFilter": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters",
            "modelName": "ApplicationFilterListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createApplicationFilter": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters",
            "modelName": "ApplicationFilter",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getApplicationFilter": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters/{objectId}",
            "modelName": "ApplicationFilter",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateApplicationFilter": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters/{objectId}",
            "modelName": "ApplicationFilter",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteApplicationFilter": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters/{objectId}",
            "modelName": "ApplicationFilter",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllApplicationProductivity": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationproductivities",
            "modelName": "ApplicationProductivityListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getApplicationProductivity": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationproductivities/{objectId}",
            "modelName": "ApplicationProductivity",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllApplicationRisk": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationrisks",
            "modelName": "ApplicationRiskListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getApplicationRisk": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationrisks/{objectId}",
            "modelName": "ApplicationRisk",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllApplication": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applications",
            "modelName": "ApplicationListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getApplication": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applications/{objectId}",
            "modelName": "Application",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllApplicationTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtags",
            "modelName": "ApplicationTagListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getApplicationTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtags/{objectId}",
            "modelName": "ApplicationTag",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllApplicationType": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtypes",
            "modelName": "ApplicationTypeListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getApplicationType": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtypes/{objectId}",
            "modelName": "ApplicationType",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAsPathList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/aspathlists",
            "modelName": "AsPathListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAsPathList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/aspathlists/{objectId}",
            "modelName": "AsPathList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVpnPKIEnrollmentModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certenrollments",
            "modelName": "VpnPKIEnrollmentModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVpnPKIEnrollmentModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certenrollments/{objectId}",
            "modelName": "VpnPKIEnrollmentModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllCertificateMapModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps",
            "modelName": "CertificateMapModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getCertificateMapModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps/{objectId}",
            "modelName": "CertificateMapModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllCommunityList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/communitylists",
            "modelName": "CommunityListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getCommunityList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/communitylists/{objectId}",
            "modelName": "CommunityList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllContinentObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/continents",
            "modelName": "ContinentObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getContinentObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/continents/{objectId}",
            "modelName": "ContinentObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllCountryObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/countries",
            "modelName": "CountryObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getCountryObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/countries/{objectId}",
            "modelName": "CountryObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllDNSServerGroupObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups",
            "modelName": "DNSServerGroupObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createDNSServerGroupObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups",
            "modelName": "DNSServerGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllDNSServerGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{containerUUID}/overrides",
            "modelName": "DNSServerGroupOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getDNSServerGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{containerUUID}/overrides/{objectId}",
            "modelName": "DNSServerGroupOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getDNSServerGroupObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{objectId}",
            "modelName": "DNSServerGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateDNSServerGroupObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{objectId}",
            "modelName": "DNSServerGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteDNSServerGroupObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{objectId}",
            "modelName": "DNSServerGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "createDynamicObjectMappingsBulk": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjectmappings",
            "modelName": "DynamicObjectMappingsBulk",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteMultipleDynamicObjectMappingsBulk": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjectmappings",
            "modelName": null,
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "getAllDynamicObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects",
            "modelName": "DynamicObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "name": {
                        "type": "string",
                        "required": false
                    },
                    "includeCount": {
                        "type": "string",
                        "required": false
                    },
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleDynamicObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects",
            "modelName": "DynamicObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "deleteMultipleDynamicObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects",
            "modelName": null,
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "getDynamicObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}",
            "modelName": "DynamicObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "includeCount": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateDynamicObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}",
            "modelName": "DynamicObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteDynamicObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}",
            "modelName": "DynamicObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getDynamicObjectMappings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}/mappings",
            "modelName": "DynamicObjectMappingsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "updateDynamicObjectMappings": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}/mappings",
            "modelName": "DynamicObjectMappings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "action": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "deleteMultipleDynamicObjectMappings": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}/mappings",
            "modelName": null,
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "getAllEndPointDeviceType": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/endpointdevicetypes",
            "modelName": "EndPointDeviceTypeListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getEndPointDeviceType": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/endpointdevicetypes/{objectId}",
            "modelName": "EndPointDeviceType",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllExpandedCommunityList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/expandedcommunitylists",
            "modelName": "ExpandedCommunityListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getExpandedCommunityList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/expandedcommunitylists/{objectId}",
            "modelName": "ExpandedCommunityList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllExtendedAccessListModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/extendedaccesslists",
            "modelName": "ExtendedAccessListModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getExtendedAccessListModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/extendedaccesslists/{objectId}",
            "modelName": "ExtendedAccessListModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFQDNObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns",
            "modelName": "FQDNObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleFQDNObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns",
            "modelName": "FQDNObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllFQDNOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{containerUUID}/overrides",
            "modelName": "FQDNOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFQDNOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{containerUUID}/overrides/{objectId}",
            "modelName": "FQDNOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFQDNObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{objectId}",
            "modelName": "FQDNObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateFQDNObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{objectId}",
            "modelName": "FQDNObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFQDNObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{objectId}",
            "modelName": "FQDNObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllGeoLocationObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations",
            "modelName": "GeoLocationObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createGeoLocationObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations",
            "modelName": "GeoLocationObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getGeoLocationObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations/{objectId}",
            "modelName": "GeoLocationObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateGeoLocationObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations/{objectId}",
            "modelName": "GeoLocationObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteGeoLocationObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations/{objectId}",
            "modelName": "GeoLocationObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllGlobalTimeZone": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/globaltimezones",
            "modelName": "GlobalTimeZoneListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getGlobalTimeZone": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/globaltimezones/{objectId}",
            "modelName": "GlobalTimeZone",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllGroupPolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/grouppolicies",
            "modelName": "GroupPolicyModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getGroupPolicyModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/grouppolicies/{objectId}",
            "modelName": "GroupPolicyModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllHostObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts",
            "modelName": "HostObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleHostObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts",
            "modelName": "HostObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllHostOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{containerUUID}/overrides",
            "modelName": "HostOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getHostOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{containerUUID}/overrides/{objectId}",
            "modelName": "HostOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getHostObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}",
            "modelName": "HostObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateHostObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}",
            "modelName": "HostObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteHostObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}",
            "modelName": "HostObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllHostScanPackageObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hostscanpackages",
            "modelName": "HostScanPackageObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getHostScanPackageObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hostscanpackages/{objectId}",
            "modelName": "HostScanPackageObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllICMPV4Object": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects",
            "modelName": "ICMPV4ObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleICMPV4Object": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects",
            "modelName": "ICMPV4Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllICMPV4ObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{containerUUID}/overrides",
            "modelName": "ICMPV4ObjectOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getICMPV4ObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{containerUUID}/overrides/{objectId}",
            "modelName": "ICMPV4ObjectOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getICMPV4Object": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{objectId}",
            "modelName": "ICMPV4Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateICMPV4Object": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{objectId}",
            "modelName": "ICMPV4Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteICMPV4Object": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{objectId}",
            "modelName": "ICMPV4Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllICMPV6Object": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects",
            "modelName": "ICMPV6ObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleICMPV6Object": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects",
            "modelName": "ICMPV6Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllICMPV6ObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{containerUUID}/overrides",
            "modelName": "ICMPV6ObjectOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getICMPV6ObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{containerUUID}/overrides/{objectId}",
            "modelName": "ICMPV6ObjectOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getICMPV6Object": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{objectId}",
            "modelName": "ICMPV6Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateICMPV6Object": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{objectId}",
            "modelName": "ICMPV6Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteICMPV6Object": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{objectId}",
            "modelName": "ICMPV6Object",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIKEv1IPsecProposal": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals",
            "modelName": "IKEv1IPsecProposalListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createIKEv1IPsecProposal": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals",
            "modelName": "IKEv1IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getIKEv1IPsecProposal": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals/{objectId}",
            "modelName": "IKEv1IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateIKEv1IPsecProposal": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals/{objectId}",
            "modelName": "IKEv1IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteIKEv1IPsecProposal": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals/{objectId}",
            "modelName": "IKEv1IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIkev1PolicyObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies",
            "modelName": "Ikev1PolicyObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createIkev1PolicyObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies",
            "modelName": "Ikev1PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getIkev1PolicyObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies/{objectId}",
            "modelName": "Ikev1PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateIkev1PolicyObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies/{objectId}",
            "modelName": "Ikev1PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteIkev1PolicyObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies/{objectId}",
            "modelName": "Ikev1PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIKEv2IPsecProposal": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals",
            "modelName": "IKEv2IPsecProposalListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createIKEv2IPsecProposal": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals",
            "modelName": "IKEv2IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getIKEv2IPsecProposal": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals/{objectId}",
            "modelName": "IKEv2IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateIKEv2IPsecProposal": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals/{objectId}",
            "modelName": "IKEv2IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteIKEv2IPsecProposal": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals/{objectId}",
            "modelName": "IKEv2IPsecProposal",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIkev2PolicyObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies",
            "modelName": "Ikev2PolicyObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createIkev2PolicyObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies",
            "modelName": "Ikev2PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getIkev2PolicyObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies/{objectId}",
            "modelName": "Ikev2PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateIkev2PolicyObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies/{objectId}",
            "modelName": "Ikev2PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteIkev2PolicyObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies/{objectId}",
            "modelName": "Ikev2PolicyObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllInterfaceGroupObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups",
            "modelName": "InterfaceGroupObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleInterfaceGroupObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups",
            "modelName": "InterfaceGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getInterfaceGroupObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups/{objectId}",
            "modelName": "InterfaceGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "groupByDevice": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateInterfaceGroupObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups/{objectId}",
            "modelName": "InterfaceGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteInterfaceGroupObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups/{objectId}",
            "modelName": "InterfaceGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllInterfaceObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfaceobjects",
            "modelName": "InterfaceObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getInterfaceObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfaceobjects/{objectId}",
            "modelName": "InterfaceObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSnort3IntrusionRuleGroupsObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups",
            "modelName": "Snort3IntrusionRuleGroupsObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleSnort3IntrusionRuleGroupsObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups",
            "modelName": "Snort3IntrusionRuleGroupsObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSnort3IntrusionRuleGroupsObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups/{objectId}",
            "modelName": "Snort3IntrusionRuleGroupsObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSnort3IntrusionRuleGroupsObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups/{objectId}",
            "modelName": "Snort3IntrusionRuleGroupsObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteSnort3IntrusionRuleGroupsObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups/{objectId}",
            "modelName": "Snort3IntrusionRuleGroupsObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "cascadeDeleteOrphanedRules": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAllSnort3IPSRulesObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
            "modelName": "Snort3IPSRulesObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "sort": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleSnort3IPSRulesObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
            "modelName": "Snort3IPSRulesObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "updateMultipleSnort3IPSRulesObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
            "modelName": "Snort3IPSRulesObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "deleteMultipleSnort3IPSRulesObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
            "modelName": null,
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    },
                    "filter": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "getSnort3IPSRulesObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules/{objectId}",
            "modelName": "Snort3IPSRulesObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSnort3IPSRulesObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules/{objectId}",
            "modelName": "Snort3IPSRulesObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteSnort3IPSRulesObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules/{objectId}",
            "modelName": "Snort3IPSRulesObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "createSnort3IPSRulesFileUpload": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulesupload",
            "modelName": null,
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIPv4AddressPool": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools",
            "modelName": "IPv4AddressPoolListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv4AddressPoolOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools/{containerUUID}/overrides",
            "modelName": "IPv4AddressPoolOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv4AddressPool": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools/{objectId}",
            "modelName": "IPv4AddressPool",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAllIPv4PrefixList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4prefixlists",
            "modelName": "IPv4PrefixListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv4PrefixList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4prefixlists/{objectId}",
            "modelName": "IPv4PrefixList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIPv6AddressPool": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools",
            "modelName": "IPv6AddressPoolListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv6AddressPoolOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools/{containerUUID}/overrides",
            "modelName": "IPv6AddressPoolOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv6AddressPool": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools/{objectId}",
            "modelName": "IPv6AddressPool",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAllIPv6PrefixList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6prefixlists",
            "modelName": "IPv6PrefixListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIPv6PrefixList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6prefixlists/{objectId}",
            "modelName": "IPv6PrefixList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllISESecurityGroupTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/isesecuritygrouptags",
            "modelName": "ISESecurityGroupTagListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getISESecurityGroupTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/isesecuritygrouptags/{objectId}",
            "modelName": "ISESecurityGroupTag",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllKeyChainObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains",
            "modelName": "KeyChainObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleKeyChainObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains",
            "modelName": "KeyChainObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllKeyChainObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{containerUUID}/overrides",
            "modelName": "KeyChainObjectOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getKeyChainObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{containerUUID}/overrides/{objectId}",
            "modelName": "KeyChainObjectOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getKeyChainObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{objectId}",
            "modelName": "KeyChainObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateKeyChainObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{objectId}",
            "modelName": "KeyChainObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteKeyChainObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{objectId}",
            "modelName": "KeyChainObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllLocalRealmUser": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers",
            "modelName": "LocalRealmUserListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleLocalRealmUser": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers",
            "modelName": "LocalRealmUser",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getLocalRealmUser": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers/{objectId}",
            "modelName": "LocalRealmUser",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateLocalRealmUser": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers/{objectId}",
            "modelName": "LocalRealmUser",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteLocalRealmUser": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers/{objectId}",
            "modelName": "LocalRealmUser",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getNetworkAddress": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkaddresses",
            "modelName": "NetworkAddressListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllNetworkGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups",
            "modelName": "NetworkGroupListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleNetworkGroup": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups",
            "modelName": "NetworkGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllNetworkGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{containerUUID}/overrides",
            "modelName": "NetworkGroupOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getNetworkGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{containerUUID}/overrides/{objectId}",
            "modelName": "NetworkGroupOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getNetworkGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{objectId}",
            "modelName": "NetworkGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateNetworkGroup": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{objectId}",
            "modelName": "NetworkGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteNetworkGroup": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{objectId}",
            "modelName": "NetworkGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllNetworkObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks",
            "modelName": "NetworkObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleNetworkObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks",
            "modelName": "NetworkObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllNetworkOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{containerUUID}/overrides",
            "modelName": "NetworkOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getNetworkObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{objectId}",
            "modelName": "NetworkObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateNetworkObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{objectId}",
            "modelName": "NetworkObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteNetworkObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{objectId}",
            "modelName": "NetworkObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getObjectUsage": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/operational/usage",
            "modelName": "ObjectUsageListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllPolicyList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/policylists",
            "modelName": "PolicyListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getPolicyList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/policylists/{objectId}",
            "modelName": "PolicyList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllPortObjectGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups",
            "modelName": "PortObjectGroupListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultiplePortObjectGroup": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups",
            "modelName": "PortObjectGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllPortObjectGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{containerUUID}/overrides",
            "modelName": "PortObjectGroupOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getPortObjectGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{containerUUID}/overrides/{objectId}",
            "modelName": "PortObjectGroupOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getPortObjectGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{objectId}",
            "modelName": "PortObjectGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updatePortObjectGroup": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{objectId}",
            "modelName": "PortObjectGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deletePortObjectGroup": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{objectId}",
            "modelName": "PortObjectGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getPortObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ports",
            "modelName": "PortObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllProtocolPortObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects",
            "modelName": "ProtocolPortObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleProtocolPortObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects",
            "modelName": "ProtocolPortObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllProtocolPortObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{containerUUID}/overrides",
            "modelName": "ProtocolPortObjectOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getProtocolPortObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{containerUUID}/overrides/{objectId}",
            "modelName": "ProtocolPortObjectOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getProtocolPortObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{objectId}",
            "modelName": "ProtocolPortObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateProtocolPortObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{objectId}",
            "modelName": "ProtocolPortObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteProtocolPortObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{objectId}",
            "modelName": "ProtocolPortObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRadiusServerGroupModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/radiusservergroups",
            "modelName": "RadiusServerGroupModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRadiusServerGroupModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/radiusservergroups/{objectId}",
            "modelName": "RadiusServerGroupModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRangeObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges",
            "modelName": "RangeObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleRangeObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges",
            "modelName": "RangeObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllRangeOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{containerUUID}/overrides",
            "modelName": "RangeOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRangeOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{containerUUID}/overrides/{objectId}",
            "modelName": "RangeOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getRangeObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{objectId}",
            "modelName": "RangeObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateRangeObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{objectId}",
            "modelName": "RangeObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteRangeObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{objectId}",
            "modelName": "RangeObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRealm": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms",
            "modelName": "RealmListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createRealm": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms",
            "modelName": "Realm",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getRealm": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms/{objectId}",
            "modelName": "Realm",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateRealm": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms/{objectId}",
            "modelName": "Realm",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteRealm": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms/{objectId}",
            "modelName": "Realm",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRealmUserGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusergroups",
            "modelName": "RealmUserGroupListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRealmUserGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusergroups/{objectId}",
            "modelName": "RealmUserGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRealmUser": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusers",
            "modelName": "RealmUserListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRealmUser": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusers/{objectId}",
            "modelName": "RealmUser",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRouteMap": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/routemaps",
            "modelName": "RouteMapListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRouteMap": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/routemaps/{objectId}",
            "modelName": "RouteMap",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSecurityGroupTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securitygrouptags",
            "modelName": "SecurityGroupTagListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSecurityGroupTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securitygrouptags/{objectId}",
            "modelName": "SecurityGroupTag",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSecurityZoneObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones",
            "modelName": "SecurityZoneObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleSecurityZoneObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones",
            "modelName": "SecurityZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSecurityZoneObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones/{objectId}",
            "modelName": "SecurityZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "groupByDevice": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateSecurityZoneObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones/{objectId}",
            "modelName": "SecurityZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteSecurityZoneObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones/{objectId}",
            "modelName": "SecurityZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSIDNSFeed": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnsfeeds",
            "modelName": "SIDNSFeedListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSIDNSFeed": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnsfeeds/{objectId}",
            "modelName": "SIDNSFeed",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSIDNSList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnslists",
            "modelName": "SIDNSListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSIDNSList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnslists/{objectId}",
            "modelName": "SIDNSList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSINetworkFeed": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworkfeeds",
            "modelName": "SINetworkFeedListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSINetworkFeed": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworkfeeds/{objectId}",
            "modelName": "SINetworkFeed",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSINetworkList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworklists",
            "modelName": "SINetworkListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSINetworkList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworklists/{objectId}",
            "modelName": "SINetworkList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSinkhole": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinkholes",
            "modelName": "SinkholeListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSinkhole": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinkholes/{objectId}",
            "modelName": "Sinkhole",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSIURLFeed": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurlfeeds",
            "modelName": "SIURLFeedListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSIURLFeed": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurlfeeds/{objectId}",
            "modelName": "SIURLFeed",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSIURLList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurllists",
            "modelName": "SIURLListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSIURLList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurllists/{objectId}",
            "modelName": "SIURLList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSLAMonitorObjectModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors",
            "modelName": "SLAMonitorObjectModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleSLAMonitorObjectModel": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors",
            "modelName": "SLAMonitorObjectModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSLAMonitorObjectModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors/{objectId}",
            "modelName": "SLAMonitorObjectModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSLAMonitorObjectModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors/{objectId}",
            "modelName": "SLAMonitorObjectModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteSLAMonitorObjectModel": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors/{objectId}",
            "modelName": "SLAMonitorObjectModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSSOServer": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers",
            "modelName": "SSOServerListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSSOServerOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers/{containerUUID}/overrides",
            "modelName": "SSOServerOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSSOServer": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers/{objectId}",
            "modelName": "SSOServer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAllStandardACL": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardaccesslists",
            "modelName": "StandardACLListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getStandardACL": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardaccesslists/{objectId}",
            "modelName": "StandardACL",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllStandardCommunityList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardcommunitylists",
            "modelName": "StandardCommunityListListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getStandardCommunityList": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardcommunitylists/{objectId}",
            "modelName": "StandardCommunityList",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllTimeRange": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges",
            "modelName": "TimeRangeListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleTimeRange": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges",
            "modelName": "TimeRange",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getTimeRange": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges/{objectId}",
            "modelName": "TimeRange",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateTimeRange": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges/{objectId}",
            "modelName": "TimeRange",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteTimeRange": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges/{objectId}",
            "modelName": "TimeRange",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllTimeZoneObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects",
            "modelName": "TimeZoneObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleTimeZoneObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects",
            "modelName": "TimeZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getTimeZoneObjectOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{containerUUID}/overrides",
            "modelName": "TimeZoneObjectOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getTimeZoneObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{objectId}",
            "modelName": "TimeZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateTimeZoneObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{objectId}",
            "modelName": "TimeZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteTimeZoneObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{objectId}",
            "modelName": "TimeZoneObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAllTunnelTags": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags",
            "modelName": "TunnelTagsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleTunnelTags": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags",
            "modelName": "TunnelTags",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getTunnelTags": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId}",
            "modelName": "TunnelTags",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateTunnelTags": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId}",
            "modelName": "TunnelTags",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteTunnelTags": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId}",
            "modelName": "TunnelTags",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllURLCategory": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlcategories",
            "modelName": "URLCategoryListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getURLCategory": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlcategories/{objectId}",
            "modelName": "URLCategory",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllURLGroupObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups",
            "modelName": "URLGroupObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleURLGroupObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups",
            "modelName": "URLGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllUrlGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{containerUUID}/overrides",
            "modelName": "UrlGroupOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getUrlGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{containerUUID}/overrides/{objectId}",
            "modelName": "UrlGroupOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getURLGroupObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{objectId}",
            "modelName": "URLGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateURLGroupObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{objectId}",
            "modelName": "URLGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteURLGroupObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{objectId}",
            "modelName": "URLGroupObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllURLObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls",
            "modelName": "URLObjectListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleURLObject": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls",
            "modelName": "URLObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllUrlOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{containerUUID}/overrides",
            "modelName": "UrlOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getUrlOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{containerUUID}/overrides/{objectId}",
            "modelName": "UrlOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getURLObject": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{objectId}",
            "modelName": "URLObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateURLObject": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{objectId}",
            "modelName": "URLObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteURLObject": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{objectId}",
            "modelName": "URLObject",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVariableSet": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/variablesets",
            "modelName": "VariableSetListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVariableSet": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/variablesets/{objectId}",
            "modelName": "VariableSet",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVlanTagGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags",
            "modelName": "VlanTagGroupListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleVlanTagGroup": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags",
            "modelName": "VlanTagGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllVlanTagGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{containerUUID}/overrides",
            "modelName": "VlanTagGroupOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVlanTagGroupOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{containerUUID}/overrides/{objectId}",
            "modelName": "VlanTagGroupOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getVlanTagGroup": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{objectId}",
            "modelName": "VlanTagGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateVlanTagGroup": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{objectId}",
            "modelName": "VlanTagGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteVlanTagGroup": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{objectId}",
            "modelName": "VlanTagGroup",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVlanTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags",
            "modelName": "VlanTagListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleVlanTag": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags",
            "modelName": "VlanTag",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllVlanOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{containerUUID}/overrides",
            "modelName": "VlanOverrideListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVlanOverride": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{containerUUID}/overrides/{objectId}",
            "modelName": "VlanOverride",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getVlanTag": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{objectId}",
            "modelName": "VlanTag",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "overrideTargetId": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateVlanTag": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{objectId}",
            "modelName": "VlanTag",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteVlanTag": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{objectId}",
            "modelName": "VlanTag",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAccessPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies",
            "modelName": "AccessPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "name": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createAccessPolicy": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies",
            "modelName": "AccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAccessRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
            "modelName": "AccessRuleListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleAccessRule": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
            "modelName": "AccessRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    },
                    "insertAfter": {
                        "type": "string",
                        "required": false
                    },
                    "insertBefore": {
                        "type": "string",
                        "required": false
                    },
                    "section": {
                        "type": "string",
                        "required": false
                    },
                    "category": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateMultipleAccessRule": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
            "modelName": "AccessRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "deleteMultipleAccessRule": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
            "modelName": null,
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    },
                    "filter": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "getAccessRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules/{objectId}",
            "modelName": "AccessRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateAccessRule": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules/{objectId}",
            "modelName": "AccessRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteAccessRule": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules/{objectId}",
            "modelName": "AccessRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAccessPolicyCategory": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories",
            "modelName": "AccessPolicyCategoryListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createAccessPolicyCategory": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories",
            "modelName": "AccessPolicyCategory",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "section": {
                        "type": "string",
                        "required": false
                    },
                    "aboveCategory": {
                        "type": "string",
                        "required": false
                    },
                    "insertBefore": {
                        "type": "string",
                        "required": false
                    },
                    "insertAfter": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAccessPolicyCategory": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories/{objectId}",
            "modelName": "AccessPolicyCategory",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateAccessPolicyCategory": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories/{objectId}",
            "modelName": "AccessPolicyCategory",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteAccessPolicyCategory": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories/{objectId}",
            "modelName": "AccessPolicyCategory",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllDefaultAction": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions",
            "modelName": "DefaultActionListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getDefaultAction": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions/{objectId}",
            "modelName": "DefaultAction",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateDefaultAction": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions/{objectId}",
            "modelName": "DefaultAction",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAccessPolicyInheritanceSetting": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings",
            "modelName": "AccessPolicyInheritanceSettingListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAccessPolicyInheritanceSetting": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings/{objectId}",
            "modelName": "AccessPolicyInheritanceSetting",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateAccessPolicyInheritanceSetting": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings/{objectId}",
            "modelName": "AccessPolicyInheritanceSetting",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAccessPolicyLoggingSettingModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings",
            "modelName": "AccessPolicyLoggingSettingModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAccessPolicyLoggingSettingModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings/{objectId}",
            "modelName": "AccessPolicyLoggingSettingModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateAccessPolicyLoggingSettingModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings/{objectId}",
            "modelName": "AccessPolicyLoggingSettingModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getHitCount": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/operational/hitcounts",
            "modelName": "HitCountListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "updateHitCount": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/operational/hitcounts",
            "modelName": "HitCount",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "deleteHitCount": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/operational/hitcounts",
            "modelName": "HitCount",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "getAllAccessPolicySecurityIntelligencePolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/securityintelligencepolicies",
            "modelName": "AccessPolicySecurityIntelligencePolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAccessPolicySecurityIntelligencePolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/securityintelligencepolicies/{objectId}",
            "modelName": "AccessPolicySecurityIntelligencePolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAccessPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{objectId}",
            "modelName": "AccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateAccessPolicy": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{objectId}",
            "modelName": "AccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteAccessPolicy": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{objectId}",
            "modelName": "AccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "ignoreWarning": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAllDNSPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies",
            "modelName": "DNSPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllowDNSRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{containerUUID}/allowdnsrules",
            "modelName": "AllowDNSRuleListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getBlockDNSRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{containerUUID}/blockdnsrules",
            "modelName": "BlockDNSRuleListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getDNSPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{objectId}",
            "modelName": "DNSPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllDynamicAccessPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies",
            "modelName": "DynamicAccessPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createDynamicAccessPolicy": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies",
            "modelName": "DynamicAccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getDynamicAccessPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies/{objectId}",
            "modelName": "DynamicAccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateDynamicAccessPolicy": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies/{objectId}",
            "modelName": "DynamicAccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteDynamicAccessPolicy": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies/{objectId}",
            "modelName": "DynamicAccessPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFilePolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/filepolicies",
            "modelName": "FilePolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFilePolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/filepolicies/{objectId}",
            "modelName": "FilePolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDNatPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies",
            "modelName": "FTDNatPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDNatPolicy": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies",
            "modelName": "FTDNatPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDAutoNatRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules",
            "modelName": "FTDAutoNatRuleListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleFTDAutoNatRule": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules",
            "modelName": "FTDAutoNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    },
                    "section": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getFTDAutoNatRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules/{objectId}",
            "modelName": "FTDAutoNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "section": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateFTDAutoNatRule": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules/{objectId}",
            "modelName": "FTDAutoNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "section": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "deleteFTDAutoNatRule": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules/{objectId}",
            "modelName": "FTDAutoNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDManualNatRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules",
            "modelName": "FTDManualNatRuleListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultipleFTDManualNatRule": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules",
            "modelName": "FTDManualNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    },
                    "section": {
                        "type": "string",
                        "required": false
                    },
                    "targetIndex": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getFTDManualNatRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules/{objectId}",
            "modelName": "FTDManualNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "section": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateFTDManualNatRule": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules/{objectId}",
            "modelName": "FTDManualNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "section": {
                        "type": "string",
                        "required": false
                    },
                    "targetIndex": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "deleteFTDManualNatRule": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules/{objectId}",
            "modelName": "FTDManualNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDNatRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/natrules",
            "modelName": "FTDNatRuleListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDNatRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/natrules/{objectId}",
            "modelName": "FTDNatRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "section": {
                        "type": "string",
                        "required": false
                    },
                    "filter": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getFTDNatPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{objectId}",
            "modelName": "FTDNatPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDNatPolicy": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{objectId}",
            "modelName": "FTDNatPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDNatPolicy": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{objectId}",
            "modelName": "FTDNatPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDS2SVpnModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns",
            "modelName": "FTDS2SVpnModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createFTDS2SVpnModel": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns",
            "modelName": "FTDS2SVpnModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVpnAdvancedSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings",
            "modelName": "VpnAdvancedSettingsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVpnAdvancedSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings/{objectId}",
            "modelName": "VpnAdvancedSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVpnAdvancedSettings": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings/{objectId}",
            "modelName": "VpnAdvancedSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVpnEndpoint": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints",
            "modelName": "VpnEndpointListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createVpnEndpoint": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints",
            "modelName": "VpnEndpoint",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getVpnEndpoint": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints/{objectId}",
            "modelName": "VpnEndpoint",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVpnEndpoint": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints/{objectId}",
            "modelName": "VpnEndpoint",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteVpnEndpoint": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints/{objectId}",
            "modelName": "VpnEndpoint",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVpnIkeSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings",
            "modelName": "VpnIkeSettingsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVpnIkeSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings/{objectId}",
            "modelName": "VpnIkeSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVpnIkeSettings": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings/{objectId}",
            "modelName": "VpnIkeSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllVpnIPSecSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings",
            "modelName": "VpnIPSecSettingsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getVpnIPSecSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings/{objectId}",
            "modelName": "VpnIPSecSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateVpnIPSecSettings": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings/{objectId}",
            "modelName": "VpnIPSecSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDS2SVpnModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{objectId}",
            "modelName": "FTDS2SVpnModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateFTDS2SVpnModel": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{objectId}",
            "modelName": "FTDS2SVpnModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteFTDS2SVpnModel": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{objectId}",
            "modelName": "FTDS2SVpnModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIdentityPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/identitypolicies",
            "modelName": "IdentityPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getIdentityPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/identitypolicies/{objectId}",
            "modelName": "IdentityPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllIntrusionPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies",
            "modelName": "IntrusionPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createIntrusionPolicy": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies",
            "modelName": "IntrusionPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSnort3IntrusionRuleGroups": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups",
            "modelName": "Snort3IntrusionRuleGroupsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "includeCount": {
                        "type": "string",
                        "required": false
                    },
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "updateMultipleSnort3IntrusionRuleGroups": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups",
            "modelName": "Snort3IntrusionRuleGroups",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "getSnort3IntrusionRuleGroups": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups/{objectId}",
            "modelName": "Snort3IntrusionRuleGroups",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSnort3IntrusionRuleGroups": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups/{objectId}",
            "modelName": "Snort3IntrusionRuleGroups",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "removeRuleOverrides": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "getAllSnort3IPSRules": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules",
            "modelName": "Snort3IPSRulesListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": false
                    },
                    "sort": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "updateMultipleSnort3IPSRules": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules",
            "modelName": "Snort3IPSRules",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "getSnort3IPSRules": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules/{objectId}",
            "modelName": "Snort3IPSRules",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSnort3IPSRules": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules/{objectId}",
            "modelName": "Snort3IPSRules",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getIntrusionPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{objectId}",
            "modelName": "IntrusionPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "includeCount": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateIntrusionPolicy": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{objectId}",
            "modelName": "IntrusionPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "replicateInspectionMode": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "deleteIntrusionPolicy": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{objectId}",
            "modelName": "IntrusionPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSnort3NetworkAnalysisPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies",
            "modelName": "Snort3NetworkAnalysisPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createSnort3NetworkAnalysisPolicy": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies",
            "modelName": "Snort3NetworkAnalysisPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getInspectorConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectorconfigs",
            "modelName": "InspectorConfigListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "inspectors": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getInspectorOverrideConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectoroverrideconfigs",
            "modelName": "InspectorOverrideConfigListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "inspectors": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "updateInspectorOverrideConfig": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectoroverrideconfigs",
            "modelName": "InspectorOverrideConfig",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getSnort3NetworkAnalysisPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{objectId}",
            "modelName": "Snort3NetworkAnalysisPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSnort3NetworkAnalysisPolicy": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{objectId}",
            "modelName": "Snort3NetworkAnalysisPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "replicateInspectionMode": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "deleteSnort3NetworkAnalysisPolicy": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{objectId}",
            "modelName": "Snort3NetworkAnalysisPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllPrefilterPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies",
            "modelName": "PrefilterPolicyListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createPrefilterPolicy": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies",
            "modelName": "PrefilterPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllPrefilterDefaultAction": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions",
            "modelName": "PrefilterDefaultActionListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getPrefilterDefaultAction": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions/{objectId}",
            "modelName": "PrefilterDefaultAction",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updatePrefilterDefaultAction": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions/{objectId}",
            "modelName": "PrefilterDefaultAction",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getPrefilterHitCount": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/operational/hitcounts",
            "modelName": "PrefilterHitCountListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "updatePrefilterHitCount": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/operational/hitcounts",
            "modelName": "PrefilterHitCount",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "deletePrefilterHitCount": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/operational/hitcounts",
            "modelName": "PrefilterHitCount",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "getAllPrefilterRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
            "modelName": "PrefilterRuleListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "ruleType": {
                        "type": "string",
                        "required": false
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createMultiplePrefilterRule": {
            "method": "post",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
            "modelName": "PrefilterRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": false
                    },
                    "insertAfter": {
                        "type": "string",
                        "required": false
                    },
                    "insertBefore": {
                        "type": "string",
                        "required": false
                    }
                }
            }
        },
        "updateMultiplePrefilterRule": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
            "modelName": "PrefilterRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    }
                }
            }
        },
        "deleteMultiplePrefilterRule": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
            "modelName": null,
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "bulk": {
                        "type": "boolean",
                        "required": true
                    },
                    "filter": {
                        "type": "string",
                        "required": true
                    }
                }
            }
        },
        "getPrefilterRule": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules/{objectId}",
            "modelName": "PrefilterRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updatePrefilterRule": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules/{objectId}",
            "modelName": "PrefilterRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deletePrefilterRule": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules/{objectId}",
            "modelName": "PrefilterRule",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getPrefilterPolicy": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{objectId}",
            "modelName": "PrefilterPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updatePrefilterPolicy": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{objectId}",
            "modelName": "PrefilterPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deletePrefilterPolicy": {
            "method": "delete",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{objectId}",
            "modelName": "PrefilterPolicy",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDRAVpnModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns",
            "modelName": "FTDRAVpnModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllFTDRAVpnAddressAssignmentSetting": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/addressassignmentsettings",
            "modelName": "FTDRAVpnAddressAssignmentSettingListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDRAVpnAddressAssignmentSetting": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/addressassignmentsettings/{objectId}",
            "modelName": "FTDRAVpnAddressAssignmentSetting",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDRAVpnCertificateMapSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/certificatemapsettings",
            "modelName": "FTDRAVpnCertificateMapSettingsListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDRAVpnCertificateMapSettings": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/certificatemapsettings/{objectId}",
            "modelName": "FTDRAVpnCertificateMapSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllFTDRAVpnConnectionProfileModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/connectionprofiles",
            "modelName": "FTDRAVpnConnectionProfileModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getFTDRAVpnConnectionProfileModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/connectionprofiles/{objectId}",
            "modelName": "FTDRAVpnConnectionProfileModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getFTDRAVpnModel": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{objectId}",
            "modelName": "FTDRAVpnModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSNMPConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/snmpalerts",
            "modelName": "SNMPConfigListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSNMPConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/snmpalerts/{objectId}",
            "modelName": "SNMPConfig",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllSyslogConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/syslogalerts",
            "modelName": "SyslogConfigListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSyslogConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/syslogalerts/{objectId}",
            "modelName": "SyslogConfig",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getGlobalSearch": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/search/global",
            "modelName": "GlobalSearchListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getGlobalObjectSearch": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/search/object",
            "modelName": "GlobalObjectSearchListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getGlobalPolicySearch": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/search/policy",
            "modelName": "GlobalPolicySearchListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "filter": {
                        "type": "string",
                        "required": true
                    },
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllAuthRoles": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/users/authroles",
            "modelName": "AuthRolesListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllSSOConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs",
            "modelName": "SSOConfigListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getSSOConfig": {
            "method": "get",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs/{objectId}",
            "modelName": "SSOConfig",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateSSOConfig": {
            "method": "put",
            "url": "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs/{objectId}",
            "modelName": "SSOConfig",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllAuditModel": {
            "method": "get",
            "url": "/api/fmc_platform/v1/domain/{domainUUID}/audit/auditrecords",
            "modelName": "AuditModelListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAuditModel": {
            "method": "get",
            "url": "/api/fmc_platform/v1/domain/{domainUUID}/audit/auditrecords/{objectId}",
            "modelName": "AuditModel",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllDomain": {
            "method": "get",
            "url": "/api/fmc_platform/v1/info/domain",
            "modelName": "DomainListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {},
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getDomain": {
            "method": "get",
            "url": "/api/fmc_platform/v1/info/domain/{domainUUID}/{objectId}",
            "modelName": "Domain",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllServerVersion": {
            "method": "get",
            "url": "/api/fmc_platform/v1/info/serverversion",
            "modelName": "ServerVersionListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {},
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getServerVersion": {
            "method": "get",
            "url": "/api/fmc_platform/v1/info/serverversion/{objectId}",
            "modelName": "ServerVersion",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "createCancelUpgrade": {
            "method": "post",
            "url": "/api/fmc_platform/v1/updates/cancelupgrades",
            "modelName": "CancelUpgrade",
            "returnMultipleItems": false,
            "parameters": {
                "path": {},
                "query": {}
            }
        },
        "createRetryUpgrade": {
            "method": "post",
            "url": "/api/fmc_platform/v1/updates/retryupgrades",
            "modelName": "RetryUpgrade",
            "returnMultipleItems": false,
            "parameters": {
                "path": {},
                "query": {}
            }
        },
        "getAllUpgradePackage": {
            "method": "get",
            "url": "/api/fmc_platform/v1/updates/upgradepackages",
            "modelName": "UpgradePackageListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {},
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getAllApplicableDevice": {
            "method": "get",
            "url": "/api/fmc_platform/v1/updates/upgradepackages/{containerUUID}/applicabledevices",
            "modelName": "ApplicableDeviceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "containerUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getUpgradePackage": {
            "method": "get",
            "url": "/api/fmc_platform/v1/updates/upgradepackages/{objectId}",
            "modelName": "UpgradePackage",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteUpgradePackage": {
            "method": "delete",
            "url": "/api/fmc_platform/v1/updates/upgradepackages/{objectId}",
            "modelName": "UpgradePackage",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "createUpgrade": {
            "method": "post",
            "url": "/api/fmc_platform/v1/updates/upgrades",
            "modelName": "Upgrade",
            "returnMultipleItems": false,
            "parameters": {
                "path": {},
                "query": {}
            }
        },
        "createRESTTaxiiCollection": {
            "method": "post",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/taxiiconfig/collections",
            "modelName": "RESTTaxiiCollection",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "createRESTDiscoveryInfo": {
            "method": "post",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/taxiiconfig/discoveryinfo",
            "modelName": "RESTDiscoveryInfo",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRESTElement": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/element",
            "modelName": "RESTElementListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRESTElement": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/element/{objectId}",
            "modelName": "RESTElement",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRESTIncident": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident",
            "modelName": "RESTIncidentListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRESTIncident": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident/{objectId}",
            "modelName": "RESTIncident",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateRESTIncident": {
            "method": "put",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident/{objectId}",
            "modelName": "RESTIncident",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteRESTIncident": {
            "method": "delete",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident/{objectId}",
            "modelName": "RESTIncident",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRESTIndicator": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator",
            "modelName": "RESTIndicatorListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRESTIndicator": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator/{objectId}",
            "modelName": "RESTIndicator",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateRESTIndicator": {
            "method": "put",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator/{objectId}",
            "modelName": "RESTIndicator",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRESTObservable": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable",
            "modelName": "RESTObservableListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "getRESTObservable": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable/{objectId}",
            "modelName": "RESTObservable",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateRESTObservable": {
            "method": "put",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable/{objectId}",
            "modelName": "RESTObservable",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getRESTSettings": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/settings/{objectId}",
            "modelName": "RESTSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateRESTSettings": {
            "method": "put",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/settings/{objectId}",
            "modelName": "RESTSettings",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getAllRESTTidSource": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source",
            "modelName": "RESTTidSourceListContainer",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {
                    "offset": {
                        "type": "integer",
                        "required": false
                    },
                    "limit": {
                        "type": "integer",
                        "required": false
                    },
                    "expanded": {
                        "type": "boolean",
                        "required": false
                    }
                }
            }
        },
        "createRESTTidSource": {
            "method": "post",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source",
            "modelName": "RESTTidSource",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "getRESTTidSource": {
            "method": "get",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source/{objectId}",
            "modelName": "RESTTidSource",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "updateRESTTidSource": {
            "method": "put",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source/{objectId}",
            "modelName": "RESTTidSource",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        },
        "deleteRESTTidSource": {
            "method": "delete",
            "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source/{objectId}",
            "modelName": "RESTTidSource",
            "returnMultipleItems": false,
            "parameters": {
                "path": {
                    "objectId": {
                        "type": "string",
                        "required": true
                    },
                    "domainUUID": {
                        "type": "string",
                        "required": true
                    }
                },
                "query": {}
            }
        }
    },
    "model_operations": {
        "PolicyAssignmentListContainer": {
            "getAllPolicyAssignment": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments",
                "modelName": "PolicyAssignmentListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PolicyAssignment": {
            "createPolicyAssignment": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments",
                "modelName": "PolicyAssignment",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getPolicyAssignment": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments/{objectId}",
                "modelName": "PolicyAssignment",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updatePolicyAssignment": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments/{objectId}",
                "modelName": "PolicyAssignment",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DeployableDeviceListContainer": {
            "getDeployableDevice": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices",
                "modelName": "DeployableDeviceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "groupDependency": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DeploymentDetailListContainer": {
            "getDeploymentDetail": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices/{containerUUID}/deployments",
                "modelName": "DeploymentDetailListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PendingChangesListContainer": {
            "getPendingChanges": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices/{containerUUID}/pendingchanges",
                "modelName": "PendingChangesListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DeploymentRequest": {
            "createDeploymentRequest": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/deploymentrequests",
                "modelName": "DeploymentRequest",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "JobHistoryListContainer": {
            "getJobHistory": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/jobhistories",
                "modelName": "JobHistoryListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RollbackRequest": {
            "createRollbackRequest": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deployment/rollbackrequests",
                "modelName": "RollbackRequest",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDClusterDeviceContainerListContainer": {
            "getAllFTDClusterDeviceContainer": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deviceclusters/ftddevicecluster",
                "modelName": "FTDClusterDeviceContainerListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDClusterDeviceContainer": {
            "getFTDClusterDeviceContainer": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/deviceclusters/ftddevicecluster/{objectId}",
                "modelName": "FTDClusterDeviceContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DeviceGroupListContainer": {
            "getAllDeviceGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords",
                "modelName": "DeviceGroupListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DeviceGroup": {
            "createDeviceGroup": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords",
                "modelName": "DeviceGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getDeviceGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords/{objectId}",
                "modelName": "DeviceGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateDeviceGroup": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords/{objectId}",
                "modelName": "DeviceGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteDeviceGroup": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords/{objectId}",
                "modelName": "DeviceGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDHADeviceContainerListContainer": {
            "getAllFTDHADeviceContainer": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs",
                "modelName": "FTDHADeviceContainerListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDHADeviceContainer": {
            "createFTDHADeviceContainer": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs",
                "modelName": "FTDHADeviceContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDHADeviceContainer": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{objectId}",
                "modelName": "FTDHADeviceContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDHADeviceContainer": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{objectId}",
                "modelName": "FTDHADeviceContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDHADeviceContainer": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{objectId}",
                "modelName": "FTDHADeviceContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDHAInterfaceMACAddressesListContainer": {
            "getAllFTDHAInterfaceMACAddresses": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs",
                "modelName": "FTDHAInterfaceMACAddressesListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDHAInterfaceMACAddresses": {
            "createFTDHAInterfaceMACAddresses": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs",
                "modelName": "FTDHAInterfaceMACAddresses",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDHAInterfaceMACAddresses": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs/{objectId}",
                "modelName": "FTDHAInterfaceMACAddresses",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDHAInterfaceMACAddresses": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs/{objectId}",
                "modelName": "FTDHAInterfaceMACAddresses",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDHAInterfaceMACAddresses": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs/{objectId}",
                "modelName": "FTDHAInterfaceMACAddresses",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDHAMonitoredInterfacesListContainer": {
            "getAllFTDHAMonitoredInterfaces": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces",
                "modelName": "FTDHAMonitoredInterfacesListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDHAMonitoredInterfaces": {
            "getFTDHAMonitoredInterfaces": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces/{objectId}",
                "modelName": "FTDHAMonitoredInterfaces",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDHAMonitoredInterfaces": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces/{objectId}",
                "modelName": "FTDHAMonitoredInterfaces",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DeviceCopyConfigRequest": {
            "createDeviceCopyConfigRequest": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/copyconfigrequests",
                "modelName": "DeviceCopyConfigRequest",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DeviceListContainer": {
            "getAllDevice": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords",
                "modelName": "DeviceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Device": {
            "createDevice": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords",
                "modelName": "Device",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getDevice": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{objectId}",
                "modelName": "Device",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateDevice": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{objectId}",
                "modelName": "Device",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteDevice": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{objectId}",
                "modelName": "Device",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDBridgeGroupInterfaceListContainer": {
            "getAllFTDBridgeGroupInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces",
                "modelName": "FTDBridgeGroupInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDBridgeGroupInterface": {
            "createFTDBridgeGroupInterface": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces",
                "modelName": "FTDBridgeGroupInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDBridgeGroupInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces/{objectId}",
                "modelName": "FTDBridgeGroupInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDBridgeGroupInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces/{objectId}",
                "modelName": "FTDBridgeGroupInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDBridgeGroupInterface": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces/{objectId}",
                "modelName": "FTDBridgeGroupInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDEtherChannelInterfaceListContainer": {
            "getAllFTDEtherChannelInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces",
                "modelName": "FTDEtherChannelInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDEtherChannelInterface": {
            "createFTDEtherChannelInterface": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces",
                "modelName": "FTDEtherChannelInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDEtherChannelInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces/{objectId}",
                "modelName": "FTDEtherChannelInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDEtherChannelInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces/{objectId}",
                "modelName": "FTDEtherChannelInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDEtherChannelInterface": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces/{objectId}",
                "modelName": "FTDEtherChannelInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FPInterfaceStatisticsListContainer": {
            "getFPInterfaceStatistics": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpinterfacestatistics",
                "modelName": "FPInterfaceStatisticsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FPLogicalInterfaceListContainer": {
            "getAllFPLogicalInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces",
                "modelName": "FPLogicalInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FPLogicalInterface": {
            "createFPLogicalInterface": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces",
                "modelName": "FPLogicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFPLogicalInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces/{objectId}",
                "modelName": "FPLogicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFPLogicalInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces/{objectId}",
                "modelName": "FPLogicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFPLogicalInterface": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces/{objectId}",
                "modelName": "FPLogicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FPPhysicalInterfaceListContainer": {
            "getAllFPPhysicalInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces",
                "modelName": "FPPhysicalInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FPPhysicalInterface": {
            "getFPPhysicalInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces/{objectId}",
                "modelName": "FPPhysicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFPPhysicalInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces/{objectId}",
                "modelName": "FPPhysicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "InlineSetListContainer": {
            "getAllInlineSet": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets",
                "modelName": "InlineSetListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "InlineSet": {
            "createInlineSet": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets",
                "modelName": "InlineSet",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getInlineSet": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets/{objectId}",
                "modelName": "InlineSet",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateInlineSet": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets/{objectId}",
                "modelName": "InlineSet",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteInlineSet": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets/{objectId}",
                "modelName": "InlineSet",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "InterfaceEventListContainer": {
            "getInterfaceEvent": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/interfaceevents",
                "modelName": "InterfaceEventListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "InterfaceEvent": {
            "createInterfaceEvent": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/interfaceevents",
                "modelName": "InterfaceEvent",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "CommandsListContainer": {
            "getCommands": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/operational/commands",
                "modelName": "CommandsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "command": {
                            "type": "string",
                            "required": true
                        },
                        "parameters": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "HealthMonitorModelListContainer": {
            "getHealthMonitorModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/operational/metrics",
                "modelName": "HealthMonitorModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDPhysicalInterfaceListContainer": {
            "getAllFTDPhysicalInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces",
                "modelName": "FTDPhysicalInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDPhysicalInterface": {
            "getFTDPhysicalInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces/{objectId}",
                "modelName": "FTDPhysicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDPhysicalInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces/{objectId}",
                "modelName": "FTDPhysicalInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDRedundantInterfaceListContainer": {
            "getAllFTDRedundantInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces",
                "modelName": "FTDRedundantInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDRedundantInterface": {
            "createFTDRedundantInterface": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces",
                "modelName": "FTDRedundantInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDRedundantInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces/{objectId}",
                "modelName": "FTDRedundantInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDRedundantInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces/{objectId}",
                "modelName": "FTDRedundantInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDRedundantInterface": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces/{objectId}",
                "modelName": "FTDRedundantInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "BGPIPvAddressFamilyModelListContainer": {
            "getAllBGPIPvAddressFamilyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgp",
                "modelName": "BGPIPvAddressFamilyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "BGPIPvAddressFamilyModel": {
            "getBGPIPvAddressFamilyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgp/{objectId}",
                "modelName": "BGPIPvAddressFamilyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "BGPGeneralSettingModelListContainer": {
            "getAllBGPGeneralSettingModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgpgeneralsettings",
                "modelName": "BGPGeneralSettingModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "BGPGeneralSettingModel": {
            "getBGPGeneralSettingModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgpgeneralsettings/{objectId}",
                "modelName": "BGPGeneralSettingModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IPv4StaticRouteModelListContainer": {
            "getAllIPv4StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes",
                "modelName": "IPv4StaticRouteModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv4StaticRouteModel": {
            "createMultipleIPv4StaticRouteModel": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes",
                "modelName": "IPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getIPv4StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes/{objectId}",
                "modelName": "IPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateIPv4StaticRouteModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes/{objectId}",
                "modelName": "IPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteIPv4StaticRouteModel": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes/{objectId}",
                "modelName": "IPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IPv6StaticRouteModelListContainer": {
            "getAllIPv6StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes",
                "modelName": "IPv6StaticRouteModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv6StaticRouteModel": {
            "createMultipleIPv6StaticRouteModel": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes",
                "modelName": "IPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getIPv6StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes/{objectId}",
                "modelName": "IPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateIPv6StaticRouteModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes/{objectId}",
                "modelName": "IPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteIPv6StaticRouteModel": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes/{objectId}",
                "modelName": "IPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "OspfInterfacePolicyModelListContainer": {
            "getAllOspfInterfacePolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfinterface",
                "modelName": "OspfInterfacePolicyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "OspfInterfacePolicyModel": {
            "getOspfInterfacePolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfinterface/{objectId}",
                "modelName": "OspfInterfacePolicyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "OspfPolicyModelListContainer": {
            "getAllOspfPolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv2routes",
                "modelName": "OspfPolicyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "OspfPolicyModel": {
            "getOspfPolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv2routes/{objectId}",
                "modelName": "OspfPolicyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Ospfv3InterfacePolicyModelListContainer": {
            "getAllOspfv3InterfacePolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3interfaces",
                "modelName": "Ospfv3InterfacePolicyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Ospfv3InterfacePolicyModel": {
            "getOspfv3InterfacePolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3interfaces/{objectId}",
                "modelName": "Ospfv3InterfacePolicyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Ospfv3PolicyModelListContainer": {
            "getAllOspfv3PolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3routes",
                "modelName": "Ospfv3PolicyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Ospfv3PolicyModel": {
            "getOspfv3PolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3routes/{objectId}",
                "modelName": "Ospfv3PolicyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "StaticRouteModelListContainer": {
            "getAllStaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/staticroutes",
                "modelName": "StaticRouteModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "StaticRouteModel": {
            "getStaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/staticroutes/{objectId}",
                "modelName": "StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VirtualRouterModelListContainer": {
            "getAllVirtualRouterModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters",
                "modelName": "VirtualRouterModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VirtualRouterModel": {
            "createVirtualRouterModel": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters",
                "modelName": "VirtualRouterModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getVirtualRouterModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{objectId}",
                "modelName": "VirtualRouterModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVirtualRouterModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{objectId}",
                "modelName": "VirtualRouterModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteVirtualRouterModel": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{objectId}",
                "modelName": "VirtualRouterModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VrfBGPIPvAddressFamilyModelListContainer": {
            "getAllVrfBGPIPvAddressFamilyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/bgp",
                "modelName": "VrfBGPIPvAddressFamilyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VrfBGPIPvAddressFamilyModel": {
            "getVrfBGPIPvAddressFamilyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/bgp/{objectId}",
                "modelName": "VrfBGPIPvAddressFamilyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VrfIPv4StaticRouteModelListContainer": {
            "getAllVrfIPv4StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes",
                "modelName": "VrfIPv4StaticRouteModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VrfIPv4StaticRouteModel": {
            "createVrfIPv4StaticRouteModel": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes",
                "modelName": "VrfIPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getVrfIPv4StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes/{objectId}",
                "modelName": "VrfIPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVrfIPv4StaticRouteModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes/{objectId}",
                "modelName": "VrfIPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteVrfIPv4StaticRouteModel": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes/{objectId}",
                "modelName": "VrfIPv4StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VrfIPv6StaticRouteModelListContainer": {
            "getAllVrfIPv6StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes",
                "modelName": "VrfIPv6StaticRouteModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VrfIPv6StaticRouteModel": {
            "createVrfIPv6StaticRouteModel": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes",
                "modelName": "VrfIPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getVrfIPv6StaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes/{objectId}",
                "modelName": "VrfIPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVrfIPv6StaticRouteModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes/{objectId}",
                "modelName": "VrfIPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteVrfIPv6StaticRouteModel": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes/{objectId}",
                "modelName": "VrfIPv6StaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VrfOspfInterfacePolicyModelListContainer": {
            "getAllVrfOspfInterfacePolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfinterface",
                "modelName": "VrfOspfInterfacePolicyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VrfOspfInterfacePolicyModel": {
            "getVrfOspfInterfacePolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfinterface/{objectId}",
                "modelName": "VrfOspfInterfacePolicyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VrfOspfPolicyModelListContainer": {
            "getAllVrfOspfPolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfv2routes",
                "modelName": "VrfOspfPolicyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VrfOspfPolicyModel": {
            "getVrfOspfPolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfv2routes/{objectId}",
                "modelName": "VrfOspfPolicyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VrfStaticRouteModelListContainer": {
            "getAllVrfStaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/staticroutes",
                "modelName": "VrfStaticRouteModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VrfStaticRouteModel": {
            "getVrfStaticRouteModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/staticroutes/{objectId}",
                "modelName": "VrfStaticRouteModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "virtualrouterUUID": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDSubInterfaceListContainer": {
            "getAllFTDSubInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces",
                "modelName": "FTDSubInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDSubInterface": {
            "createMultipleFTDSubInterface": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces",
                "modelName": "FTDSubInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getFTDSubInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces/{objectId}",
                "modelName": "FTDSubInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDSubInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces/{objectId}",
                "modelName": "FTDSubInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDSubInterface": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces/{objectId}",
                "modelName": "FTDSubInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VirtualSwitchListContainer": {
            "getAllVirtualSwitch": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches",
                "modelName": "VirtualSwitchListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VirtualSwitch": {
            "createVirtualSwitch": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches",
                "modelName": "VirtualSwitch",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getVirtualSwitch": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches/{objectId}",
                "modelName": "VirtualSwitch",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVirtualSwitch": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches/{objectId}",
                "modelName": "VirtualSwitch",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteVirtualSwitch": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches/{objectId}",
                "modelName": "VirtualSwitch",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDVTIInterfaceListContainer": {
            "getAllFTDVTIInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces",
                "modelName": "FTDVTIInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDVTIInterface": {
            "createMultipleFTDVTIInterface": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces",
                "modelName": "FTDVTIInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getFTDVTIInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces/{objectId}",
                "modelName": "FTDVTIInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDVTIInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces/{objectId}",
                "modelName": "FTDVTIInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDVTIInterface": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces/{objectId}",
                "modelName": "FTDVTIInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDVlanInterfaceListContainer": {
            "getAllFTDVlanInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces",
                "modelName": "FTDVlanInterfaceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDVlanInterface": {
            "createFTDVlanInterface": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces",
                "modelName": "FTDVlanInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDVlanInterface": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces/{objectId}",
                "modelName": "FTDVlanInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDVlanInterface": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces/{objectId}",
                "modelName": "FTDVlanInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDVlanInterface": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces/{objectId}",
                "modelName": "FTDVlanInterface",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "HealthAlertModelListContainer": {
            "getHealthAlertModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/health/alerts",
                "modelName": "HealthAlertModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "HealthMetricListContainer": {
            "getHealthMetric": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/health/metrics",
                "modelName": "HealthMetricListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "CloudEventsListContainer": {
            "getAllCloudEvents": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs",
                "modelName": "CloudEventsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "CloudEvents": {
            "getCloudEvents": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs/{objectId}",
                "modelName": "CloudEvents",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateCloudEvents": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs/{objectId}",
                "modelName": "CloudEvents",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "CloudRegionListContainer": {
            "getAllCloudRegion": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions",
                "modelName": "CloudRegionListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "CloudRegion": {
            "getCloudRegion": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions/{objectId}",
                "modelName": "CloudRegion",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateCloudRegion": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions/{objectId}",
                "modelName": "CloudRegion",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ExternalLookupListContainer": {
            "getAllExternalLookup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups",
                "modelName": "ExternalLookupListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ExternalLookup": {
            "createExternalLookup": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups",
                "modelName": "ExternalLookup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getExternalLookup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups/{objectId}",
                "modelName": "ExternalLookup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateExternalLookup": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups/{objectId}",
                "modelName": "ExternalLookup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteExternalLookup": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups/{objectId}",
                "modelName": "ExternalLookup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ExternalStorageListContainer": {
            "getAllExternalStorage": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage",
                "modelName": "ExternalStorageListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ExternalStorage": {
            "getExternalStorage": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage/{objectId}",
                "modelName": "ExternalStorage",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateExternalStorage": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage/{objectId}",
                "modelName": "ExternalStorage",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FMCHAStatusListContainer": {
            "getFMCHAStatus": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/fmchastatuses",
                "modelName": "FMCHAStatusListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SecurexConfigListContainer": {
            "getAllSecurexConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs",
                "modelName": "SecurexConfigListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SecurexConfig": {
            "getSecurexConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs/{objectId}",
                "modelName": "SecurexConfig",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSecurexConfig": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs/{objectId}",
                "modelName": "SecurexConfig",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "TaskStatus": {
            "getTaskStatus": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/job/taskstatuses/{objectId}",
                "modelName": "TaskStatus",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AnyConnectCustomAttributeModelListContainer": {
            "getAllAnyConnectCustomAttributeModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes",
                "modelName": "AnyConnectCustomAttributeModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AnyConnectCustomAttributeOverrideListContainer": {
            "getAnyConnectCustomAttributeOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{containerUUID}/overrides",
                "modelName": "AnyConnectCustomAttributeOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AnyConnectCustomAttributeModel": {
            "getAnyConnectCustomAttributeModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{objectId}",
                "modelName": "AnyConnectCustomAttributeModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AnyConnectPackageModelListContainer": {
            "getAllAnyConnectPackageModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages",
                "modelName": "AnyConnectPackageModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AnyConnectPackageModel": {
            "getAnyConnectPackageModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages/{objectId}",
                "modelName": "AnyConnectPackageModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AnyConnectProfileModelListContainer": {
            "getAllAnyConnectProfileModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles",
                "modelName": "AnyConnectProfileModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AnyConnectProfileModel": {
            "getAnyConnectProfileModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles/{objectId}",
                "modelName": "AnyConnectProfileModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AnyProtocolPortObjectListContainer": {
            "getAllAnyProtocolPortObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyprotocolportobjects",
                "modelName": "AnyProtocolPortObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AnyProtocolPortObject": {
            "getAnyProtocolPortObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/anyprotocolportobjects/{objectId}",
                "modelName": "AnyProtocolPortObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ApplicationCategoryListContainer": {
            "getAllApplicationCategory": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationcategories",
                "modelName": "ApplicationCategoryListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ApplicationCategory": {
            "getApplicationCategory": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationcategories/{objectId}",
                "modelName": "ApplicationCategory",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ApplicationFilterListContainer": {
            "getAllApplicationFilter": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters",
                "modelName": "ApplicationFilterListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ApplicationFilter": {
            "createApplicationFilter": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters",
                "modelName": "ApplicationFilter",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getApplicationFilter": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters/{objectId}",
                "modelName": "ApplicationFilter",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateApplicationFilter": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters/{objectId}",
                "modelName": "ApplicationFilter",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteApplicationFilter": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters/{objectId}",
                "modelName": "ApplicationFilter",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ApplicationProductivityListContainer": {
            "getAllApplicationProductivity": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationproductivities",
                "modelName": "ApplicationProductivityListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ApplicationProductivity": {
            "getApplicationProductivity": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationproductivities/{objectId}",
                "modelName": "ApplicationProductivity",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ApplicationRiskListContainer": {
            "getAllApplicationRisk": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationrisks",
                "modelName": "ApplicationRiskListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ApplicationRisk": {
            "getApplicationRisk": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationrisks/{objectId}",
                "modelName": "ApplicationRisk",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ApplicationListContainer": {
            "getAllApplication": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applications",
                "modelName": "ApplicationListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Application": {
            "getApplication": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applications/{objectId}",
                "modelName": "Application",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ApplicationTagListContainer": {
            "getAllApplicationTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtags",
                "modelName": "ApplicationTagListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ApplicationTag": {
            "getApplicationTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtags/{objectId}",
                "modelName": "ApplicationTag",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ApplicationTypeListContainer": {
            "getAllApplicationType": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtypes",
                "modelName": "ApplicationTypeListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ApplicationType": {
            "getApplicationType": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtypes/{objectId}",
                "modelName": "ApplicationType",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AsPathListListContainer": {
            "getAllAsPathList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/aspathlists",
                "modelName": "AsPathListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AsPathList": {
            "getAsPathList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/aspathlists/{objectId}",
                "modelName": "AsPathList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VpnPKIEnrollmentModelListContainer": {
            "getAllVpnPKIEnrollmentModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certenrollments",
                "modelName": "VpnPKIEnrollmentModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VpnPKIEnrollmentModel": {
            "getVpnPKIEnrollmentModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certenrollments/{objectId}",
                "modelName": "VpnPKIEnrollmentModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "CertificateMapModelListContainer": {
            "getAllCertificateMapModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps",
                "modelName": "CertificateMapModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "CertificateMapModel": {
            "getCertificateMapModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps/{objectId}",
                "modelName": "CertificateMapModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "CommunityListListContainer": {
            "getAllCommunityList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/communitylists",
                "modelName": "CommunityListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "CommunityList": {
            "getCommunityList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/communitylists/{objectId}",
                "modelName": "CommunityList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ContinentObjectListContainer": {
            "getAllContinentObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/continents",
                "modelName": "ContinentObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ContinentObject": {
            "getContinentObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/continents/{objectId}",
                "modelName": "ContinentObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "CountryObjectListContainer": {
            "getAllCountryObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/countries",
                "modelName": "CountryObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "CountryObject": {
            "getCountryObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/countries/{objectId}",
                "modelName": "CountryObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DNSServerGroupObjectListContainer": {
            "getAllDNSServerGroupObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups",
                "modelName": "DNSServerGroupObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DNSServerGroupObject": {
            "createDNSServerGroupObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups",
                "modelName": "DNSServerGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getDNSServerGroupObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{objectId}",
                "modelName": "DNSServerGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateDNSServerGroupObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{objectId}",
                "modelName": "DNSServerGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteDNSServerGroupObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{objectId}",
                "modelName": "DNSServerGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "DNSServerGroupOverrideListContainer": {
            "getAllDNSServerGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{containerUUID}/overrides",
                "modelName": "DNSServerGroupOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DNSServerGroupOverride": {
            "getDNSServerGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{containerUUID}/overrides/{objectId}",
                "modelName": "DNSServerGroupOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DynamicObjectMappingsBulk": {
            "createDynamicObjectMappingsBulk": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjectmappings",
                "modelName": "DynamicObjectMappingsBulk",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "null": {
            "deleteMultipleDynamicObjectMappingsBulk": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjectmappings",
                "modelName": null,
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "deleteMultipleDynamicObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects",
                "modelName": null,
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "deleteMultipleDynamicObjectMappings": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}/mappings",
                "modelName": null,
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "deleteMultipleSnort3IPSRulesObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
                "modelName": null,
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        },
                        "filter": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            },
            "createSnort3IPSRulesFileUpload": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulesupload",
                "modelName": null,
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteMultipleAccessRule": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
                "modelName": null,
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        },
                        "filter": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            },
            "deleteMultiplePrefilterRule": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
                "modelName": null,
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        },
                        "filter": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            }
        },
        "DynamicObjectListContainer": {
            "getAllDynamicObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects",
                "modelName": "DynamicObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "name": {
                            "type": "string",
                            "required": false
                        },
                        "includeCount": {
                            "type": "string",
                            "required": false
                        },
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DynamicObject": {
            "createMultipleDynamicObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects",
                "modelName": "DynamicObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getDynamicObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}",
                "modelName": "DynamicObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "includeCount": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateDynamicObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}",
                "modelName": "DynamicObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteDynamicObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}",
                "modelName": "DynamicObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DynamicObjectMappingsListContainer": {
            "getDynamicObjectMappings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}/mappings",
                "modelName": "DynamicObjectMappingsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DynamicObjectMappings": {
            "updateDynamicObjectMappings": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}/mappings",
                "modelName": "DynamicObjectMappings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "action": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "EndPointDeviceTypeListContainer": {
            "getAllEndPointDeviceType": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/endpointdevicetypes",
                "modelName": "EndPointDeviceTypeListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "EndPointDeviceType": {
            "getEndPointDeviceType": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/endpointdevicetypes/{objectId}",
                "modelName": "EndPointDeviceType",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ExpandedCommunityListListContainer": {
            "getAllExpandedCommunityList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/expandedcommunitylists",
                "modelName": "ExpandedCommunityListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ExpandedCommunityList": {
            "getExpandedCommunityList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/expandedcommunitylists/{objectId}",
                "modelName": "ExpandedCommunityList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ExtendedAccessListModelListContainer": {
            "getAllExtendedAccessListModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/extendedaccesslists",
                "modelName": "ExtendedAccessListModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ExtendedAccessListModel": {
            "getExtendedAccessListModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/extendedaccesslists/{objectId}",
                "modelName": "ExtendedAccessListModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FQDNObjectListContainer": {
            "getAllFQDNObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns",
                "modelName": "FQDNObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FQDNObject": {
            "createMultipleFQDNObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns",
                "modelName": "FQDNObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getFQDNObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{objectId}",
                "modelName": "FQDNObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateFQDNObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{objectId}",
                "modelName": "FQDNObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFQDNObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{objectId}",
                "modelName": "FQDNObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FQDNOverrideListContainer": {
            "getAllFQDNOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{containerUUID}/overrides",
                "modelName": "FQDNOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FQDNOverride": {
            "getFQDNOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{containerUUID}/overrides/{objectId}",
                "modelName": "FQDNOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "GeoLocationObjectListContainer": {
            "getAllGeoLocationObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations",
                "modelName": "GeoLocationObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "GeoLocationObject": {
            "createGeoLocationObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations",
                "modelName": "GeoLocationObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getGeoLocationObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations/{objectId}",
                "modelName": "GeoLocationObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateGeoLocationObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations/{objectId}",
                "modelName": "GeoLocationObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteGeoLocationObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations/{objectId}",
                "modelName": "GeoLocationObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "GlobalTimeZoneListContainer": {
            "getAllGlobalTimeZone": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/globaltimezones",
                "modelName": "GlobalTimeZoneListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "GlobalTimeZone": {
            "getGlobalTimeZone": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/globaltimezones/{objectId}",
                "modelName": "GlobalTimeZone",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "GroupPolicyModelListContainer": {
            "getAllGroupPolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/grouppolicies",
                "modelName": "GroupPolicyModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "GroupPolicyModel": {
            "getGroupPolicyModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/grouppolicies/{objectId}",
                "modelName": "GroupPolicyModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "HostObjectListContainer": {
            "getAllHostObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts",
                "modelName": "HostObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "HostObject": {
            "createMultipleHostObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts",
                "modelName": "HostObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getHostObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}",
                "modelName": "HostObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateHostObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}",
                "modelName": "HostObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteHostObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}",
                "modelName": "HostObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "HostOverrideListContainer": {
            "getAllHostOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{containerUUID}/overrides",
                "modelName": "HostOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "HostOverride": {
            "getHostOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{containerUUID}/overrides/{objectId}",
                "modelName": "HostOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "HostScanPackageObjectListContainer": {
            "getAllHostScanPackageObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hostscanpackages",
                "modelName": "HostScanPackageObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "HostScanPackageObject": {
            "getHostScanPackageObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/hostscanpackages/{objectId}",
                "modelName": "HostScanPackageObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ICMPV4ObjectListContainer": {
            "getAllICMPV4Object": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects",
                "modelName": "ICMPV4ObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ICMPV4Object": {
            "createMultipleICMPV4Object": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects",
                "modelName": "ICMPV4Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getICMPV4Object": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{objectId}",
                "modelName": "ICMPV4Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateICMPV4Object": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{objectId}",
                "modelName": "ICMPV4Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteICMPV4Object": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{objectId}",
                "modelName": "ICMPV4Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ICMPV4ObjectOverrideListContainer": {
            "getAllICMPV4ObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{containerUUID}/overrides",
                "modelName": "ICMPV4ObjectOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ICMPV4ObjectOverride": {
            "getICMPV4ObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{containerUUID}/overrides/{objectId}",
                "modelName": "ICMPV4ObjectOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ICMPV6ObjectListContainer": {
            "getAllICMPV6Object": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects",
                "modelName": "ICMPV6ObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ICMPV6Object": {
            "createMultipleICMPV6Object": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects",
                "modelName": "ICMPV6Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getICMPV6Object": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{objectId}",
                "modelName": "ICMPV6Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateICMPV6Object": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{objectId}",
                "modelName": "ICMPV6Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteICMPV6Object": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{objectId}",
                "modelName": "ICMPV6Object",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ICMPV6ObjectOverrideListContainer": {
            "getAllICMPV6ObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{containerUUID}/overrides",
                "modelName": "ICMPV6ObjectOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ICMPV6ObjectOverride": {
            "getICMPV6ObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{containerUUID}/overrides/{objectId}",
                "modelName": "ICMPV6ObjectOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IKEv1IPsecProposalListContainer": {
            "getAllIKEv1IPsecProposal": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals",
                "modelName": "IKEv1IPsecProposalListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IKEv1IPsecProposal": {
            "createIKEv1IPsecProposal": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals",
                "modelName": "IKEv1IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getIKEv1IPsecProposal": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals/{objectId}",
                "modelName": "IKEv1IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateIKEv1IPsecProposal": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals/{objectId}",
                "modelName": "IKEv1IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteIKEv1IPsecProposal": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals/{objectId}",
                "modelName": "IKEv1IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Ikev1PolicyObjectListContainer": {
            "getAllIkev1PolicyObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies",
                "modelName": "Ikev1PolicyObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Ikev1PolicyObject": {
            "createIkev1PolicyObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies",
                "modelName": "Ikev1PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getIkev1PolicyObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies/{objectId}",
                "modelName": "Ikev1PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateIkev1PolicyObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies/{objectId}",
                "modelName": "Ikev1PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteIkev1PolicyObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies/{objectId}",
                "modelName": "Ikev1PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IKEv2IPsecProposalListContainer": {
            "getAllIKEv2IPsecProposal": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals",
                "modelName": "IKEv2IPsecProposalListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IKEv2IPsecProposal": {
            "createIKEv2IPsecProposal": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals",
                "modelName": "IKEv2IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getIKEv2IPsecProposal": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals/{objectId}",
                "modelName": "IKEv2IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateIKEv2IPsecProposal": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals/{objectId}",
                "modelName": "IKEv2IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteIKEv2IPsecProposal": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals/{objectId}",
                "modelName": "IKEv2IPsecProposal",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Ikev2PolicyObjectListContainer": {
            "getAllIkev2PolicyObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies",
                "modelName": "Ikev2PolicyObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Ikev2PolicyObject": {
            "createIkev2PolicyObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies",
                "modelName": "Ikev2PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getIkev2PolicyObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies/{objectId}",
                "modelName": "Ikev2PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateIkev2PolicyObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies/{objectId}",
                "modelName": "Ikev2PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteIkev2PolicyObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies/{objectId}",
                "modelName": "Ikev2PolicyObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "InterfaceGroupObjectListContainer": {
            "getAllInterfaceGroupObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups",
                "modelName": "InterfaceGroupObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "InterfaceGroupObject": {
            "createMultipleInterfaceGroupObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups",
                "modelName": "InterfaceGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getInterfaceGroupObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups/{objectId}",
                "modelName": "InterfaceGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "groupByDevice": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateInterfaceGroupObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups/{objectId}",
                "modelName": "InterfaceGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteInterfaceGroupObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups/{objectId}",
                "modelName": "InterfaceGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "InterfaceObjectListContainer": {
            "getAllInterfaceObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfaceobjects",
                "modelName": "InterfaceObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "InterfaceObject": {
            "getInterfaceObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/interfaceobjects/{objectId}",
                "modelName": "InterfaceObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Snort3IntrusionRuleGroupsObjectListContainer": {
            "getAllSnort3IntrusionRuleGroupsObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups",
                "modelName": "Snort3IntrusionRuleGroupsObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Snort3IntrusionRuleGroupsObject": {
            "createMultipleSnort3IntrusionRuleGroupsObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups",
                "modelName": "Snort3IntrusionRuleGroupsObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getSnort3IntrusionRuleGroupsObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups/{objectId}",
                "modelName": "Snort3IntrusionRuleGroupsObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSnort3IntrusionRuleGroupsObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups/{objectId}",
                "modelName": "Snort3IntrusionRuleGroupsObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteSnort3IntrusionRuleGroupsObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups/{objectId}",
                "modelName": "Snort3IntrusionRuleGroupsObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "cascadeDeleteOrphanedRules": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "Snort3IPSRulesObjectListContainer": {
            "getAllSnort3IPSRulesObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
                "modelName": "Snort3IPSRulesObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "sort": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Snort3IPSRulesObject": {
            "createMultipleSnort3IPSRulesObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
                "modelName": "Snort3IPSRulesObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "updateMultipleSnort3IPSRulesObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules",
                "modelName": "Snort3IPSRulesObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "getSnort3IPSRulesObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules/{objectId}",
                "modelName": "Snort3IPSRulesObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSnort3IPSRulesObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules/{objectId}",
                "modelName": "Snort3IPSRulesObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteSnort3IPSRulesObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules/{objectId}",
                "modelName": "Snort3IPSRulesObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IPv4AddressPoolListContainer": {
            "getAllIPv4AddressPool": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools",
                "modelName": "IPv4AddressPoolListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv4AddressPoolOverrideListContainer": {
            "getIPv4AddressPoolOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools/{containerUUID}/overrides",
                "modelName": "IPv4AddressPoolOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv4AddressPool": {
            "getIPv4AddressPool": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools/{objectId}",
                "modelName": "IPv4AddressPool",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv4PrefixListListContainer": {
            "getAllIPv4PrefixList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4prefixlists",
                "modelName": "IPv4PrefixListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv4PrefixList": {
            "getIPv4PrefixList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4prefixlists/{objectId}",
                "modelName": "IPv4PrefixList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IPv6AddressPoolListContainer": {
            "getAllIPv6AddressPool": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools",
                "modelName": "IPv6AddressPoolListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv6AddressPoolOverrideListContainer": {
            "getIPv6AddressPoolOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools/{containerUUID}/overrides",
                "modelName": "IPv6AddressPoolOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv6AddressPool": {
            "getIPv6AddressPool": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools/{objectId}",
                "modelName": "IPv6AddressPool",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv6PrefixListListContainer": {
            "getAllIPv6PrefixList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6prefixlists",
                "modelName": "IPv6PrefixListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IPv6PrefixList": {
            "getIPv6PrefixList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6prefixlists/{objectId}",
                "modelName": "IPv6PrefixList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ISESecurityGroupTagListContainer": {
            "getAllISESecurityGroupTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/isesecuritygrouptags",
                "modelName": "ISESecurityGroupTagListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ISESecurityGroupTag": {
            "getISESecurityGroupTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/isesecuritygrouptags/{objectId}",
                "modelName": "ISESecurityGroupTag",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "KeyChainObjectListContainer": {
            "getAllKeyChainObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains",
                "modelName": "KeyChainObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "KeyChainObject": {
            "createMultipleKeyChainObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains",
                "modelName": "KeyChainObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getKeyChainObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{objectId}",
                "modelName": "KeyChainObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateKeyChainObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{objectId}",
                "modelName": "KeyChainObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteKeyChainObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{objectId}",
                "modelName": "KeyChainObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "KeyChainObjectOverrideListContainer": {
            "getAllKeyChainObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{containerUUID}/overrides",
                "modelName": "KeyChainObjectOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "KeyChainObjectOverride": {
            "getKeyChainObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{containerUUID}/overrides/{objectId}",
                "modelName": "KeyChainObjectOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "LocalRealmUserListContainer": {
            "getAllLocalRealmUser": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers",
                "modelName": "LocalRealmUserListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "LocalRealmUser": {
            "createMultipleLocalRealmUser": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers",
                "modelName": "LocalRealmUser",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getLocalRealmUser": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers/{objectId}",
                "modelName": "LocalRealmUser",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateLocalRealmUser": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers/{objectId}",
                "modelName": "LocalRealmUser",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteLocalRealmUser": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers/{objectId}",
                "modelName": "LocalRealmUser",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "NetworkAddressListContainer": {
            "getNetworkAddress": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkaddresses",
                "modelName": "NetworkAddressListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "NetworkGroupListContainer": {
            "getAllNetworkGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups",
                "modelName": "NetworkGroupListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "NetworkGroup": {
            "createMultipleNetworkGroup": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups",
                "modelName": "NetworkGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getNetworkGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{objectId}",
                "modelName": "NetworkGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateNetworkGroup": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{objectId}",
                "modelName": "NetworkGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteNetworkGroup": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{objectId}",
                "modelName": "NetworkGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "NetworkGroupOverrideListContainer": {
            "getAllNetworkGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{containerUUID}/overrides",
                "modelName": "NetworkGroupOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "NetworkGroupOverride": {
            "getNetworkGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{containerUUID}/overrides/{objectId}",
                "modelName": "NetworkGroupOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "NetworkObjectListContainer": {
            "getAllNetworkObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks",
                "modelName": "NetworkObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "NetworkObject": {
            "createMultipleNetworkObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks",
                "modelName": "NetworkObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getNetworkObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{objectId}",
                "modelName": "NetworkObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateNetworkObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{objectId}",
                "modelName": "NetworkObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteNetworkObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{objectId}",
                "modelName": "NetworkObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "NetworkOverrideListContainer": {
            "getAllNetworkOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{containerUUID}/overrides",
                "modelName": "NetworkOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ObjectUsageListContainer": {
            "getObjectUsage": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/operational/usage",
                "modelName": "ObjectUsageListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PolicyListListContainer": {
            "getAllPolicyList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/policylists",
                "modelName": "PolicyListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PolicyList": {
            "getPolicyList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/policylists/{objectId}",
                "modelName": "PolicyList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "PortObjectGroupListContainer": {
            "getAllPortObjectGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups",
                "modelName": "PortObjectGroupListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PortObjectGroup": {
            "createMultiplePortObjectGroup": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups",
                "modelName": "PortObjectGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getPortObjectGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{objectId}",
                "modelName": "PortObjectGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updatePortObjectGroup": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{objectId}",
                "modelName": "PortObjectGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deletePortObjectGroup": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{objectId}",
                "modelName": "PortObjectGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "PortObjectGroupOverrideListContainer": {
            "getAllPortObjectGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{containerUUID}/overrides",
                "modelName": "PortObjectGroupOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PortObjectGroupOverride": {
            "getPortObjectGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{containerUUID}/overrides/{objectId}",
                "modelName": "PortObjectGroupOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "PortObjectListContainer": {
            "getPortObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ports",
                "modelName": "PortObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ProtocolPortObjectListContainer": {
            "getAllProtocolPortObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects",
                "modelName": "ProtocolPortObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ProtocolPortObject": {
            "createMultipleProtocolPortObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects",
                "modelName": "ProtocolPortObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getProtocolPortObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{objectId}",
                "modelName": "ProtocolPortObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateProtocolPortObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{objectId}",
                "modelName": "ProtocolPortObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteProtocolPortObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{objectId}",
                "modelName": "ProtocolPortObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ProtocolPortObjectOverrideListContainer": {
            "getAllProtocolPortObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{containerUUID}/overrides",
                "modelName": "ProtocolPortObjectOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ProtocolPortObjectOverride": {
            "getProtocolPortObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{containerUUID}/overrides/{objectId}",
                "modelName": "ProtocolPortObjectOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RadiusServerGroupModelListContainer": {
            "getAllRadiusServerGroupModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/radiusservergroups",
                "modelName": "RadiusServerGroupModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RadiusServerGroupModel": {
            "getRadiusServerGroupModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/radiusservergroups/{objectId}",
                "modelName": "RadiusServerGroupModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RangeObjectListContainer": {
            "getAllRangeObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges",
                "modelName": "RangeObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RangeObject": {
            "createMultipleRangeObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges",
                "modelName": "RangeObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getRangeObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{objectId}",
                "modelName": "RangeObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateRangeObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{objectId}",
                "modelName": "RangeObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteRangeObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{objectId}",
                "modelName": "RangeObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RangeOverrideListContainer": {
            "getAllRangeOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{containerUUID}/overrides",
                "modelName": "RangeOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RangeOverride": {
            "getRangeOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{containerUUID}/overrides/{objectId}",
                "modelName": "RangeOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RealmListContainer": {
            "getAllRealm": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms",
                "modelName": "RealmListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Realm": {
            "createRealm": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms",
                "modelName": "Realm",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getRealm": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms/{objectId}",
                "modelName": "Realm",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateRealm": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms/{objectId}",
                "modelName": "Realm",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteRealm": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realms/{objectId}",
                "modelName": "Realm",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RealmUserGroupListContainer": {
            "getAllRealmUserGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusergroups",
                "modelName": "RealmUserGroupListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RealmUserGroup": {
            "getRealmUserGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusergroups/{objectId}",
                "modelName": "RealmUserGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RealmUserListContainer": {
            "getAllRealmUser": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusers",
                "modelName": "RealmUserListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RealmUser": {
            "getRealmUser": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/realmusers/{objectId}",
                "modelName": "RealmUser",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RouteMapListContainer": {
            "getAllRouteMap": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/routemaps",
                "modelName": "RouteMapListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RouteMap": {
            "getRouteMap": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/routemaps/{objectId}",
                "modelName": "RouteMap",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SecurityGroupTagListContainer": {
            "getAllSecurityGroupTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securitygrouptags",
                "modelName": "SecurityGroupTagListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SecurityGroupTag": {
            "getSecurityGroupTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securitygrouptags/{objectId}",
                "modelName": "SecurityGroupTag",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SecurityZoneObjectListContainer": {
            "getAllSecurityZoneObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones",
                "modelName": "SecurityZoneObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SecurityZoneObject": {
            "createMultipleSecurityZoneObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones",
                "modelName": "SecurityZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getSecurityZoneObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones/{objectId}",
                "modelName": "SecurityZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "groupByDevice": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateSecurityZoneObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones/{objectId}",
                "modelName": "SecurityZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteSecurityZoneObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones/{objectId}",
                "modelName": "SecurityZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SIDNSFeedListContainer": {
            "getAllSIDNSFeed": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnsfeeds",
                "modelName": "SIDNSFeedListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SIDNSFeed": {
            "getSIDNSFeed": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnsfeeds/{objectId}",
                "modelName": "SIDNSFeed",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SIDNSListListContainer": {
            "getAllSIDNSList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnslists",
                "modelName": "SIDNSListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SIDNSList": {
            "getSIDNSList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sidnslists/{objectId}",
                "modelName": "SIDNSList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SINetworkFeedListContainer": {
            "getAllSINetworkFeed": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworkfeeds",
                "modelName": "SINetworkFeedListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SINetworkFeed": {
            "getSINetworkFeed": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworkfeeds/{objectId}",
                "modelName": "SINetworkFeed",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SINetworkListListContainer": {
            "getAllSINetworkList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworklists",
                "modelName": "SINetworkListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SINetworkList": {
            "getSINetworkList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworklists/{objectId}",
                "modelName": "SINetworkList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SinkholeListContainer": {
            "getAllSinkhole": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinkholes",
                "modelName": "SinkholeListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Sinkhole": {
            "getSinkhole": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/sinkholes/{objectId}",
                "modelName": "Sinkhole",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SIURLFeedListContainer": {
            "getAllSIURLFeed": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurlfeeds",
                "modelName": "SIURLFeedListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SIURLFeed": {
            "getSIURLFeed": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurlfeeds/{objectId}",
                "modelName": "SIURLFeed",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SIURLListListContainer": {
            "getAllSIURLList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurllists",
                "modelName": "SIURLListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SIURLList": {
            "getSIURLList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/siurllists/{objectId}",
                "modelName": "SIURLList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SLAMonitorObjectModelListContainer": {
            "getAllSLAMonitorObjectModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors",
                "modelName": "SLAMonitorObjectModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SLAMonitorObjectModel": {
            "createMultipleSLAMonitorObjectModel": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors",
                "modelName": "SLAMonitorObjectModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getSLAMonitorObjectModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors/{objectId}",
                "modelName": "SLAMonitorObjectModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSLAMonitorObjectModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors/{objectId}",
                "modelName": "SLAMonitorObjectModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteSLAMonitorObjectModel": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors/{objectId}",
                "modelName": "SLAMonitorObjectModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SSOServerListContainer": {
            "getAllSSOServer": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers",
                "modelName": "SSOServerListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SSOServerOverrideListContainer": {
            "getSSOServerOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers/{containerUUID}/overrides",
                "modelName": "SSOServerOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SSOServer": {
            "getSSOServer": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers/{objectId}",
                "modelName": "SSOServer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "StandardACLListContainer": {
            "getAllStandardACL": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardaccesslists",
                "modelName": "StandardACLListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "StandardACL": {
            "getStandardACL": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardaccesslists/{objectId}",
                "modelName": "StandardACL",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "StandardCommunityListListContainer": {
            "getAllStandardCommunityList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardcommunitylists",
                "modelName": "StandardCommunityListListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "StandardCommunityList": {
            "getStandardCommunityList": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/standardcommunitylists/{objectId}",
                "modelName": "StandardCommunityList",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "TimeRangeListContainer": {
            "getAllTimeRange": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges",
                "modelName": "TimeRangeListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "TimeRange": {
            "createMultipleTimeRange": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges",
                "modelName": "TimeRange",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getTimeRange": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges/{objectId}",
                "modelName": "TimeRange",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateTimeRange": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges/{objectId}",
                "modelName": "TimeRange",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteTimeRange": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges/{objectId}",
                "modelName": "TimeRange",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "TimeZoneObjectListContainer": {
            "getAllTimeZoneObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects",
                "modelName": "TimeZoneObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "TimeZoneObject": {
            "createMultipleTimeZoneObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects",
                "modelName": "TimeZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getTimeZoneObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{objectId}",
                "modelName": "TimeZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateTimeZoneObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{objectId}",
                "modelName": "TimeZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteTimeZoneObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{objectId}",
                "modelName": "TimeZoneObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "TimeZoneObjectOverrideListContainer": {
            "getTimeZoneObjectOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{containerUUID}/overrides",
                "modelName": "TimeZoneObjectOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "TunnelTagsListContainer": {
            "getAllTunnelTags": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags",
                "modelName": "TunnelTagsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "TunnelTags": {
            "createMultipleTunnelTags": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags",
                "modelName": "TunnelTags",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getTunnelTags": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId}",
                "modelName": "TunnelTags",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateTunnelTags": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId}",
                "modelName": "TunnelTags",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteTunnelTags": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId}",
                "modelName": "TunnelTags",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "URLCategoryListContainer": {
            "getAllURLCategory": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlcategories",
                "modelName": "URLCategoryListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "URLCategory": {
            "getURLCategory": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlcategories/{objectId}",
                "modelName": "URLCategory",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "URLGroupObjectListContainer": {
            "getAllURLGroupObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups",
                "modelName": "URLGroupObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "URLGroupObject": {
            "createMultipleURLGroupObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups",
                "modelName": "URLGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getURLGroupObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{objectId}",
                "modelName": "URLGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateURLGroupObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{objectId}",
                "modelName": "URLGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteURLGroupObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{objectId}",
                "modelName": "URLGroupObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "UrlGroupOverrideListContainer": {
            "getAllUrlGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{containerUUID}/overrides",
                "modelName": "UrlGroupOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "UrlGroupOverride": {
            "getUrlGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{containerUUID}/overrides/{objectId}",
                "modelName": "UrlGroupOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "URLObjectListContainer": {
            "getAllURLObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls",
                "modelName": "URLObjectListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "URLObject": {
            "createMultipleURLObject": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls",
                "modelName": "URLObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getURLObject": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{objectId}",
                "modelName": "URLObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateURLObject": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{objectId}",
                "modelName": "URLObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteURLObject": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{objectId}",
                "modelName": "URLObject",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "UrlOverrideListContainer": {
            "getAllUrlOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{containerUUID}/overrides",
                "modelName": "UrlOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "UrlOverride": {
            "getUrlOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{containerUUID}/overrides/{objectId}",
                "modelName": "UrlOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VariableSetListContainer": {
            "getAllVariableSet": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/variablesets",
                "modelName": "VariableSetListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VariableSet": {
            "getVariableSet": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/variablesets/{objectId}",
                "modelName": "VariableSet",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VlanTagGroupListContainer": {
            "getAllVlanTagGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags",
                "modelName": "VlanTagGroupListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VlanTagGroup": {
            "createMultipleVlanTagGroup": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags",
                "modelName": "VlanTagGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getVlanTagGroup": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{objectId}",
                "modelName": "VlanTagGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateVlanTagGroup": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{objectId}",
                "modelName": "VlanTagGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteVlanTagGroup": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{objectId}",
                "modelName": "VlanTagGroup",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VlanTagGroupOverrideListContainer": {
            "getAllVlanTagGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{containerUUID}/overrides",
                "modelName": "VlanTagGroupOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VlanTagGroupOverride": {
            "getVlanTagGroupOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{containerUUID}/overrides/{objectId}",
                "modelName": "VlanTagGroupOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VlanTagListContainer": {
            "getAllVlanTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags",
                "modelName": "VlanTagListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VlanTag": {
            "createMultipleVlanTag": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags",
                "modelName": "VlanTag",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            },
            "getVlanTag": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{objectId}",
                "modelName": "VlanTag",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "overrideTargetId": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateVlanTag": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{objectId}",
                "modelName": "VlanTag",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteVlanTag": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{objectId}",
                "modelName": "VlanTag",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VlanOverrideListContainer": {
            "getAllVlanOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{containerUUID}/overrides",
                "modelName": "VlanOverrideListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VlanOverride": {
            "getVlanOverride": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{containerUUID}/overrides/{objectId}",
                "modelName": "VlanOverride",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AccessPolicyListContainer": {
            "getAllAccessPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies",
                "modelName": "AccessPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "name": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AccessPolicy": {
            "createAccessPolicy": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies",
                "modelName": "AccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getAccessPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{objectId}",
                "modelName": "AccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateAccessPolicy": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{objectId}",
                "modelName": "AccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteAccessPolicy": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{objectId}",
                "modelName": "AccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "ignoreWarning": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "AccessRuleListContainer": {
            "getAllAccessRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
                "modelName": "AccessRuleListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AccessRule": {
            "createMultipleAccessRule": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
                "modelName": "AccessRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        },
                        "insertAfter": {
                            "type": "string",
                            "required": false
                        },
                        "insertBefore": {
                            "type": "string",
                            "required": false
                        },
                        "section": {
                            "type": "string",
                            "required": false
                        },
                        "category": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateMultipleAccessRule": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules",
                "modelName": "AccessRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "getAccessRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules/{objectId}",
                "modelName": "AccessRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateAccessRule": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules/{objectId}",
                "modelName": "AccessRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteAccessRule": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules/{objectId}",
                "modelName": "AccessRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AccessPolicyCategoryListContainer": {
            "getAllAccessPolicyCategory": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories",
                "modelName": "AccessPolicyCategoryListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AccessPolicyCategory": {
            "createAccessPolicyCategory": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories",
                "modelName": "AccessPolicyCategory",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "section": {
                            "type": "string",
                            "required": false
                        },
                        "aboveCategory": {
                            "type": "string",
                            "required": false
                        },
                        "insertBefore": {
                            "type": "string",
                            "required": false
                        },
                        "insertAfter": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "getAccessPolicyCategory": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories/{objectId}",
                "modelName": "AccessPolicyCategory",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateAccessPolicyCategory": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories/{objectId}",
                "modelName": "AccessPolicyCategory",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteAccessPolicyCategory": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories/{objectId}",
                "modelName": "AccessPolicyCategory",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DefaultActionListContainer": {
            "getAllDefaultAction": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions",
                "modelName": "DefaultActionListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DefaultAction": {
            "getDefaultAction": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions/{objectId}",
                "modelName": "DefaultAction",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateDefaultAction": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions/{objectId}",
                "modelName": "DefaultAction",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AccessPolicyInheritanceSettingListContainer": {
            "getAllAccessPolicyInheritanceSetting": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings",
                "modelName": "AccessPolicyInheritanceSettingListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AccessPolicyInheritanceSetting": {
            "getAccessPolicyInheritanceSetting": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings/{objectId}",
                "modelName": "AccessPolicyInheritanceSetting",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateAccessPolicyInheritanceSetting": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings/{objectId}",
                "modelName": "AccessPolicyInheritanceSetting",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AccessPolicyLoggingSettingModelListContainer": {
            "getAllAccessPolicyLoggingSettingModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings",
                "modelName": "AccessPolicyLoggingSettingModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AccessPolicyLoggingSettingModel": {
            "getAccessPolicyLoggingSettingModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings/{objectId}",
                "modelName": "AccessPolicyLoggingSettingModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateAccessPolicyLoggingSettingModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings/{objectId}",
                "modelName": "AccessPolicyLoggingSettingModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "HitCountListContainer": {
            "getHitCount": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/operational/hitcounts",
                "modelName": "HitCountListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "HitCount": {
            "updateHitCount": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/operational/hitcounts",
                "modelName": "HitCount",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            },
            "deleteHitCount": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/operational/hitcounts",
                "modelName": "HitCount",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            }
        },
        "AccessPolicySecurityIntelligencePolicyListContainer": {
            "getAllAccessPolicySecurityIntelligencePolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/securityintelligencepolicies",
                "modelName": "AccessPolicySecurityIntelligencePolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AccessPolicySecurityIntelligencePolicy": {
            "getAccessPolicySecurityIntelligencePolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/securityintelligencepolicies/{objectId}",
                "modelName": "AccessPolicySecurityIntelligencePolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DNSPolicyListContainer": {
            "getAllDNSPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies",
                "modelName": "DNSPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AllowDNSRuleListContainer": {
            "getAllowDNSRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{containerUUID}/allowdnsrules",
                "modelName": "AllowDNSRuleListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "BlockDNSRuleListContainer": {
            "getBlockDNSRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{containerUUID}/blockdnsrules",
                "modelName": "BlockDNSRuleListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DNSPolicy": {
            "getDNSPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{objectId}",
                "modelName": "DNSPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DynamicAccessPolicyListContainer": {
            "getAllDynamicAccessPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies",
                "modelName": "DynamicAccessPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "DynamicAccessPolicy": {
            "createDynamicAccessPolicy": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies",
                "modelName": "DynamicAccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getDynamicAccessPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies/{objectId}",
                "modelName": "DynamicAccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateDynamicAccessPolicy": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies/{objectId}",
                "modelName": "DynamicAccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteDynamicAccessPolicy": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies/{objectId}",
                "modelName": "DynamicAccessPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FilePolicyListContainer": {
            "getAllFilePolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/filepolicies",
                "modelName": "FilePolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FilePolicy": {
            "getFilePolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/filepolicies/{objectId}",
                "modelName": "FilePolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDNatPolicyListContainer": {
            "getAllFTDNatPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies",
                "modelName": "FTDNatPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDNatPolicy": {
            "createFTDNatPolicy": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies",
                "modelName": "FTDNatPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDNatPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{objectId}",
                "modelName": "FTDNatPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDNatPolicy": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{objectId}",
                "modelName": "FTDNatPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDNatPolicy": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{objectId}",
                "modelName": "FTDNatPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDAutoNatRuleListContainer": {
            "getAllFTDAutoNatRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules",
                "modelName": "FTDAutoNatRuleListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDAutoNatRule": {
            "createMultipleFTDAutoNatRule": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules",
                "modelName": "FTDAutoNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        },
                        "section": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "getFTDAutoNatRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules/{objectId}",
                "modelName": "FTDAutoNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "section": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateFTDAutoNatRule": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules/{objectId}",
                "modelName": "FTDAutoNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "section": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "deleteFTDAutoNatRule": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules/{objectId}",
                "modelName": "FTDAutoNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDManualNatRuleListContainer": {
            "getAllFTDManualNatRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules",
                "modelName": "FTDManualNatRuleListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDManualNatRule": {
            "createMultipleFTDManualNatRule": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules",
                "modelName": "FTDManualNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        },
                        "section": {
                            "type": "string",
                            "required": false
                        },
                        "targetIndex": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "getFTDManualNatRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules/{objectId}",
                "modelName": "FTDManualNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "section": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateFTDManualNatRule": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules/{objectId}",
                "modelName": "FTDManualNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "section": {
                            "type": "string",
                            "required": false
                        },
                        "targetIndex": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "deleteFTDManualNatRule": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules/{objectId}",
                "modelName": "FTDManualNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDNatRuleListContainer": {
            "getAllFTDNatRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/natrules",
                "modelName": "FTDNatRuleListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDNatRule": {
            "getFTDNatRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/natrules/{objectId}",
                "modelName": "FTDNatRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "section": {
                            "type": "string",
                            "required": false
                        },
                        "filter": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDS2SVpnModelListContainer": {
            "getAllFTDS2SVpnModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns",
                "modelName": "FTDS2SVpnModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDS2SVpnModel": {
            "createFTDS2SVpnModel": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns",
                "modelName": "FTDS2SVpnModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getFTDS2SVpnModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{objectId}",
                "modelName": "FTDS2SVpnModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateFTDS2SVpnModel": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{objectId}",
                "modelName": "FTDS2SVpnModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteFTDS2SVpnModel": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{objectId}",
                "modelName": "FTDS2SVpnModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VpnAdvancedSettingsListContainer": {
            "getAllVpnAdvancedSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings",
                "modelName": "VpnAdvancedSettingsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VpnAdvancedSettings": {
            "getVpnAdvancedSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings/{objectId}",
                "modelName": "VpnAdvancedSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVpnAdvancedSettings": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings/{objectId}",
                "modelName": "VpnAdvancedSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VpnEndpointListContainer": {
            "getAllVpnEndpoint": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints",
                "modelName": "VpnEndpointListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VpnEndpoint": {
            "createVpnEndpoint": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints",
                "modelName": "VpnEndpoint",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getVpnEndpoint": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints/{objectId}",
                "modelName": "VpnEndpoint",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVpnEndpoint": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints/{objectId}",
                "modelName": "VpnEndpoint",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteVpnEndpoint": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints/{objectId}",
                "modelName": "VpnEndpoint",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VpnIkeSettingsListContainer": {
            "getAllVpnIkeSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings",
                "modelName": "VpnIkeSettingsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VpnIkeSettings": {
            "getVpnIkeSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings/{objectId}",
                "modelName": "VpnIkeSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVpnIkeSettings": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings/{objectId}",
                "modelName": "VpnIkeSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "VpnIPSecSettingsListContainer": {
            "getAllVpnIPSecSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings",
                "modelName": "VpnIPSecSettingsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "VpnIPSecSettings": {
            "getVpnIPSecSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings/{objectId}",
                "modelName": "VpnIPSecSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateVpnIPSecSettings": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings/{objectId}",
                "modelName": "VpnIPSecSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IdentityPolicyListContainer": {
            "getAllIdentityPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/identitypolicies",
                "modelName": "IdentityPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IdentityPolicy": {
            "getIdentityPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/identitypolicies/{objectId}",
                "modelName": "IdentityPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "IntrusionPolicyListContainer": {
            "getAllIntrusionPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies",
                "modelName": "IntrusionPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "IntrusionPolicy": {
            "createIntrusionPolicy": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies",
                "modelName": "IntrusionPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getIntrusionPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{objectId}",
                "modelName": "IntrusionPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "includeCount": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateIntrusionPolicy": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{objectId}",
                "modelName": "IntrusionPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "replicateInspectionMode": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "deleteIntrusionPolicy": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{objectId}",
                "modelName": "IntrusionPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Snort3IntrusionRuleGroupsListContainer": {
            "getAllSnort3IntrusionRuleGroups": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups",
                "modelName": "Snort3IntrusionRuleGroupsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "includeCount": {
                            "type": "string",
                            "required": false
                        },
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Snort3IntrusionRuleGroups": {
            "updateMultipleSnort3IntrusionRuleGroups": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups",
                "modelName": "Snort3IntrusionRuleGroups",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "getSnort3IntrusionRuleGroups": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups/{objectId}",
                "modelName": "Snort3IntrusionRuleGroups",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSnort3IntrusionRuleGroups": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups/{objectId}",
                "modelName": "Snort3IntrusionRuleGroups",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "removeRuleOverrides": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            }
        },
        "Snort3IPSRulesListContainer": {
            "getAllSnort3IPSRules": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules",
                "modelName": "Snort3IPSRulesListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": false
                        },
                        "sort": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Snort3IPSRules": {
            "updateMultipleSnort3IPSRules": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules",
                "modelName": "Snort3IPSRules",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "getSnort3IPSRules": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules/{objectId}",
                "modelName": "Snort3IPSRules",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSnort3IPSRules": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules/{objectId}",
                "modelName": "Snort3IPSRules",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Snort3NetworkAnalysisPolicyListContainer": {
            "getAllSnort3NetworkAnalysisPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies",
                "modelName": "Snort3NetworkAnalysisPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Snort3NetworkAnalysisPolicy": {
            "createSnort3NetworkAnalysisPolicy": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies",
                "modelName": "Snort3NetworkAnalysisPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getSnort3NetworkAnalysisPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{objectId}",
                "modelName": "Snort3NetworkAnalysisPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSnort3NetworkAnalysisPolicy": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{objectId}",
                "modelName": "Snort3NetworkAnalysisPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "replicateInspectionMode": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "deleteSnort3NetworkAnalysisPolicy": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{objectId}",
                "modelName": "Snort3NetworkAnalysisPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "InspectorConfigListContainer": {
            "getInspectorConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectorconfigs",
                "modelName": "InspectorConfigListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "inspectors": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "InspectorOverrideConfigListContainer": {
            "getInspectorOverrideConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectoroverrideconfigs",
                "modelName": "InspectorOverrideConfigListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "inspectors": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "InspectorOverrideConfig": {
            "updateInspectorOverrideConfig": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectoroverrideconfigs",
                "modelName": "InspectorOverrideConfig",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "PrefilterPolicyListContainer": {
            "getAllPrefilterPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies",
                "modelName": "PrefilterPolicyListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PrefilterPolicy": {
            "createPrefilterPolicy": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies",
                "modelName": "PrefilterPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getPrefilterPolicy": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{objectId}",
                "modelName": "PrefilterPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updatePrefilterPolicy": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{objectId}",
                "modelName": "PrefilterPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deletePrefilterPolicy": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{objectId}",
                "modelName": "PrefilterPolicy",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "PrefilterDefaultActionListContainer": {
            "getAllPrefilterDefaultAction": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions",
                "modelName": "PrefilterDefaultActionListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PrefilterDefaultAction": {
            "getPrefilterDefaultAction": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions/{objectId}",
                "modelName": "PrefilterDefaultAction",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updatePrefilterDefaultAction": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions/{objectId}",
                "modelName": "PrefilterDefaultAction",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "PrefilterHitCountListContainer": {
            "getPrefilterHitCount": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/operational/hitcounts",
                "modelName": "PrefilterHitCountListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PrefilterHitCount": {
            "updatePrefilterHitCount": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/operational/hitcounts",
                "modelName": "PrefilterHitCount",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            },
            "deletePrefilterHitCount": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/operational/hitcounts",
                "modelName": "PrefilterHitCount",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
            }
        },
        "PrefilterRuleListContainer": {
            "getAllPrefilterRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
                "modelName": "PrefilterRuleListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "ruleType": {
                            "type": "string",
                            "required": false
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "PrefilterRule": {
            "createMultiplePrefilterRule": {
                "method": "post",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
                "modelName": "PrefilterRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": false
                        },
                        "insertAfter": {
                            "type": "string",
                            "required": false
                        },
                        "insertBefore": {
                            "type": "string",
                            "required": false
                        }
                    }
                }
            },
            "updateMultiplePrefilterRule": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules",
                "modelName": "PrefilterRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "bulk": {
                            "type": "boolean",
                            "required": true
                        }
                    }
                }
            },
            "getPrefilterRule": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules/{objectId}",
                "modelName": "PrefilterRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updatePrefilterRule": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules/{objectId}",
                "modelName": "PrefilterRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deletePrefilterRule": {
                "method": "delete",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules/{objectId}",
                "modelName": "PrefilterRule",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDRAVpnModelListContainer": {
            "getAllFTDRAVpnModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns",
                "modelName": "FTDRAVpnModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDRAVpnAddressAssignmentSettingListContainer": {
            "getAllFTDRAVpnAddressAssignmentSetting": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/addressassignmentsettings",
                "modelName": "FTDRAVpnAddressAssignmentSettingListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDRAVpnAddressAssignmentSetting": {
            "getFTDRAVpnAddressAssignmentSetting": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/addressassignmentsettings/{objectId}",
                "modelName": "FTDRAVpnAddressAssignmentSetting",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDRAVpnCertificateMapSettingsListContainer": {
            "getAllFTDRAVpnCertificateMapSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/certificatemapsettings",
                "modelName": "FTDRAVpnCertificateMapSettingsListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDRAVpnCertificateMapSettings": {
            "getFTDRAVpnCertificateMapSettings": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/certificatemapsettings/{objectId}",
                "modelName": "FTDRAVpnCertificateMapSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDRAVpnConnectionProfileModelListContainer": {
            "getAllFTDRAVpnConnectionProfileModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/connectionprofiles",
                "modelName": "FTDRAVpnConnectionProfileModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "FTDRAVpnConnectionProfileModel": {
            "getFTDRAVpnConnectionProfileModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/connectionprofiles/{objectId}",
                "modelName": "FTDRAVpnConnectionProfileModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "FTDRAVpnModel": {
            "getFTDRAVpnModel": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{objectId}",
                "modelName": "FTDRAVpnModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SNMPConfigListContainer": {
            "getAllSNMPConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/snmpalerts",
                "modelName": "SNMPConfigListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SNMPConfig": {
            "getSNMPConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/snmpalerts/{objectId}",
                "modelName": "SNMPConfig",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "SyslogConfigListContainer": {
            "getAllSyslogConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/syslogalerts",
                "modelName": "SyslogConfigListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SyslogConfig": {
            "getSyslogConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/policy/syslogalerts/{objectId}",
                "modelName": "SyslogConfig",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "GlobalSearchListContainer": {
            "getGlobalSearch": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/search/global",
                "modelName": "GlobalSearchListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "GlobalObjectSearchListContainer": {
            "getGlobalObjectSearch": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/search/object",
                "modelName": "GlobalObjectSearchListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "GlobalPolicySearchListContainer": {
            "getGlobalPolicySearch": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/search/policy",
                "modelName": "GlobalPolicySearchListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "filter": {
                            "type": "string",
                            "required": true
                        },
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AuthRolesListContainer": {
            "getAllAuthRoles": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/users/authroles",
                "modelName": "AuthRolesListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SSOConfigListContainer": {
            "getAllSSOConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs",
                "modelName": "SSOConfigListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "SSOConfig": {
            "getSSOConfig": {
                "method": "get",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs/{objectId}",
                "modelName": "SSOConfig",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateSSOConfig": {
                "method": "put",
                "url": "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs/{objectId}",
                "modelName": "SSOConfig",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "AuditModelListContainer": {
            "getAllAuditModel": {
                "method": "get",
                "url": "/api/fmc_platform/v1/domain/{domainUUID}/audit/auditrecords",
                "modelName": "AuditModelListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "AuditModel": {
            "getAuditModel": {
                "method": "get",
                "url": "/api/fmc_platform/v1/domain/{domainUUID}/audit/auditrecords/{objectId}",
                "modelName": "AuditModel",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "DomainListContainer": {
            "getAllDomain": {
                "method": "get",
                "url": "/api/fmc_platform/v1/info/domain",
                "modelName": "DomainListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {},
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "Domain": {
            "getDomain": {
                "method": "get",
                "url": "/api/fmc_platform/v1/info/domain/{domainUUID}/{objectId}",
                "modelName": "Domain",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "ServerVersionListContainer": {
            "getAllServerVersion": {
                "method": "get",
                "url": "/api/fmc_platform/v1/info/serverversion",
                "modelName": "ServerVersionListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {},
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ServerVersion": {
            "getServerVersion": {
                "method": "get",
                "url": "/api/fmc_platform/v1/info/serverversion/{objectId}",
                "modelName": "ServerVersion",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "CancelUpgrade": {
            "createCancelUpgrade": {
                "method": "post",
                "url": "/api/fmc_platform/v1/updates/cancelupgrades",
                "modelName": "CancelUpgrade",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {},
                    "query": {}
                }
            }
        },
        "RetryUpgrade": {
            "createRetryUpgrade": {
                "method": "post",
                "url": "/api/fmc_platform/v1/updates/retryupgrades",
                "modelName": "RetryUpgrade",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {},
                    "query": {}
                }
            }
        },
        "UpgradePackageListContainer": {
            "getAllUpgradePackage": {
                "method": "get",
                "url": "/api/fmc_platform/v1/updates/upgradepackages",
                "modelName": "UpgradePackageListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {},
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "ApplicableDeviceListContainer": {
            "getAllApplicableDevice": {
                "method": "get",
                "url": "/api/fmc_platform/v1/updates/upgradepackages/{containerUUID}/applicabledevices",
                "modelName": "ApplicableDeviceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "containerUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "UpgradePackage": {
            "getUpgradePackage": {
                "method": "get",
                "url": "/api/fmc_platform/v1/updates/upgradepackages/{objectId}",
                "modelName": "UpgradePackage",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteUpgradePackage": {
                "method": "delete",
                "url": "/api/fmc_platform/v1/updates/upgradepackages/{objectId}",
                "modelName": "UpgradePackage",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "Upgrade": {
            "createUpgrade": {
                "method": "post",
                "url": "/api/fmc_platform/v1/updates/upgrades",
                "modelName": "Upgrade",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {},
                    "query": {}
                }
            }
        },
        "RESTTaxiiCollection": {
            "createRESTTaxiiCollection": {
                "method": "post",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/taxiiconfig/collections",
                "modelName": "RESTTaxiiCollection",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RESTDiscoveryInfo": {
            "createRESTDiscoveryInfo": {
                "method": "post",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/taxiiconfig/discoveryinfo",
                "modelName": "RESTDiscoveryInfo",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RESTElementListContainer": {
            "getAllRESTElement": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/element",
                "modelName": "RESTElementListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RESTElement": {
            "getRESTElement": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/element/{objectId}",
                "modelName": "RESTElement",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RESTIncidentListContainer": {
            "getAllRESTIncident": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident",
                "modelName": "RESTIncidentListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RESTIncident": {
            "getRESTIncident": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident/{objectId}",
                "modelName": "RESTIncident",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateRESTIncident": {
                "method": "put",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident/{objectId}",
                "modelName": "RESTIncident",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteRESTIncident": {
                "method": "delete",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident/{objectId}",
                "modelName": "RESTIncident",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RESTIndicatorListContainer": {
            "getAllRESTIndicator": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator",
                "modelName": "RESTIndicatorListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RESTIndicator": {
            "getRESTIndicator": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator/{objectId}",
                "modelName": "RESTIndicator",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateRESTIndicator": {
                "method": "put",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator/{objectId}",
                "modelName": "RESTIndicator",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RESTObservableListContainer": {
            "getAllRESTObservable": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable",
                "modelName": "RESTObservableListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RESTObservable": {
            "getRESTObservable": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable/{objectId}",
                "modelName": "RESTObservable",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateRESTObservable": {
                "method": "put",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable/{objectId}",
                "modelName": "RESTObservable",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RESTSettings": {
            "getRESTSettings": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/settings/{objectId}",
                "modelName": "RESTSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateRESTSettings": {
                "method": "put",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/settings/{objectId}",
                "modelName": "RESTSettings",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        },
        "RESTTidSourceListContainer": {
            "getAllRESTTidSource": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source",
                "modelName": "RESTTidSourceListContainer",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {
                        "offset": {
                            "type": "integer",
                            "required": false
                        },
                        "limit": {
                            "type": "integer",
                            "required": false
                        },
                        "expanded": {
                            "type": "boolean",
                            "required": false
                        }
                    }
                }
            }
        },
        "RESTTidSource": {
            "createRESTTidSource": {
                "method": "post",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source",
                "modelName": "RESTTidSource",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "getRESTTidSource": {
                "method": "get",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source/{objectId}",
                "modelName": "RESTTidSource",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "updateRESTTidSource": {
                "method": "put",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source/{objectId}",
                "modelName": "RESTTidSource",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            },
            "deleteRESTTidSource": {
                "method": "delete",
                "url": "/api/fmc_tid/v1/domain/{domainUUID}/tid/source/{objectId}",
                "modelName": "RESTTidSource",
                "returnMultipleItems": false,
                "parameters": {
                    "path": {
                        "objectId": {
                            "type": "string",
                            "required": true
                        },
                        "domainUUID": {
                            "type": "string",
                            "required": true
                        }
                    },
                    "query": {}
                }
            }
        }
    }
}